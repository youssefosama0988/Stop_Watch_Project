

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jun 02 16:11:07 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 23/03/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   00198E                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _seg_common_anode_values
    73   00198E  C0                 	db	192
    74   00198F  F9                 	db	249
    75   001990  A4                 	db	164
    76   001991  B0                 	db	176
    77   001992  99                 	db	153
    78   001993  92                 	db	146
    79   001994  82                 	db	130
    80   001995  F8                 	db	248
    81   001996  80                 	db	128
    82   001997  90                 	db	144
    83                           
    84                           ;initializer for _port_registers
    85   001998  80                 	db	128
    86   001999  0F                 	db	15
    87   00199A  81                 	db	129
    88   00199B  0F                 	db	15
    89   00199C  82                 	db	130
    90   00199D  0F                 	db	15
    91   00199E  83                 	db	131
    92   00199F  0F                 	db	15
    93   0019A0  84                 	db	132
    94   0019A1  0F                 	db	15
    95                           
    96                           ;initializer for _lat_registers
    97   0019A2  89                 	db	137
    98   0019A3  0F                 	db	15
    99   0019A4  8A                 	db	138
   100   0019A5  0F                 	db	15
   101   0019A6  8B                 	db	139
   102   0019A7  0F                 	db	15
   103   0019A8  8C                 	db	140
   104   0019A9  0F                 	db	15
   105   0019AA  8D                 	db	141
   106   0019AB  0F                 	db	15
   107                           
   108                           ;initializer for _tris_registers
   109   0019AC  92                 	db	146
   110   0019AD  0F                 	db	15
   111   0019AE  93                 	db	147
   112   0019AF  0F                 	db	15
   113   0019B0  94                 	db	148
   114   0019B1  0F                 	db	15
   115   0019B2  95                 	db	149
   116   0019B3  0F                 	db	15
   117   0019B4  96                 	db	150
   118   0019B5  0F                 	db	15
   119                           
   120                           ;initializer for _hours
   121   0019B6  17                 	db	23
   122                           
   123                           ;initializer for _minutes
   124   0019B7  3B                 	db	59
   125                           
   126                           ;initializer for _seconds
   127   0019B8  37                 	db	55
   128                           
   129                           ;initializer for _lcd2
   130   0019B9  32                 	db	50
   131   0019BA  3A                 	db	58
   132   0019BB  03                 	db	3
   133   0019BC  0B                 	db	11
   134   0019BD  13                 	db	19
   135   0019BE  1B                 	db	27
   136   0019BF  23                 	db	35
   137   0019C0  2B                 	db	43
   138   0019C1  33                 	db	51
   139   0019C2  3B                 	db	59
   140                           
   141                           ;initializer for _lcd1
   142   0019C3  02                 	db	2
   143   0019C4  0A                 	db	10
   144   0019C5  12                 	db	18
   145   0019C6  1A                 	db	26
   146   0019C7  22                 	db	34
   147   0019C8  2A                 	db	42
   148                           
   149                           ;initializer for __7seg
   150   0019C9  02                 	db	2
   151   0019CA  0A                 	db	10
   152   0019CB  12                 	db	18
   153   0019CC  1A                 	db	26
   154   0019CD  00                 	db	0
   155                           
   156                           	psect	nvCOMRAM
   157   00005F                     __pnvCOMRAM:
   158                           	callstack 0
   159   00005F                     _ret:
   160                           	callstack 0
   161   00005F                     	ds	1
   162   000000                     _PORTE	set	3972
   163   000000                     _PORTD	set	3971
   164   000000                     _PORTC	set	3970
   165   000000                     _PORTB	set	3969
   166   000000                     _PORTA	set	3968
   167   000000                     _LATA	set	3977
   168   000000                     _TRISA	set	3986
   169   000000                     _TRISE	set	3990
   170   000000                     _TRISD	set	3989
   171   000000                     _TRISC	set	3988
   172   000000                     _TRISB	set	3987
   173   000000                     _LATE	set	3981
   174   000000                     _LATD	set	3980
   175   000000                     _LATC	set	3979
   176   000000                     _LATB	set	3978
   177                           
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181   001A06                     __pcinit:
   182                           	callstack 0
   183   001A06                     start_initialization:
   184                           	callstack 0
   185   001A06                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to COMRAM (64 bytes)
   189                           ; load TBLPTR registers with __pidataCOMRAM
   190   001A06  0E8E               	movlw	low __pidataCOMRAM
   191   001A08  6EF6               	movwf	tblptrl,c
   192   001A0A  0E19               	movlw	high __pidataCOMRAM
   193   001A0C  6EF7               	movwf	tblptrh,c
   194   001A0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   195   001A10  6EF8               	movwf	tblptru,c
   196   001A12  EE00  F001         	lfsr	0,__pdataCOMRAM
   197   001A16  EE10 F040          	lfsr	1,64
   198   001A1A                     copy_data0:
   199   001A1A  0009               	tblrd		*+
   200   001A1C  CFF5 FFEE          	movff	tablat,postinc0
   201   001A20  50E5               	movf	postdec1,w,c
   202   001A22  50E1               	movf	fsr1l,w,c
   203   001A24  E1FA               	bnz	copy_data0
   204                           
   205                           ; Clear objects allocated to COMRAM (8 bytes)
   206   001A26  EE00  F057         	lfsr	0,__pbssCOMRAM
   207   001A2A  0E08               	movlw	8
   208   001A2C                     clear_0:
   209   001A2C  6AEE               	clrf	postinc0,c
   210   001A2E  06E8               	decf	wreg,f,c
   211   001A30  E1FD               	bnz	clear_0
   212   001A32                     end_of_initialization:
   213                           	callstack 0
   214   001A32                     __end_of__initialization:
   215                           	callstack 0
   216   001A32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   001A34  6EF8               	movwf	tblptru,c
   218   001A36  0100               	movlb	0
   219   001A38  EF01  F008         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   000057                     __pbssCOMRAM:
   223                           	callstack 0
   224   000057                     relay_toggle@F2899:
   225                           	callstack 0
   226   000057                     	ds	1
   227   000058                     relay_turn_off@F2894:
   228                           	callstack 0
   229   000058                     	ds	1
   230   000059                     relay_turn_on@F2889:
   231                           	callstack 0
   232   000059                     	ds	1
   233   00005A                     relay_initialize@F2884:
   234                           	callstack 0
   235   00005A                     	ds	1
   236   00005B                     led_toggle@F2903:
   237                           	callstack 0
   238   00005B                     	ds	1
   239   00005C                     led_turn_off@F2898:
   240                           	callstack 0
   241   00005C                     	ds	1
   242   00005D                     led_turn_on@F2893:
   243                           	callstack 0
   244   00005D                     	ds	1
   245   00005E                     led_initialize@F2888:
   246                           	callstack 0
   247   00005E                     	ds	1
   248                           
   249                           	psect	dataCOMRAM
   250   000001                     __pdataCOMRAM:
   251                           	callstack 0
   252   000001                     _seg_common_anode_values:
   253                           	callstack 0
   254   000001                     	ds	10
   255   00000B                     _port_registers:
   256                           	callstack 0
   257   00000B                     	ds	10
   258   000015                     _lat_registers:
   259                           	callstack 0
   260   000015                     	ds	10
   261   00001F                     _tris_registers:
   262                           	callstack 0
   263   00001F                     	ds	10
   264   000029                     _hours:
   265                           	callstack 0
   266   000029                     	ds	1
   267   00002A                     _minutes:
   268                           	callstack 0
   269   00002A                     	ds	1
   270   00002B                     _seconds:
   271                           	callstack 0
   272   00002B                     	ds	1
   273   00002C                     _lcd2:
   274                           	callstack 0
   275   00002C                     	ds	10
   276   000036                     _lcd1:
   277                           	callstack 0
   278   000036                     	ds	6
   279   00003C                     __7seg:
   280                           	callstack 0
   281   00003C                     	ds	5
   282                           
   283                           	psect	cstackCOMRAM
   284   000041                     __pcstackCOMRAM:
   285                           	callstack 0
   286   000041                     ?___awdiv:
   287                           	callstack 0
   288   000041                     ?___awmod:
   289                           	callstack 0
   290   000041                     gpio_pin_write_logic@pin:
   291                           	callstack 0
   292   000041                     gpio_port_direction_initialize@direction:
   293                           	callstack 0
   294   000041                     gpio_port_write_logic@logic:
   295                           	callstack 0
   296   000041                     ___awdiv@dividend:
   297                           	callstack 0
   298   000041                     ___awmod@dividend:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x0
   302   000041                     	ds	1
   303   000042                     ??_gpio_port_direction_initialize:
   304   000042                     ??_gpio_port_write_logic:
   305   000042                     gpio_pin_write_logic@logic:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309   000042                     	ds	1
   310   000043                     ??_gpio_pin_write_logic:
   311   000043                     ___awdiv@divisor:
   312                           	callstack 0
   313   000043                     ___awmod@divisor:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2
   317   000043                     	ds	1
   318   000044                     gpio_port_direction_initialize@ret:
   319                           	callstack 0
   320   000044                     gpio_port_write_logic@ret:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x3
   324   000044                     	ds	1
   325   000045                     gpio_port_direction_initialize@port:
   326                           	callstack 0
   327   000045                     gpio_port_write_logic@port:
   328                           	callstack 0
   329   000045                     ___awdiv@counter:
   330                           	callstack 0
   331   000045                     ___awmod@counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x4
   335   000045                     	ds	1
   336   000046                     ___awdiv@sign:
   337                           	callstack 0
   338   000046                     ___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000046                     	ds	1
   343   000047                     ___awdiv@quotient:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x6
   347   000047                     	ds	1
   348   000048                     gpio_pin_write_logic@ret:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x7
   352   000048                     	ds	1
   353   000049                     lcd_send_4bits@lcd:
   354                           	callstack 0
   355   000049                     lcd_4bits_send_enable_signal@lcd:
   356                           	callstack 0
   357   000049                     lcd_8bits_send_enable_signal@lcd:
   358                           	callstack 0
   359   000049                     gpio_pin_direction_initialize_write@pin:
   360                           	callstack 0
   361   000049                     seven_segement_write_number@seg:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x8
   365   000049                     	ds	1
   366   00004A                     ??_gpio_pin_direction_initialize_write:
   367   00004A                     lcd_send_4bits@data_command:
   368                           	callstack 0
   369   00004A                     lcd_4bits_send_enable_signal@ret:
   370                           	callstack 0
   371   00004A                     lcd_8bits_send_enable_signal@ret:
   372                           	callstack 0
   373   00004A                     seven_segement_write_number@number:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x9
   377   00004A                     	ds	1
   378   00004B                     lcd_8bit_send_command@lcd:
   379                           	callstack 0
   380   00004B                     lcd_send_4bits@ret:
   381                           	callstack 0
   382   00004B                     seven_segement_write_number@ret:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xA
   386   00004B                     	ds	1
   387   00004C                     lcd_4bit_send_command@lcd:
   388                           	callstack 0
   389   00004C                     lcd_8bit_send_command@command:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0xB
   393   00004C                     	ds	1
   394   00004D                     ??_lcd_8bit_send_command:
   395   00004D                     lcd_4bit_send_command@command:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xC
   399   00004D                     	ds	1
   400   00004E                     lcd_4bit_send_command@ret:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xD
   404   00004E                     	ds	1
   405   00004F                     lcd_8bit_send_command@ret:
   406                           	callstack 0
   407   00004F                     gpio_pin_direction_initialize_write@ret:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xE
   411   00004F                     	ds	1
   412   000050                     lcd_4bit_initialize@lcd:
   413                           	callstack 0
   414   000050                     lcd_8bit_send_command@l_pin_counter:
   415                           	callstack 0
   416   000050                     seven_segement_intialize@seg:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xF
   420   000050                     	ds	1
   421   000051                     ??_lcd_4bit_initialize:
   422   000051                     lcd_8bit_initialize@lcd:
   423                           	callstack 0
   424   000051                     seven_segement_intialize@ret:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x10
   428   000051                     	ds	1
   429   000052                     ??_lcd_8bit_initialize:
   430   000052                     lcd_4bit_initialize@l_counter:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x11
   434   000052                     	ds	1
   435   000053                     lcd_4bit_initialize@ret:
   436                           	callstack 0
   437   000053                     lcd_8bit_initialize@l_counter:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x12
   441   000053                     	ds	1
   442   000054                     lcd_8bit_initialize@ret:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x13
   446   000054                     	ds	1
   447   000055                     main@i:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x14
   451   000055                     	ds	2
   452                           
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 16 in file "application.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  i               2   20[COMRAM] int 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  2  435[None  ] int 
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        2 bytes
   477 ;; Hardware stack levels required when called: 5
   478 ;; This function calls:
   479 ;;		___awdiv
   480 ;;		___awmod
   481 ;;		_application_initialize
   482 ;;		_gpio_port_write_logic
   483 ;;		_seven_segement_write_number
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text0
   490   001002                     __ptext0:
   491                           	callstack 0
   492   001002                     _main:
   493                           	callstack 26
   494   001002                     
   495                           ;application.c: 17:     application_initialize();
   496   001002  ECE7  F00C         	call	_application_initialize	;wreg free
   497   001006                     l2632:
   498                           
   499                           ;application.c: 19:         for(int i =0;i<80;i++){
   500   001006  0E00               	movlw	0
   501   001008  6E56               	movwf	(main@i+1)^0,c
   502   00100A  0E00               	movlw	0
   503   00100C  6E55               	movwf	main@i^0,c
   504   00100E                     l2638:
   505                           
   506                           ;application.c: 20:             ret = gpio_port_write_logic(PORTD_INDEX , 0x02);
   507   00100E  0E02               	movlw	2
   508   001010  6E41               	movwf	gpio_port_write_logic@logic^0,c
   509   001012  0E03               	movlw	3
   510   001014  EC85  F00C         	call	_gpio_port_write_logic
   511   001018  6E5F               	movwf	_ret^0,c
   512                           
   513                           ;application.c: 21:             ret = seven_segement_write_number(&_7seg , hours/10);
   514   00101A  0E3C               	movlw	low __7seg
   515   00101C  6E49               	movwf	seven_segement_write_number@seg^0,c
   516   00101E  C029  F041         	movff	_hours,___awdiv@dividend
   517   001022  6A42               	clrf	(___awdiv@dividend+1)^0,c
   518   001024  0E00               	movlw	0
   519   001026  6E44               	movwf	(___awdiv@divisor+1)^0,c
   520   001028  0E0A               	movlw	10
   521   00102A  6E43               	movwf	___awdiv@divisor^0,c
   522   00102C  ECD6  F00A         	call	___awdiv	;wreg free
   523   001030  5041               	movf	?___awdiv^0,w,c
   524   001032  6E4A               	movwf	seven_segement_write_number@number^0,c
   525   001034  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   526   001038  6E5F               	movwf	_ret^0,c
   527   00103A                     
   528                           ;application.c: 22:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   529   00103A  0EC8               	movlw	200
   530   00103C                     u1757:
   531   00103C  D000               	nop2	
   532   00103E  2EE8               	decfsz	wreg,f,c
   533   001040  D7FD               	bra	u1757
   534   001042                     
   535                           ;application.c: 23:             ret = gpio_port_write_logic(PORTD_INDEX , 0x04);
   536   001042  0E04               	movlw	4
   537   001044  6E41               	movwf	gpio_port_write_logic@logic^0,c
   538   001046  0E03               	movlw	3
   539   001048  EC85  F00C         	call	_gpio_port_write_logic
   540   00104C  6E5F               	movwf	_ret^0,c
   541   00104E                     
   542                           ;application.c: 24:             ret = seven_segement_write_number(&_7seg , hours%10);
   543   00104E  0E3C               	movlw	low __7seg
   544   001050  6E49               	movwf	seven_segement_write_number@seg^0,c
   545   001052  C029  F041         	movff	_hours,___awmod@dividend
   546   001056  6A42               	clrf	(___awmod@dividend+1)^0,c
   547   001058  0E00               	movlw	0
   548   00105A  6E44               	movwf	(___awmod@divisor+1)^0,c
   549   00105C  0E0A               	movlw	10
   550   00105E  6E43               	movwf	___awmod@divisor^0,c
   551   001060  EC38  F00B         	call	___awmod	;wreg free
   552   001064  5041               	movf	?___awmod^0,w,c
   553   001066  6E4A               	movwf	seven_segement_write_number@number^0,c
   554   001068  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   555   00106C  6E5F               	movwf	_ret^0,c
   556   00106E                     
   557                           ;application.c: 25:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   558   00106E  0EC8               	movlw	200
   559   001070                     u1767:
   560   001070  D000               	nop2	
   561   001072  2EE8               	decfsz	wreg,f,c
   562   001074  D7FD               	bra	u1767
   563                           
   564                           ;application.c: 26:             ret = gpio_port_write_logic(PORTD_INDEX , 0x08);
   565   001076  0E08               	movlw	8
   566   001078  6E41               	movwf	gpio_port_write_logic@logic^0,c
   567   00107A  0E03               	movlw	3
   568   00107C  EC85  F00C         	call	_gpio_port_write_logic
   569   001080  6E5F               	movwf	_ret^0,c
   570                           
   571                           ;application.c: 27:             ret = seven_segement_write_number(&_7seg , minutes/10);
   572   001082  0E3C               	movlw	low __7seg
   573   001084  6E49               	movwf	seven_segement_write_number@seg^0,c
   574   001086  C02A  F041         	movff	_minutes,___awdiv@dividend
   575   00108A  6A42               	clrf	(___awdiv@dividend+1)^0,c
   576   00108C  0E00               	movlw	0
   577   00108E  6E44               	movwf	(___awdiv@divisor+1)^0,c
   578   001090  0E0A               	movlw	10
   579   001092  6E43               	movwf	___awdiv@divisor^0,c
   580   001094  ECD6  F00A         	call	___awdiv	;wreg free
   581   001098  5041               	movf	?___awdiv^0,w,c
   582   00109A  6E4A               	movwf	seven_segement_write_number@number^0,c
   583   00109C  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   584   0010A0  6E5F               	movwf	_ret^0,c
   585   0010A2                     
   586                           ;application.c: 28:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   587   0010A2  0EC8               	movlw	200
   588   0010A4                     u1777:
   589   0010A4  D000               	nop2	
   590   0010A6  2EE8               	decfsz	wreg,f,c
   591   0010A8  D7FD               	bra	u1777
   592   0010AA                     
   593                           ;application.c: 29:             ret = gpio_port_write_logic(PORTD_INDEX , 0x10);
   594   0010AA  0E10               	movlw	16
   595   0010AC  6E41               	movwf	gpio_port_write_logic@logic^0,c
   596   0010AE  0E03               	movlw	3
   597   0010B0  EC85  F00C         	call	_gpio_port_write_logic
   598   0010B4  6E5F               	movwf	_ret^0,c
   599   0010B6                     
   600                           ;application.c: 30:             ret = seven_segement_write_number(&_7seg , minutes%10);
   601   0010B6  0E3C               	movlw	low __7seg
   602   0010B8  6E49               	movwf	seven_segement_write_number@seg^0,c
   603   0010BA  C02A  F041         	movff	_minutes,___awmod@dividend
   604   0010BE  6A42               	clrf	(___awmod@dividend+1)^0,c
   605   0010C0  0E00               	movlw	0
   606   0010C2  6E44               	movwf	(___awmod@divisor+1)^0,c
   607   0010C4  0E0A               	movlw	10
   608   0010C6  6E43               	movwf	___awmod@divisor^0,c
   609   0010C8  EC38  F00B         	call	___awmod	;wreg free
   610   0010CC  5041               	movf	?___awmod^0,w,c
   611   0010CE  6E4A               	movwf	seven_segement_write_number@number^0,c
   612   0010D0  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   613   0010D4  6E5F               	movwf	_ret^0,c
   614   0010D6                     
   615                           ;application.c: 31:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   616   0010D6  0EC8               	movlw	200
   617   0010D8                     u1787:
   618   0010D8  D000               	nop2	
   619   0010DA  2EE8               	decfsz	wreg,f,c
   620   0010DC  D7FD               	bra	u1787
   621                           
   622                           ;application.c: 32:             ret = gpio_port_write_logic(PORTD_INDEX , 0x20);
   623   0010DE  0E20               	movlw	32
   624   0010E0  6E41               	movwf	gpio_port_write_logic@logic^0,c
   625   0010E2  0E03               	movlw	3
   626   0010E4  EC85  F00C         	call	_gpio_port_write_logic
   627   0010E8  6E5F               	movwf	_ret^0,c
   628                           
   629                           ;application.c: 33:             ret = seven_segement_write_number(&_7seg , seconds/10);
   630   0010EA  0E3C               	movlw	low __7seg
   631   0010EC  6E49               	movwf	seven_segement_write_number@seg^0,c
   632   0010EE  C02B  F041         	movff	_seconds,___awdiv@dividend
   633   0010F2  6A42               	clrf	(___awdiv@dividend+1)^0,c
   634   0010F4  0E00               	movlw	0
   635   0010F6  6E44               	movwf	(___awdiv@divisor+1)^0,c
   636   0010F8  0E0A               	movlw	10
   637   0010FA  6E43               	movwf	___awdiv@divisor^0,c
   638   0010FC  ECD6  F00A         	call	___awdiv	;wreg free
   639   001100  5041               	movf	?___awdiv^0,w,c
   640   001102  6E4A               	movwf	seven_segement_write_number@number^0,c
   641   001104  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   642   001108  6E5F               	movwf	_ret^0,c
   643   00110A                     
   644                           ;application.c: 34:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   645   00110A  0EC8               	movlw	200
   646   00110C                     u1797:
   647   00110C  D000               	nop2	
   648   00110E  2EE8               	decfsz	wreg,f,c
   649   001110  D7FD               	bra	u1797
   650   001112                     
   651                           ;application.c: 35:             ret = gpio_port_write_logic(PORTD_INDEX , 0x40);
   652   001112  0E40               	movlw	64
   653   001114  6E41               	movwf	gpio_port_write_logic@logic^0,c
   654   001116  0E03               	movlw	3
   655   001118  EC85  F00C         	call	_gpio_port_write_logic
   656   00111C  6E5F               	movwf	_ret^0,c
   657   00111E                     
   658                           ;application.c: 36:             ret = seven_segement_write_number(&_7seg , seconds%10);
   659   00111E  0E3C               	movlw	low __7seg
   660   001120  6E49               	movwf	seven_segement_write_number@seg^0,c
   661   001122  C02B  F041         	movff	_seconds,___awmod@dividend
   662   001126  6A42               	clrf	(___awmod@dividend+1)^0,c
   663   001128  0E00               	movlw	0
   664   00112A  6E44               	movwf	(___awmod@divisor+1)^0,c
   665   00112C  0E0A               	movlw	10
   666   00112E  6E43               	movwf	___awmod@divisor^0,c
   667   001130  EC38  F00B         	call	___awmod	;wreg free
   668   001134  5041               	movf	?___awmod^0,w,c
   669   001136  6E4A               	movwf	seven_segement_write_number@number^0,c
   670   001138  EC90  F00B         	call	_seven_segement_write_number	;wreg free
   671   00113C  6E5F               	movwf	_ret^0,c
   672   00113E                     
   673                           ;application.c: 37:             _delay((unsigned long)((500)*(8000000/4000000.0)));
   674   00113E  0EC8               	movlw	200
   675   001140                     u1807:
   676   001140  D000               	nop2	
   677   001142  2EE8               	decfsz	wreg,f,c
   678   001144  D7FD               	bra	u1807
   679   001146                     
   680                           ;application.c: 38:         }
   681   001146  4A55               	infsnz	main@i^0,f,c
   682   001148  2A56               	incf	(main@i+1)^0,f,c
   683   00114A  BE56               	btfsc	(main@i+1)^0,7,c
   684   00114C  EFB1  F008         	goto	u1711
   685   001150  5056               	movf	(main@i+1)^0,w,c
   686   001152  E109               	bnz	u1710
   687   001154  0E50               	movlw	80
   688   001156  5C55               	subwf	main@i^0,w,c
   689   001158  A0D8               	btfss	status,0,c
   690   00115A  EFB1  F008         	goto	u1711
   691   00115E  EFB3  F008         	goto	u1710
   692   001162                     u1711:
   693   001162  EF07  F008         	goto	l2638
   694   001166                     u1710:
   695   001166                     
   696                           ;application.c: 39:         seconds++;
   697   001166  2A2B               	incf	_seconds^0,f,c
   698   001168                     
   699                           ;application.c: 40:         if(60 == seconds){
   700   001168  0E3C               	movlw	60
   701   00116A  182B               	xorwf	_seconds^0,w,c
   702   00116C  A4D8               	btfss	status,2,c
   703   00116E  EFBB  F008         	goto	u1721
   704   001172  EFBD  F008         	goto	u1720
   705   001176                     u1721:
   706   001176  EFC0  F008         	goto	l2676
   707   00117A                     u1720:
   708   00117A                     
   709                           ;application.c: 41:             seconds =0;
   710   00117A  0E00               	movlw	0
   711   00117C  6E2B               	movwf	_seconds^0,c
   712   00117E                     
   713                           ;application.c: 42:             minutes++;
   714   00117E  2A2A               	incf	_minutes^0,f,c
   715   001180                     l2676:
   716                           
   717                           ;application.c: 44:         if(60 == minutes){
   718   001180  0E3C               	movlw	60
   719   001182  182A               	xorwf	_minutes^0,w,c
   720   001184  A4D8               	btfss	status,2,c
   721   001186  EFC7  F008         	goto	u1731
   722   00118A  EFC9  F008         	goto	u1730
   723   00118E                     u1731:
   724   00118E  EFCC  F008         	goto	l2682
   725   001192                     u1730:
   726   001192                     
   727                           ;application.c: 45:             minutes =0;
   728   001192  0E00               	movlw	0
   729   001194  6E2A               	movwf	_minutes^0,c
   730   001196                     
   731                           ;application.c: 46:             hours++;
   732   001196  2A29               	incf	_hours^0,f,c
   733   001198                     l2682:
   734                           
   735                           ;application.c: 48:         if(24 == hours){
   736   001198  0E18               	movlw	24
   737   00119A  1829               	xorwf	_hours^0,w,c
   738   00119C  A4D8               	btfss	status,2,c
   739   00119E  EFD3  F008         	goto	u1741
   740   0011A2  EFD5  F008         	goto	u1740
   741   0011A6                     u1741:
   742   0011A6  EF03  F008         	goto	l2632
   743   0011AA                     u1740:
   744   0011AA                     
   745                           ;application.c: 49:             hours =0;
   746   0011AA  0E00               	movlw	0
   747   0011AC  6E29               	movwf	_hours^0,c
   748   0011AE  EF03  F008         	goto	l2632
   749   0011B2  EF00  F000         	goto	start
   750   0011B6                     __end_of_main:
   751                           	callstack 0
   752                           
   753 ;; *************** function _seven_segement_write_number *****************
   754 ;; Defined at:
   755 ;;		line 32 in file "ECU_Layer/7seg/7_seg.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  seg             1    8[COMRAM] PTR const struct .
   758 ;;		 -> _7seg(5), 
   759 ;;  number          1    9[COMRAM] unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  ret             1   10[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      unsigned char 
   764 ;; Registers used:
   765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 1
   778 ;; This function calls:
   779 ;;		_gpio_pin_write_logic
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786   001720                     __ptext1:
   787                           	callstack 0
   788   001720                     _seven_segement_write_number:
   789                           	callstack 29
   790   001720                     
   791                           ;ECU_Layer/7seg/7_seg.c: 34:     if((((void*)0) == seg) && (number > 9)){
   792   001720  5049               	movf	seven_segement_write_number@seg^0,w,c
   793   001722  A4D8               	btfss	status,2,c
   794   001724  EF96  F00B         	goto	u1371
   795   001728  EF98  F00B         	goto	u1370
   796   00172C                     u1371:
   797   00172C  EFA4  F00B         	goto	l2332
   798   001730                     u1370:
   799   001730  0E09               	movlw	9
   800   001732  644A               	cpfsgt	seven_segement_write_number@number^0,c
   801   001734  EF9E  F00B         	goto	u1381
   802   001738  EFA0  F00B         	goto	u1380
   803   00173C                     u1381:
   804   00173C  EFA4  F00B         	goto	l2332
   805   001740                     u1380:
   806   001740                     
   807                           ;ECU_Layer/7seg/7_seg.c: 35:         ret = (Std_ReturnType)0x00;
   808   001740  0E00               	movlw	0
   809   001742  6E4B               	movwf	seven_segement_write_number@ret^0,c
   810                           
   811                           ;ECU_Layer/7seg/7_seg.c: 36:     }
   812   001744  EFCB  F00B         	goto	l2334
   813   001748                     l2332:
   814                           
   815                           ;ECU_Layer/7seg/7_seg.c: 38:         ret = gpio_pin_write_logic(&(seg->segment_pins[0]),
      +                           number & 0x01);
   816   001748  C049  F041         	movff	seven_segement_write_number@seg,gpio_pin_write_logic@pin
   817   00174C  504A               	movf	seven_segement_write_number@number^0,w,c
   818   00174E  0B01               	andlw	1
   819   001750  6E42               	movwf	gpio_pin_write_logic@logic^0,c
   820   001752  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
   821   001756  6E4B               	movwf	seven_segement_write_number@ret^0,c
   822                           
   823                           ;ECU_Layer/7seg/7_seg.c: 39:         ret = gpio_pin_write_logic(&(seg->segment_pins[1]),
      +                           (number>>1) & 0x01);
   824   001758  2849               	incf	seven_segement_write_number@seg^0,w,c
   825   00175A  6E41               	movwf	gpio_pin_write_logic@pin^0,c
   826   00175C  90D8               	bcf	status,0,c
   827   00175E  304A               	rrcf	seven_segement_write_number@number^0,w,c
   828   001760  0B01               	andlw	1
   829   001762  6E42               	movwf	gpio_pin_write_logic@logic^0,c
   830   001764  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
   831   001768  6E4B               	movwf	seven_segement_write_number@ret^0,c
   832                           
   833                           ;ECU_Layer/7seg/7_seg.c: 40:         ret = gpio_pin_write_logic(&(seg->segment_pins[2]),
      +                           (number>>2) & 0x01);
   834   00176A  5049               	movf	seven_segement_write_number@seg^0,w,c
   835   00176C  0F02               	addlw	2
   836   00176E  6E41               	movwf	gpio_pin_write_logic@pin^0,c
   837   001770  404A               	rrncf	seven_segement_write_number@number^0,w,c
   838   001772  42E8               	rrncf	wreg,f,c
   839   001774  0B3F               	andlw	63
   840   001776  0B01               	andlw	1
   841   001778  6E42               	movwf	gpio_pin_write_logic@logic^0,c
   842   00177A  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
   843   00177E  6E4B               	movwf	seven_segement_write_number@ret^0,c
   844                           
   845                           ;ECU_Layer/7seg/7_seg.c: 41:         ret = gpio_pin_write_logic(&(seg->segment_pins[3]),
      +                           (number>>3) & 0x01);
   846   001780  5049               	movf	seven_segement_write_number@seg^0,w,c
   847   001782  0F03               	addlw	3
   848   001784  6E41               	movwf	gpio_pin_write_logic@pin^0,c
   849   001786  384A               	swapf	seven_segement_write_number@number^0,w,c
   850   001788  46E8               	rlncf	wreg,f,c
   851   00178A  0B1F               	andlw	31
   852   00178C  0B01               	andlw	1
   853   00178E  6E42               	movwf	gpio_pin_write_logic@logic^0,c
   854   001790  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
   855   001794  6E4B               	movwf	seven_segement_write_number@ret^0,c
   856   001796                     l2334:
   857                           
   858                           ;ECU_Layer/7seg/7_seg.c: 43:     return ret;
   859   001796  504B               	movf	seven_segement_write_number@ret^0,w,c
   860   001798  0012               	return		;funcret
   861   00179A                     __end_of_seven_segement_write_number:
   862                           	callstack 0
   863                           
   864 ;; *************** function _gpio_port_write_logic *****************
   865 ;; Defined at:
   866 ;;		line 199 in file "MCAL_Layer/GPIO/hal_gpio.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  port            1    wreg     enum E2826
   869 ;;  logic           1    0[COMRAM] unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  port            1    4[COMRAM] enum E2826
   872 ;;  ret             1    3[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      unsigned char 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:        5 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text2
   896   00190A                     __ptext2:
   897                           	callstack 0
   898   00190A                     _gpio_port_write_logic:
   899                           	callstack 30
   900                           
   901                           ;incstack = 0
   902                           ;gpio_port_write_logic@port stored from wreg
   903   00190A  6E45               	movwf	gpio_port_write_logic@port^0,c
   904   00190C                     
   905                           ;MCAL_Layer/GPIO/hal_gpio.c: 200:     Std_ReturnType ret = (Std_ReturnType)0x01;
   906   00190C  0E01               	movlw	1
   907   00190E  6E44               	movwf	gpio_port_write_logic@ret^0,c
   908   001910                     
   909                           ;MCAL_Layer/GPIO/hal_gpio.c: 202:     if(port > 4){
   910   001910  0E04               	movlw	4
   911   001912  6445               	cpfsgt	gpio_port_write_logic@port^0,c
   912   001914  EF8E  F00C         	goto	u1361
   913   001918  EF90  F00C         	goto	u1360
   914   00191C                     u1361:
   915   00191C  EF94  F00C         	goto	l2320
   916   001920                     u1360:
   917   001920                     
   918                           ;MCAL_Layer/GPIO/hal_gpio.c: 203:         ret = (Std_ReturnType)0x00;
   919   001920  0E00               	movlw	0
   920   001922  6E44               	movwf	gpio_port_write_logic@ret^0,c
   921                           
   922                           ;MCAL_Layer/GPIO/hal_gpio.c: 204:     }
   923   001924  EFA4  F00C         	goto	l2322
   924   001928                     l2320:
   925                           
   926                           ;MCAL_Layer/GPIO/hal_gpio.c: 206:         *lat_registers[port]=logic;
   927   001928  5045               	movf	gpio_port_write_logic@port^0,w,c
   928   00192A  0D02               	mullw	2
   929   00192C  50F3               	movf	243,w,c
   930   00192E  0F15               	addlw	low _lat_registers
   931   001930  6ED9               	movwf	fsr2l,c
   932   001932  6ADA               	clrf	fsr2h,c
   933   001934  CFDE F042          	movff	postinc2,??_gpio_port_write_logic
   934   001938  CFDD F043          	movff	postdec2,??_gpio_port_write_logic+1
   935   00193C  C042  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   936   001940  C043  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   937   001944  C041  FFDF         	movff	gpio_port_write_logic@logic,indf2
   938   001948                     l2322:
   939                           
   940                           ;MCAL_Layer/GPIO/hal_gpio.c: 208:     return ret;
   941   001948  5044               	movf	gpio_port_write_logic@ret^0,w,c
   942   00194A  0012               	return		;funcret
   943   00194C                     __end_of_gpio_port_write_logic:
   944                           	callstack 0
   945                           
   946 ;; *************** function _application_initialize *****************
   947 ;; Defined at:
   948 ;;		line 99 in file "ECU_Layer/layer_initialize.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 4
   969 ;; This function calls:
   970 ;;		_gpio_port_direction_initialize
   971 ;;		_lcd_4bit_initialize
   972 ;;		_lcd_8bit_initialize
   973 ;;		_seven_segement_intialize
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text3
   980   0019CE                     __ptext3:
   981                           	callstack 0
   982   0019CE                     _application_initialize:
   983                           	callstack 26
   984   0019CE                     
   985                           ;ECU_Layer/layer_initialize.c: 100:     ret = lcd_4bit_initialize(&lcd1);
   986   0019CE  0E36               	movlw	low _lcd1
   987   0019D0  6E50               	movwf	lcd_4bit_initialize@lcd^0,c
   988   0019D2  EC02  F00A         	call	_lcd_4bit_initialize	;wreg free
   989   0019D6  6E5F               	movwf	_ret^0,c
   990                           
   991                           ;ECU_Layer/layer_initialize.c: 101:     ret = lcd_8bit_initialize(&lcd2);
   992   0019D8  0E2C               	movlw	low _lcd2
   993   0019DA  6E51               	movwf	lcd_8bit_initialize@lcd^0,c
   994   0019DC  EC6F  F00A         	call	_lcd_8bit_initialize	;wreg free
   995   0019E0  6E5F               	movwf	_ret^0,c
   996                           
   997                           ;ECU_Layer/layer_initialize.c: 102:     ret = seven_segement_intialize(&_7seg);
   998   0019E2  0E3C               	movlw	low __7seg
   999   0019E4  6E50               	movwf	seven_segement_intialize@seg^0,c
  1000   0019E6  EC61  F00C         	call	_seven_segement_intialize	;wreg free
  1001   0019EA  6E5F               	movwf	_ret^0,c
  1002                           
  1003                           ;ECU_Layer/layer_initialize.c: 103:     ret = gpio_port_direction_initialize(PORTC_INDEX
      +                           , ~0x0F);
  1004   0019EC  0EF0               	movlw	240
  1005   0019EE  6E41               	movwf	gpio_port_direction_initialize@direction^0,c
  1006   0019F0  0E02               	movlw	2
  1007   0019F2  ECA6  F00C         	call	_gpio_port_direction_initialize
  1008   0019F6  6E5F               	movwf	_ret^0,c
  1009                           
  1010                           ;ECU_Layer/layer_initialize.c: 104:     ret = gpio_port_direction_initialize(PORTD_INDEX
      +                           , ~0x7E);
  1011   0019F8  0E81               	movlw	129
  1012   0019FA  6E41               	movwf	gpio_port_direction_initialize@direction^0,c
  1013   0019FC  0E03               	movlw	3
  1014   0019FE  ECA6  F00C         	call	_gpio_port_direction_initialize
  1015   001A02  6E5F               	movwf	_ret^0,c
  1016   001A04  0012               	return		;funcret
  1017   001A06                     __end_of_application_initialize:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _seven_segement_intialize *****************
  1021 ;; Defined at:
  1022 ;;		line 10 in file "ECU_Layer/7seg/7_seg.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  seg             1   15[COMRAM] PTR const struct .
  1025 ;;		 -> _7seg(5), 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  ret             1   16[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      unsigned char 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 2
  1044 ;; This function calls:
  1045 ;;		_gpio_pin_direction_initialize_write
  1046 ;; This function is called by:
  1047 ;;		_application_initialize
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text4
  1052   0018C2                     __ptext4:
  1053                           	callstack 0
  1054   0018C2                     _seven_segement_intialize:
  1055                           	callstack 27
  1056   0018C2                     
  1057                           ;ECU_Layer/7seg/7_seg.c: 12:     if(((void*)0) == seg){
  1058   0018C2  5050               	movf	seven_segement_intialize@seg^0,w,c
  1059   0018C4  A4D8               	btfss	status,2,c
  1060   0018C6  EF67  F00C         	goto	u1301
  1061   0018CA  EF69  F00C         	goto	u1300
  1062   0018CE                     u1301:
  1063   0018CE  EF6D  F00C         	goto	l2262
  1064   0018D2                     u1300:
  1065   0018D2                     
  1066                           ;ECU_Layer/7seg/7_seg.c: 13:         ret = (Std_ReturnType)0x00;
  1067   0018D2  0E00               	movlw	0
  1068   0018D4  6E51               	movwf	seven_segement_intialize@ret^0,c
  1069                           
  1070                           ;ECU_Layer/7seg/7_seg.c: 14:     }
  1071   0018D6  EF83  F00C         	goto	l2264
  1072   0018DA                     l2262:
  1073                           
  1074                           ;ECU_Layer/7seg/7_seg.c: 16:         ret = gpio_pin_direction_initialize_write(&(seg->se
      +                          gment_pins[0]));
  1075   0018DA  C050  F049         	movff	seven_segement_intialize@seg,gpio_pin_direction_initialize_write@pin
  1076   0018DE  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1077   0018E2  6E51               	movwf	seven_segement_intialize@ret^0,c
  1078                           
  1079                           ;ECU_Layer/7seg/7_seg.c: 17:         ret = gpio_pin_direction_initialize_write(&(seg->se
      +                          gment_pins[1]));
  1080   0018E4  2850               	incf	seven_segement_intialize@seg^0,w,c
  1081   0018E6  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1082   0018E8  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1083   0018EC  6E51               	movwf	seven_segement_intialize@ret^0,c
  1084                           
  1085                           ;ECU_Layer/7seg/7_seg.c: 18:         ret = gpio_pin_direction_initialize_write(&(seg->se
      +                          gment_pins[2]));
  1086   0018EE  5050               	movf	seven_segement_intialize@seg^0,w,c
  1087   0018F0  0F02               	addlw	2
  1088   0018F2  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1089   0018F4  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1090   0018F8  6E51               	movwf	seven_segement_intialize@ret^0,c
  1091                           
  1092                           ;ECU_Layer/7seg/7_seg.c: 19:         ret = gpio_pin_direction_initialize_write(&(seg->se
      +                          gment_pins[3]));
  1093   0018FA  5050               	movf	seven_segement_intialize@seg^0,w,c
  1094   0018FC  0F03               	addlw	3
  1095   0018FE  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1096   001900  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1097   001904  6E51               	movwf	seven_segement_intialize@ret^0,c
  1098   001906                     l2264:
  1099                           
  1100                           ;ECU_Layer/7seg/7_seg.c: 21:     return ret;
  1101   001906  5051               	movf	seven_segement_intialize@ret^0,w,c
  1102   001908  0012               	return		;funcret
  1103   00190A                     __end_of_seven_segement_intialize:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _lcd_8bit_initialize *****************
  1107 ;; Defined at:
  1108 ;;		line 131 in file "ECU_Layer/LCD/lcd.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  lcd             1   16[COMRAM] PTR const struct .
  1111 ;;		 -> lcd2(10), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  ret             1   19[COMRAM] unsigned char 
  1114 ;;  l_counter       1   18[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        4 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 3
  1131 ;; This function calls:
  1132 ;;		_gpio_pin_direction_initialize_write
  1133 ;;		_lcd_8bit_send_command
  1134 ;; This function is called by:
  1135 ;;		_application_initialize
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text5
  1140   0014DE                     __ptext5:
  1141                           	callstack 0
  1142   0014DE                     _lcd_8bit_initialize:
  1143                           	callstack 26
  1144   0014DE                     
  1145                           ;ECU_Layer/LCD/lcd.c: 133:     uint8 l_counter= 0;
  1146   0014DE  0E00               	movlw	0
  1147   0014E0  6E53               	movwf	lcd_8bit_initialize@l_counter^0,c
  1148                           
  1149                           ;ECU_Layer/LCD/lcd.c: 135:     if(((void*)0) == lcd ){
  1150   0014E2  5051               	movf	lcd_8bit_initialize@lcd^0,w,c
  1151   0014E4  A4D8               	btfss	status,2,c
  1152   0014E6  EF77  F00A         	goto	u1251
  1153   0014EA  EF79  F00A         	goto	u1250
  1154   0014EE                     u1251:
  1155   0014EE  EF7D  F00A         	goto	l2196
  1156   0014F2                     u1250:
  1157   0014F2                     
  1158                           ;ECU_Layer/LCD/lcd.c: 136:          ret = (Std_ReturnType)0x00;
  1159   0014F2  0E00               	movlw	0
  1160   0014F4  6E54               	movwf	lcd_8bit_initialize@ret^0,c
  1161                           
  1162                           ;ECU_Layer/LCD/lcd.c: 137:     }
  1163   0014F6  EFD4  F00A         	goto	l2228
  1164   0014FA                     l2196:
  1165                           
  1166                           ;ECU_Layer/LCD/lcd.c: 139:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          en));
  1167   0014FA  2851               	incf	lcd_8bit_initialize@lcd^0,w,c
  1168   0014FC  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1169   0014FE  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1170   001502  6E54               	movwf	lcd_8bit_initialize@ret^0,c
  1171                           
  1172                           ;ECU_Layer/LCD/lcd.c: 140:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          rs));
  1173   001504  C051  F049         	movff	lcd_8bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  1174   001508  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1175   00150C  6E54               	movwf	lcd_8bit_initialize@ret^0,c
  1176   00150E                     
  1177                           ;ECU_Layer/LCD/lcd.c: 141:         for (l_counter = 0; l_counter < 8;l_counter++){
  1178   00150E  0E00               	movlw	0
  1179   001510  6E53               	movwf	lcd_8bit_initialize@l_counter^0,c
  1180   001512                     l2204:
  1181   001512  5051               	movf	lcd_8bit_initialize@lcd^0,w,c
  1182   001514  2453               	addwf	lcd_8bit_initialize@l_counter^0,w,c
  1183   001516  0F02               	addlw	2
  1184   001518  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1185   00151A  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1186   00151E                     
  1187                           ;ECU_Layer/LCD/lcd.c: 143:         }
  1188   00151E  2A53               	incf	lcd_8bit_initialize@l_counter^0,f,c
  1189   001520  0E07               	movlw	7
  1190   001522  6453               	cpfsgt	lcd_8bit_initialize@l_counter^0,c
  1191   001524  EF96  F00A         	goto	u1261
  1192   001528  EF98  F00A         	goto	u1260
  1193   00152C                     u1261:
  1194   00152C  EF89  F00A         	goto	l2204
  1195   001530                     u1260:
  1196   001530                     
  1197                           ;ECU_Layer/LCD/lcd.c: 144:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1198   001530  0E34               	movlw	52
  1199   001532  6E52               	movwf	??_lcd_8bit_initialize^0,c
  1200   001534  0EF2               	movlw	242
  1201   001536                     u1817:
  1202   001536  2EE8               	decfsz	wreg,f,c
  1203   001538  D7FE               	bra	u1817
  1204   00153A  2E52               	decfsz	??_lcd_8bit_initialize^0,f,c
  1205   00153C  D7FC               	bra	u1817
  1206   00153E  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1207   001542  0E38               	movlw	56
  1208   001544  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1209   001546  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1210   00154A                     
  1211                           ;ECU_Layer/LCD/lcd.c: 146:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1212   00154A  0E0D               	movlw	13
  1213   00154C  6E52               	movwf	??_lcd_8bit_initialize^0,c
  1214   00154E  0EFC               	movlw	252
  1215   001550                     u1827:
  1216   001550  2EE8               	decfsz	wreg,f,c
  1217   001552  D7FE               	bra	u1827
  1218   001554  2E52               	decfsz	??_lcd_8bit_initialize^0,f,c
  1219   001556  D7FC               	bra	u1827
  1220   001558  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1221   00155C  0E38               	movlw	56
  1222   00155E  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1223   001560  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1224   001564                     
  1225                           ;ECU_Layer/LCD/lcd.c: 148:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  1226   001564  0E64               	movlw	100
  1227   001566                     u1837:
  1228   001566  2EE8               	decfsz	wreg,f,c
  1229   001568  D7FE               	bra	u1837
  1230   00156A  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1231   00156E  0E38               	movlw	56
  1232   001570  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1233   001572  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1234   001576  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1235   00157A  0E01               	movlw	1
  1236   00157C  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1237   00157E  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1238   001582  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1239   001586  0E02               	movlw	2
  1240   001588  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1241   00158A  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1242   00158E  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1243   001592  0E06               	movlw	6
  1244   001594  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1245   001596  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1246   00159A                     
  1247                           ;ECU_Layer/LCD/lcd.c: 153:         ret = lcd_8bit_send_command(lcd , 0x0C);
  1248   00159A  C051  F04B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1249   00159E  0E0C               	movlw	12
  1250   0015A0  6E4C               	movwf	lcd_8bit_send_command@command^0,c
  1251   0015A2  ECCD  F00B         	call	_lcd_8bit_send_command	;wreg free
  1252   0015A6  6E54               	movwf	lcd_8bit_initialize@ret^0,c
  1253   0015A8                     l2228:
  1254                           
  1255                           ;ECU_Layer/LCD/lcd.c: 155:     return ret;
  1256   0015A8  5054               	movf	lcd_8bit_initialize@ret^0,w,c
  1257   0015AA  0012               	return		;funcret
  1258   0015AC                     __end_of_lcd_8bit_initialize:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _lcd_8bit_send_command *****************
  1262 ;; Defined at:
  1263 ;;		line 158 in file "ECU_Layer/LCD/lcd.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  lcd             1   10[COMRAM] PTR const struct .
  1266 ;;		 -> lcd2(10), 
  1267 ;;  command         1   11[COMRAM] unsigned char 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1270 ;;  ret             1   14[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      unsigned char 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        6 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 2
  1287 ;; This function calls:
  1288 ;;		_gpio_pin_write_logic
  1289 ;;		_lcd_8bits_send_enable_signal
  1290 ;; This function is called by:
  1291 ;;		_lcd_8bit_initialize
  1292 ;;		_lcd_8bits_set_cursor
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text6
  1297   00179A                     __ptext6:
  1298                           	callstack 0
  1299   00179A                     _lcd_8bit_send_command:
  1300                           	callstack 26
  1301   00179A                     
  1302                           ;ECU_Layer/LCD/lcd.c: 160:     uint8 l_pin_counter = 0;
  1303   00179A  0E00               	movlw	0
  1304   00179C  6E50               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1305                           
  1306                           ;ECU_Layer/LCD/lcd.c: 162:     if(((void*)0) == lcd ){
  1307   00179E  504B               	movf	lcd_8bit_send_command@lcd^0,w,c
  1308   0017A0  A4D8               	btfss	status,2,c
  1309   0017A2  EFD5  F00B         	goto	u1191
  1310   0017A6  EFD7  F00B         	goto	u1190
  1311   0017AA                     u1191:
  1312   0017AA  EFDB  F00B         	goto	l2118
  1313   0017AE                     u1190:
  1314   0017AE                     
  1315                           ;ECU_Layer/LCD/lcd.c: 163:          ret = (Std_ReturnType)0x00;
  1316   0017AE  0E00               	movlw	0
  1317   0017B0  6E4F               	movwf	lcd_8bit_send_command@ret^0,c
  1318                           
  1319                           ;ECU_Layer/LCD/lcd.c: 164:     }
  1320   0017B2  EF06  F00C         	goto	l2134
  1321   0017B6                     l2118:
  1322   0017B6  C04B  F041         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin
  1323   0017BA  0E00               	movlw	0
  1324   0017BC  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1325   0017BE  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1326   0017C2                     
  1327                           ;ECU_Layer/LCD/lcd.c: 168:         for(l_pin_counter = 0 ; l_pin_counter <8 ; l_pin_coun
      +                          ter ++){
  1328   0017C2  0E00               	movlw	0
  1329   0017C4  6E50               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1330   0017C6                     l2126:
  1331   0017C6  504B               	movf	lcd_8bit_send_command@lcd^0,w,c
  1332   0017C8  2450               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1333   0017CA  0F02               	addlw	2
  1334   0017CC  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1335   0017CE  C050  F04D         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1336   0017D2  C04C  F04E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1337   0017D6  2A4D               	incf	??_lcd_8bit_send_command^0,f,c
  1338   0017D8  EFF0  F00B         	goto	u1204
  1339   0017DC                     u1205:
  1340   0017DC  90D8               	bcf	status,0,c
  1341   0017DE  324E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1342   0017E0                     u1204:
  1343   0017E0  2E4D               	decfsz	??_lcd_8bit_send_command^0,f,c
  1344   0017E2  EFEE  F00B         	goto	u1205
  1345   0017E6  504E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1346   0017E8  0B01               	andlw	1
  1347   0017EA  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1348   0017EC  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1349   0017F0                     
  1350                           ;ECU_Layer/LCD/lcd.c: 170:         }
  1351   0017F0  2A50               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1352   0017F2  0E07               	movlw	7
  1353   0017F4  6450               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1354   0017F6  EFFF  F00B         	goto	u1211
  1355   0017FA  EF01  F00C         	goto	u1210
  1356   0017FE                     u1211:
  1357   0017FE  EFE3  F00B         	goto	l2126
  1358   001802                     u1210:
  1359   001802                     
  1360                           ;ECU_Layer/LCD/lcd.c: 171:         ret = lcd_8bits_send_enable_signal(lcd);
  1361   001802  C04B  F049         	movff	lcd_8bit_send_command@lcd,lcd_8bits_send_enable_signal@lcd
  1362   001806  EC1E  F00D         	call	_lcd_8bits_send_enable_signal	;wreg free
  1363   00180A  6E4F               	movwf	lcd_8bit_send_command@ret^0,c
  1364   00180C                     l2134:
  1365                           
  1366                           ;ECU_Layer/LCD/lcd.c: 173:     return ret;
  1367   00180C  504F               	movf	lcd_8bit_send_command@ret^0,w,c
  1368   00180E  0012               	return		;funcret
  1369   001810                     __end_of_lcd_8bit_send_command:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _lcd_8bits_send_enable_signal *****************
  1373 ;; Defined at:
  1374 ;;		line 300 in file "ECU_Layer/LCD/lcd.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  lcd             1    8[COMRAM] PTR const struct .
  1377 ;;		 -> lcd2(10), 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  ret             1    9[COMRAM] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      unsigned char 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 1
  1396 ;; This function calls:
  1397 ;;		_gpio_pin_write_logic
  1398 ;; This function is called by:
  1399 ;;		_lcd_8bit_send_command
  1400 ;;		_lcd_8bit_send_char_data
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405   001A3C                     __ptext7:
  1406                           	callstack 0
  1407   001A3C                     _lcd_8bits_send_enable_signal:
  1408                           	callstack 26
  1409   001A3C  2849               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1410   001A3E  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1411   001A40  0E01               	movlw	1
  1412   001A42  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1413   001A44  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1414   001A48                     
  1415                           ;ECU_Layer/LCD/lcd.c: 304:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1416   001A48  0E03               	movlw	3
  1417   001A4A                     u1847:
  1418   001A4A  2EE8               	decfsz	wreg,f,c
  1419   001A4C  D7FE               	bra	u1847
  1420   001A4E  0000               	nop	
  1421   001A50                     
  1422                           ;ECU_Layer/LCD/lcd.c: 305:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  1423   001A50  2849               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1424   001A52  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1425   001A54  0E00               	movlw	0
  1426   001A56  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1427   001A58  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1428   001A5C  6E4A               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1429   001A5E                     
  1430                           ;ECU_Layer/LCD/lcd.c: 306:     return ret;
  1431   001A5E  504A               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  1432   001A60  0012               	return		;funcret
  1433   001A62                     __end_of_lcd_8bits_send_enable_signal:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _lcd_4bit_initialize *****************
  1437 ;; Defined at:
  1438 ;;		line 14 in file "ECU_Layer/LCD/lcd.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  lcd             1   15[COMRAM] PTR const struct .
  1441 ;;		 -> lcd1(6), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  ret             1   18[COMRAM] unsigned char 
  1444 ;;  l_counter       1   17[COMRAM] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        4 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 3
  1461 ;; This function calls:
  1462 ;;		_gpio_pin_direction_initialize_write
  1463 ;;		_lcd_4bit_send_command
  1464 ;; This function is called by:
  1465 ;;		_application_initialize
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text8
  1470   001404                     __ptext8:
  1471                           	callstack 0
  1472   001404                     _lcd_4bit_initialize:
  1473                           	callstack 26
  1474   001404                     
  1475                           ;ECU_Layer/LCD/lcd.c: 16:     uint8 l_counter= 0;
  1476   001404  0E00               	movlw	0
  1477   001406  6E52               	movwf	lcd_4bit_initialize@l_counter^0,c
  1478                           
  1479                           ;ECU_Layer/LCD/lcd.c: 17:     if(((void*)0) == lcd ){
  1480   001408  5050               	movf	lcd_4bit_initialize@lcd^0,w,c
  1481   00140A  A4D8               	btfss	status,2,c
  1482   00140C  EF0A  F00A         	goto	u1221
  1483   001410  EF0C  F00A         	goto	u1220
  1484   001414                     u1221:
  1485   001414  EF10  F00A         	goto	l2142
  1486   001418                     u1220:
  1487   001418                     
  1488                           ;ECU_Layer/LCD/lcd.c: 18:          ret = (Std_ReturnType)0x00;
  1489   001418  0E00               	movlw	0
  1490   00141A  6E53               	movwf	lcd_4bit_initialize@ret^0,c
  1491                           
  1492                           ;ECU_Layer/LCD/lcd.c: 19:     }
  1493   00141C  EF6D  F00A         	goto	l2176
  1494   001420                     l2142:
  1495                           
  1496                           ;ECU_Layer/LCD/lcd.c: 21:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_e
      +                          n));
  1497   001420  2850               	incf	lcd_4bit_initialize@lcd^0,w,c
  1498   001422  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1499   001424  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1500   001428  6E53               	movwf	lcd_4bit_initialize@ret^0,c
  1501                           
  1502                           ;ECU_Layer/LCD/lcd.c: 22:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_r
      +                          s));
  1503   00142A  C050  F049         	movff	lcd_4bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  1504   00142E  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1505   001432  6E53               	movwf	lcd_4bit_initialize@ret^0,c
  1506   001434                     
  1507                           ;ECU_Layer/LCD/lcd.c: 24:         for (l_counter = 0; l_counter < 4;l_counter++){
  1508   001434  0E00               	movlw	0
  1509   001436  6E52               	movwf	lcd_4bit_initialize@l_counter^0,c
  1510   001438                     l2150:
  1511   001438  5050               	movf	lcd_4bit_initialize@lcd^0,w,c
  1512   00143A  2452               	addwf	lcd_4bit_initialize@l_counter^0,w,c
  1513   00143C  0F02               	addlw	2
  1514   00143E  6E49               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1515   001440  ECDB  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1516   001444                     
  1517                           ;ECU_Layer/LCD/lcd.c: 26:         }
  1518   001444  2A52               	incf	lcd_4bit_initialize@l_counter^0,f,c
  1519   001446  0E03               	movlw	3
  1520   001448  6452               	cpfsgt	lcd_4bit_initialize@l_counter^0,c
  1521   00144A  EF29  F00A         	goto	u1231
  1522   00144E  EF2B  F00A         	goto	u1230
  1523   001452                     u1231:
  1524   001452  EF1C  F00A         	goto	l2150
  1525   001456                     u1230:
  1526   001456                     
  1527                           ;ECU_Layer/LCD/lcd.c: 27:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1528   001456  0E34               	movlw	52
  1529   001458  6E51               	movwf	??_lcd_4bit_initialize^0,c
  1530   00145A  0EF2               	movlw	242
  1531   00145C                     u1857:
  1532   00145C  2EE8               	decfsz	wreg,f,c
  1533   00145E  D7FE               	bra	u1857
  1534   001460  2E51               	decfsz	??_lcd_4bit_initialize^0,f,c
  1535   001462  D7FC               	bra	u1857
  1536   001464  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1537   001468  0E38               	movlw	56
  1538   00146A  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1539   00146C  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1540   001470                     
  1541                           ;ECU_Layer/LCD/lcd.c: 29:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1542   001470  0E0D               	movlw	13
  1543   001472  6E51               	movwf	??_lcd_4bit_initialize^0,c
  1544   001474  0EFC               	movlw	252
  1545   001476                     u1867:
  1546   001476  2EE8               	decfsz	wreg,f,c
  1547   001478  D7FE               	bra	u1867
  1548   00147A  2E51               	decfsz	??_lcd_4bit_initialize^0,f,c
  1549   00147C  D7FC               	bra	u1867
  1550   00147E  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1551   001482  0E38               	movlw	56
  1552   001484  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1553   001486  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1554   00148A                     
  1555                           ;ECU_Layer/LCD/lcd.c: 31:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  1556   00148A  0E64               	movlw	100
  1557   00148C                     u1877:
  1558   00148C  2EE8               	decfsz	wreg,f,c
  1559   00148E  D7FE               	bra	u1877
  1560   001490  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1561   001494  0E38               	movlw	56
  1562   001496  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1563   001498  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1564   00149C  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1565   0014A0  0E01               	movlw	1
  1566   0014A2  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1567   0014A4  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1568   0014A8  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1569   0014AC  0E02               	movlw	2
  1570   0014AE  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1571   0014B0  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1572   0014B4  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1573   0014B8  0E06               	movlw	6
  1574   0014BA  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1575   0014BC  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1576   0014C0  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1577   0014C4  0E0C               	movlw	12
  1578   0014C6  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1579   0014C8  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1580   0014CC                     
  1581                           ;ECU_Layer/LCD/lcd.c: 37:         ret = lcd_4bit_send_command(lcd , 0x28);
  1582   0014CC  C050  F04C         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1583   0014D0  0E28               	movlw	40
  1584   0014D2  6E4D               	movwf	lcd_4bit_send_command@command^0,c
  1585   0014D4  EC08  F00C         	call	_lcd_4bit_send_command	;wreg free
  1586   0014D8  6E53               	movwf	lcd_4bit_initialize@ret^0,c
  1587   0014DA                     l2176:
  1588                           
  1589                           ;ECU_Layer/LCD/lcd.c: 39:     return ret;
  1590   0014DA  5053               	movf	lcd_4bit_initialize@ret^0,w,c
  1591   0014DC  0012               	return		;funcret
  1592   0014DE                     __end_of_lcd_4bit_initialize:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _lcd_4bit_send_command *****************
  1596 ;; Defined at:
  1597 ;;		line 42 in file "ECU_Layer/LCD/lcd.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  lcd             1   11[COMRAM] PTR const struct .
  1600 ;;		 -> lcd1(6), 
  1601 ;;  command         1   12[COMRAM] unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  ret             1   13[COMRAM] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        3 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 2
  1620 ;; This function calls:
  1621 ;;		_gpio_pin_write_logic
  1622 ;;		_lcd_4bits_send_enable_signal
  1623 ;;		_lcd_send_4bits
  1624 ;; This function is called by:
  1625 ;;		_lcd_4bit_initialize
  1626 ;;		_lcd_4bits_set_cursor
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text9
  1631   001810                     __ptext9:
  1632                           	callstack 0
  1633   001810                     _lcd_4bit_send_command:
  1634                           	callstack 26
  1635   001810                     
  1636                           ;ECU_Layer/LCD/lcd.c: 45:     if(((void*)0) == lcd ){
  1637   001810  504C               	movf	lcd_4bit_send_command@lcd^0,w,c
  1638   001812  A4D8               	btfss	status,2,c
  1639   001814  EF0E  F00C         	goto	u1181
  1640   001818  EF10  F00C         	goto	u1180
  1641   00181C                     u1181:
  1642   00181C  EF14  F00C         	goto	l2108
  1643   001820                     u1180:
  1644   001820                     
  1645                           ;ECU_Layer/LCD/lcd.c: 46:          ret = (Std_ReturnType)0x00;
  1646   001820  0E00               	movlw	0
  1647   001822  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1648                           
  1649                           ;ECU_Layer/LCD/lcd.c: 47:     }
  1650   001824  EF34  F00C         	goto	l2110
  1651   001828                     l2108:
  1652                           
  1653                           ;ECU_Layer/LCD/lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->lcd_rs) , LOW);
  1654   001828  C04C  F041         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin
  1655   00182C  0E00               	movlw	0
  1656   00182E  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1657   001830  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1658   001834  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1659                           
  1660                           ;ECU_Layer/LCD/lcd.c: 51:         ret = lcd_send_4bits( lcd ,command >> 4);
  1661   001836  C04C  F049         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1662   00183A  384D               	swapf	lcd_4bit_send_command@command^0,w,c
  1663   00183C  0B0F               	andlw	15
  1664   00183E  6E4A               	movwf	lcd_send_4bits@data_command^0,c
  1665   001840  EC36  F00C         	call	_lcd_send_4bits	;wreg free
  1666   001844  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1667                           
  1668                           ;ECU_Layer/LCD/lcd.c: 52:         ret = lcd_4bits_send_enable_signal(lcd);
  1669   001846  C04C  F049         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1670   00184A  EC31  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  1671   00184E  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1672                           
  1673                           ;ECU_Layer/LCD/lcd.c: 53:         ret = lcd_send_4bits( lcd ,command);
  1674   001850  C04C  F049         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1675   001854  C04D  F04A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  1676   001858  EC36  F00C         	call	_lcd_send_4bits	;wreg free
  1677   00185C  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1678                           
  1679                           ;ECU_Layer/LCD/lcd.c: 54:         ret = lcd_4bits_send_enable_signal(lcd);
  1680   00185E  C04C  F049         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  1681   001862  EC31  F00D         	call	_lcd_4bits_send_enable_signal	;wreg free
  1682   001866  6E4E               	movwf	lcd_4bit_send_command@ret^0,c
  1683   001868                     l2110:
  1684                           
  1685                           ;ECU_Layer/LCD/lcd.c: 56:     return ret;
  1686   001868  504E               	movf	lcd_4bit_send_command@ret^0,w,c
  1687   00186A  0012               	return		;funcret
  1688   00186C                     __end_of_lcd_4bit_send_command:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _lcd_send_4bits *****************
  1692 ;; Defined at:
  1693 ;;		line 280 in file "ECU_Layer/LCD/lcd.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  lcd             1    8[COMRAM] PTR const struct .
  1696 ;;		 -> lcd1(6), 
  1697 ;;  data_command    1    9[COMRAM] unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  ret             1   10[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 1
  1716 ;; This function calls:
  1717 ;;		_gpio_pin_write_logic
  1718 ;; This function is called by:
  1719 ;;		_lcd_4bit_send_command
  1720 ;;		_lcd_4bit_send_char_data
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text10
  1725   00186C                     __ptext10:
  1726                           	callstack 0
  1727   00186C                     _lcd_send_4bits:
  1728                           	callstack 26
  1729   00186C                     
  1730                           ;ECU_Layer/LCD/lcd.c: 283:     ret = gpio_pin_write_logic(&(lcd->lcd_pins[0]) , (data_co
      +                          mmand >> 0) & (uint8)0x01);
  1731   00186C  5049               	movf	lcd_send_4bits@lcd^0,w,c
  1732   00186E  0F02               	addlw	2
  1733   001870  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1734   001872  504A               	movf	lcd_send_4bits@data_command^0,w,c
  1735   001874  0B01               	andlw	1
  1736   001876  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1737   001878  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1738   00187C  6E4B               	movwf	lcd_send_4bits@ret^0,c
  1739   00187E                     
  1740                           ;ECU_Layer/LCD/lcd.c: 284:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[1]) , (data_c
      +                          ommand >> 1) & (uint8)0x01);
  1741   00187E  5049               	movf	lcd_send_4bits@lcd^0,w,c
  1742   001880  0F03               	addlw	3
  1743   001882  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1744   001884  90D8               	bcf	status,0,c
  1745   001886  304A               	rrcf	lcd_send_4bits@data_command^0,w,c
  1746   001888  0B01               	andlw	1
  1747   00188A  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1748   00188C  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1749   001890  164B               	andwf	lcd_send_4bits@ret^0,f,c
  1750   001892                     
  1751                           ;ECU_Layer/LCD/lcd.c: 285:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[2]) , (data_c
      +                          ommand >> 2) & (uint8)0x01);
  1752   001892  5049               	movf	lcd_send_4bits@lcd^0,w,c
  1753   001894  0F04               	addlw	4
  1754   001896  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1755   001898  404A               	rrncf	lcd_send_4bits@data_command^0,w,c
  1756   00189A  42E8               	rrncf	wreg,f,c
  1757   00189C  0B3F               	andlw	63
  1758   00189E  0B01               	andlw	1
  1759   0018A0  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1760   0018A2  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1761   0018A6  164B               	andwf	lcd_send_4bits@ret^0,f,c
  1762   0018A8                     
  1763                           ;ECU_Layer/LCD/lcd.c: 286:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[3]) , (data_c
      +                          ommand >> 3) & (uint8)0x01);
  1764   0018A8  5049               	movf	lcd_send_4bits@lcd^0,w,c
  1765   0018AA  0F05               	addlw	5
  1766   0018AC  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1767   0018AE  384A               	swapf	lcd_send_4bits@data_command^0,w,c
  1768   0018B0  46E8               	rlncf	wreg,f,c
  1769   0018B2  0B1F               	andlw	31
  1770   0018B4  0B01               	andlw	1
  1771   0018B6  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1772   0018B8  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1773   0018BC  164B               	andwf	lcd_send_4bits@ret^0,f,c
  1774                           
  1775                           ;ECU_Layer/LCD/lcd.c: 288:     return ret;
  1776   0018BE  504B               	movf	lcd_send_4bits@ret^0,w,c
  1777   0018C0  0012               	return		;funcret
  1778   0018C2                     __end_of_lcd_send_4bits:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _lcd_4bits_send_enable_signal *****************
  1782 ;; Defined at:
  1783 ;;		line 291 in file "ECU_Layer/LCD/lcd.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  lcd             1    8[COMRAM] PTR const struct .
  1786 ;;		 -> lcd1(6), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  ret             1    9[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;Total ram usage:        2 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 1
  1805 ;; This function calls:
  1806 ;;		_gpio_pin_write_logic
  1807 ;; This function is called by:
  1808 ;;		_lcd_4bit_send_command
  1809 ;;		_lcd_4bit_send_char_data
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text11
  1814   001A62                     __ptext11:
  1815                           	callstack 0
  1816   001A62                     _lcd_4bits_send_enable_signal:
  1817                           	callstack 26
  1818   001A62  2849               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1819   001A64  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1820   001A66  0E01               	movlw	1
  1821   001A68  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1822   001A6A  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1823   001A6E                     
  1824                           ;ECU_Layer/LCD/lcd.c: 295:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1825   001A6E  0E03               	movlw	3
  1826   001A70                     u1887:
  1827   001A70  2EE8               	decfsz	wreg,f,c
  1828   001A72  D7FE               	bra	u1887
  1829   001A74  0000               	nop	
  1830   001A76                     
  1831                           ;ECU_Layer/LCD/lcd.c: 296:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  1832   001A76  2849               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  1833   001A78  6E41               	movwf	gpio_pin_write_logic@pin^0,c
  1834   001A7A  0E00               	movlw	0
  1835   001A7C  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  1836   001A7E  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  1837   001A82  6E4A               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  1838   001A84                     
  1839                           ;ECU_Layer/LCD/lcd.c: 297:     return ret;
  1840   001A84  504A               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  1841   001A86  0012               	return		;funcret
  1842   001A88                     __end_of_lcd_4bits_send_enable_signal:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _gpio_pin_direction_initialize_write *****************
  1846 ;; Defined at:
  1847 ;;		line 18 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  pin             1    8[COMRAM] PTR const struct .
  1850 ;;		 -> lcd2$lcd_pins(8), lcd2(10), lcd1$lcd_pins(4), lcd1(6), 
  1851 ;;		 -> _7seg$segment_pins(4), _7seg(5), relay_initialize@pin(1), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  ret             1   14[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      unsigned char 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;Total ram usage:        7 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 1
  1870 ;; This function calls:
  1871 ;;		_gpio_pin_write_logic
  1872 ;; This function is called by:
  1873 ;;		_lcd_4bit_initialize
  1874 ;;		_lcd_8bit_initialize
  1875 ;;		_seven_segement_intialize
  1876 ;;		_dc_motor_initialize
  1877 ;;		_relay_initialize
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text12
  1882   0011B6                     __ptext12:
  1883                           	callstack 0
  1884   0011B6                     _gpio_pin_direction_initialize_write:
  1885                           	callstack 27
  1886   0011B6                     
  1887                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     if(((void*)0) == pin || pin->pin > 7){
  1888   0011B6  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1889   0011B8  B4D8               	btfsc	status,2,c
  1890   0011BA  EFE1  F008         	goto	u1121
  1891   0011BE  EFE3  F008         	goto	u1120
  1892   0011C2                     u1121:
  1893   0011C2  EFF3  F008         	goto	l2084
  1894   0011C6                     u1120:
  1895   0011C6  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1896   0011C8  6ED9               	movwf	fsr2l,c
  1897   0011CA  6ADA               	clrf	fsr2h,c
  1898   0011CC  30DF               	rrcf	223,w,c
  1899   0011CE  32E8               	rrcf	wreg,f,c
  1900   0011D0  32E8               	rrcf	wreg,f,c
  1901   0011D2  0B07               	andlw	7
  1902   0011D4  6E4A               	movwf	??_gpio_pin_direction_initialize_write^0,c
  1903   0011D6  0E07               	movlw	7
  1904   0011D8  644A               	cpfsgt	??_gpio_pin_direction_initialize_write^0,c
  1905   0011DA  EFF1  F008         	goto	u1131
  1906   0011DE  EFF3  F008         	goto	u1130
  1907   0011E2                     u1131:
  1908   0011E2  EF4C  F009         	goto	l2092
  1909   0011E6                     u1130:
  1910   0011E6                     l2084:
  1911                           
  1912                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:          ret = (Std_ReturnType)0x00;
  1913   0011E6  0E00               	movlw	0
  1914   0011E8  6E4F               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  1915                           
  1916                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  1917   0011EA  EF78  F009         	goto	l2096
  1918   0011EE                     l2086:
  1919                           
  1920                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 (*tris_registers[pin->port] &= ~(1 << p
      +                          in->pin));
  1921   0011EE  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1922   0011F0  6ED9               	movwf	fsr2l,c
  1923   0011F2  6ADA               	clrf	fsr2h,c
  1924   0011F4  30DF               	rrcf	223,w,c
  1925   0011F6  32E8               	rrcf	wreg,f,c
  1926   0011F8  32E8               	rrcf	wreg,f,c
  1927   0011FA  0B07               	andlw	7
  1928   0011FC  6E4A               	movwf	??_gpio_pin_direction_initialize_write^0,c
  1929   0011FE  0E01               	movlw	1
  1930   001200  6E4B               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  1931   001202  2A4A               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  1932   001204  EF06  F009         	goto	u1144
  1933   001208                     u1145:
  1934   001208  90D8               	bcf	status,0,c
  1935   00120A  364B               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  1936   00120C                     u1144:
  1937   00120C  2E4A               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  1938   00120E  EF04  F009         	goto	u1145
  1939   001212  504B               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  1940   001214  0AFF               	xorlw	255
  1941   001216  6E4C               	movwf	(??_gpio_pin_direction_initialize_write+2)^0,c
  1942   001218  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1943   00121A  6ED9               	movwf	fsr2l,c
  1944   00121C  6ADA               	clrf	fsr2h,c
  1945   00121E  50DF               	movf	223,w,c
  1946   001220  0B07               	andlw	7
  1947   001222  0D02               	mullw	2
  1948   001224  50F3               	movf	243,w,c
  1949   001226  0F1F               	addlw	low _tris_registers
  1950   001228  6ED9               	movwf	fsr2l,c
  1951   00122A  6ADA               	clrf	fsr2h,c
  1952   00122C  CFDE F04D          	movff	postinc2,??_gpio_pin_direction_initialize_write+3
  1953   001230  CFDD F04E          	movff	postdec2,??_gpio_pin_direction_initialize_write+4
  1954   001234  C04D  FFD9         	movff	??_gpio_pin_direction_initialize_write+3,fsr2l
  1955   001238  C04E  FFDA         	movff	??_gpio_pin_direction_initialize_write+4,fsr2h
  1956   00123C  504C               	movf	(??_gpio_pin_direction_initialize_write+2)^0,w,c
  1957   00123E  16DF               	andwf	indf2,f,c
  1958                           
  1959                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:                 break;
  1960   001240  EF6C  F009         	goto	l2094
  1961   001244                     l2088:
  1962                           
  1963                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[pin->port] |= (1 << pi
      +                          n->pin));
  1964   001244  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1965   001246  6ED9               	movwf	fsr2l,c
  1966   001248  6ADA               	clrf	fsr2h,c
  1967   00124A  30DF               	rrcf	223,w,c
  1968   00124C  32E8               	rrcf	wreg,f,c
  1969   00124E  32E8               	rrcf	wreg,f,c
  1970   001250  0B07               	andlw	7
  1971   001252  6E4A               	movwf	??_gpio_pin_direction_initialize_write^0,c
  1972   001254  0E01               	movlw	1
  1973   001256  6E4B               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  1974   001258  2A4A               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  1975   00125A  EF31  F009         	goto	u1154
  1976   00125E                     u1155:
  1977   00125E  90D8               	bcf	status,0,c
  1978   001260  364B               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  1979   001262                     u1154:
  1980   001262  2E4A               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  1981   001264  EF2F  F009         	goto	u1155
  1982   001268  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  1983   00126A  6ED9               	movwf	fsr2l,c
  1984   00126C  6ADA               	clrf	fsr2h,c
  1985   00126E  50DF               	movf	223,w,c
  1986   001270  0B07               	andlw	7
  1987   001272  0D02               	mullw	2
  1988   001274  50F3               	movf	243,w,c
  1989   001276  0F1F               	addlw	low _tris_registers
  1990   001278  6ED9               	movwf	fsr2l,c
  1991   00127A  6ADA               	clrf	fsr2h,c
  1992   00127C  CFDE F04C          	movff	postinc2,??_gpio_pin_direction_initialize_write+2
  1993   001280  CFDD F04D          	movff	postdec2,??_gpio_pin_direction_initialize_write+3
  1994   001284  C04C  FFD9         	movff	??_gpio_pin_direction_initialize_write+2,fsr2l
  1995   001288  C04D  FFDA         	movff	??_gpio_pin_direction_initialize_write+3,fsr2h
  1996   00128C  504B               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  1997   00128E  12DF               	iorwf	indf2,f,c
  1998                           
  1999                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  2000   001290  EF6C  F009         	goto	l2094
  2001   001294                     l2090:
  2002                           
  2003                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:         }
  2004   001294  EF6C  F009         	goto	l2094
  2005   001298                     l2092:
  2006   001298  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2007   00129A  6ED9               	movwf	fsr2l,c
  2008   00129C  6ADA               	clrf	fsr2h,c
  2009   00129E  BCDF               	btfsc	indf2,6,c
  2010   0012A0  EF54  F009         	goto	u1161
  2011   0012A4  EF57  F009         	goto	u1160
  2012   0012A8                     u1161:
  2013   0012A8  0E01               	movlw	1
  2014   0012AA  EF58  F009         	goto	u1170
  2015   0012AE                     u1160:
  2016   0012AE  0E00               	movlw	0
  2017   0012B0                     u1170:
  2018   0012B0  6E4A               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2019   0012B2  6A4B               	clrf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2020                           
  2021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 1, Range of values is 0 to 0
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte            4     3 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028   0012B4  504B               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2029   0012B6  0A00               	xorlw	0	; case 0
  2030   0012B8  B4D8               	btfsc	status,2,c
  2031   0012BA  EF61  F009         	goto	l2694
  2032   0012BE  EF4A  F009         	goto	l2090
  2033   0012C2                     l2694:
  2034                           
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 2, Range of values is 0 to 1
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte            7     4 (average)
  2040                           ;	Chosen strategy is simple_byte
  2041   0012C2  504A               	movf	??_gpio_pin_direction_initialize_write^0,w,c
  2042   0012C4  0A00               	xorlw	0	; case 0
  2043   0012C6  B4D8               	btfsc	status,2,c
  2044   0012C8  EFF7  F008         	goto	l2086
  2045   0012CC  0A01               	xorlw	1	; case 1
  2046   0012CE  B4D8               	btfsc	status,2,c
  2047   0012D0  EF22  F009         	goto	l2088
  2048   0012D4  EF4A  F009         	goto	l2090
  2049   0012D8                     l2094:
  2050                           
  2051                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:         ret = gpio_pin_write_logic(pin , pin->logic);
  2052   0012D8  C049  F041         	movff	gpio_pin_direction_initialize_write@pin,gpio_pin_write_logic@pin
  2053   0012DC  5049               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2054   0012DE  6ED9               	movwf	fsr2l,c
  2055   0012E0  6ADA               	clrf	fsr2h,c
  2056   0012E2  0E00               	movlw	0
  2057   0012E4  BEDF               	btfsc	indf2,7,c
  2058   0012E6  0E01               	movlw	1
  2059   0012E8  6E42               	movwf	gpio_pin_write_logic@logic^0,c
  2060   0012EA  EC7A  F009         	call	_gpio_pin_write_logic	;wreg free
  2061   0012EE  6E4F               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  2062   0012F0                     l2096:
  2063                           
  2064                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:     return ret;
  2065   0012F0  504F               	movf	gpio_pin_direction_initialize_write@ret^0,w,c
  2066   0012F2  0012               	return		;funcret
  2067   0012F4                     __end_of_gpio_pin_direction_initialize_write:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _gpio_pin_write_logic *****************
  2071 ;; Defined at:
  2072 ;;		line 90 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  pin             1    0[COMRAM] PTR const struct .
  2075 ;;		 -> lcd2$lcd_pins(8), lcd2(10), lcd1$lcd_pins(4), lcd1(6), 
  2076 ;;		 -> _7seg$segment_pins(4), _7seg(5), relay_turn_off@pin(1), relay_turn_on@pin(1), 
  2077 ;;		 -> relay_initialize@pin(1), led_turn_off@pin(1), led_turn_on@pin(1), 
  2078 ;;  logic           1    1[COMRAM] enum E2808
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  ret             1    7[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;Total ram usage:        8 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_lcd_4bit_send_command
  2100 ;;		_lcd_8bit_send_command
  2101 ;;		_lcd_send_4bits
  2102 ;;		_lcd_4bits_send_enable_signal
  2103 ;;		_lcd_8bits_send_enable_signal
  2104 ;;		_gpio_pin_direction_initialize_write
  2105 ;;		_seven_segement_write_number
  2106 ;;		_dc_motor_move_left
  2107 ;;		_dc_motor_move_right
  2108 ;;		_dc_motor_stop
  2109 ;;		_lcd_4bit_send_char_data
  2110 ;;		_lcd_8bit_send_char_data
  2111 ;;		_led_turn_on
  2112 ;;		_led_turn_off
  2113 ;;		_relay_turn_on
  2114 ;;		_relay_turn_off
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text13
  2119   0012F4                     __ptext13:
  2120                           	callstack 0
  2121   0012F4                     _gpio_pin_write_logic:
  2122                           	callstack 29
  2123   0012F4                     
  2124                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2125   0012F4  0E01               	movlw	1
  2126   0012F6  6E48               	movwf	gpio_pin_write_logic@ret^0,c
  2127                           
  2128                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     if(((void*)0) == pin || pin->pin > 7){
  2129   0012F8  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2130   0012FA  B4D8               	btfsc	status,2,c
  2131   0012FC  EF82  F009         	goto	u1081
  2132   001300  EF84  F009         	goto	u1080
  2133   001304                     u1081:
  2134   001304  EF94  F009         	goto	l2026
  2135   001308                     u1080:
  2136   001308  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2137   00130A  6ED9               	movwf	fsr2l,c
  2138   00130C  6ADA               	clrf	fsr2h,c
  2139   00130E  30DF               	rrcf	223,w,c
  2140   001310  32E8               	rrcf	wreg,f,c
  2141   001312  32E8               	rrcf	wreg,f,c
  2142   001314  0B07               	andlw	7
  2143   001316  6E43               	movwf	??_gpio_pin_write_logic^0,c
  2144   001318  0E07               	movlw	7
  2145   00131A  6443               	cpfsgt	??_gpio_pin_write_logic^0,c
  2146   00131C  EF92  F009         	goto	u1091
  2147   001320  EF94  F009         	goto	u1090
  2148   001324                     u1091:
  2149   001324  EFEB  F009         	goto	l2034
  2150   001328                     u1090:
  2151   001328                     l2026:
  2152                           
  2153                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (Std_ReturnType)0x00;
  2154   001328  0E00               	movlw	0
  2155   00132A  6E48               	movwf	gpio_pin_write_logic@ret^0,c
  2156                           
  2157                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     }
  2158   00132C  EF00  F00A         	goto	l2036
  2159   001330                     l2028:
  2160                           
  2161                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                 (*lat_registers[pin->port] &= ~(1 << pi
      +                          n->pin));
  2162   001330  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2163   001332  6ED9               	movwf	fsr2l,c
  2164   001334  6ADA               	clrf	fsr2h,c
  2165   001336  30DF               	rrcf	223,w,c
  2166   001338  32E8               	rrcf	wreg,f,c
  2167   00133A  32E8               	rrcf	wreg,f,c
  2168   00133C  0B07               	andlw	7
  2169   00133E  6E43               	movwf	??_gpio_pin_write_logic^0,c
  2170   001340  0E01               	movlw	1
  2171   001342  6E44               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2172   001344  2A43               	incf	??_gpio_pin_write_logic^0,f,c
  2173   001346  EFA7  F009         	goto	u1104
  2174   00134A                     u1105:
  2175   00134A  90D8               	bcf	status,0,c
  2176   00134C  3644               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2177   00134E                     u1104:
  2178   00134E  2E43               	decfsz	??_gpio_pin_write_logic^0,f,c
  2179   001350  EFA5  F009         	goto	u1105
  2180   001354  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2181   001356  0AFF               	xorlw	255
  2182   001358  6E45               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2183   00135A  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2184   00135C  6ED9               	movwf	fsr2l,c
  2185   00135E  6ADA               	clrf	fsr2h,c
  2186   001360  50DF               	movf	223,w,c
  2187   001362  0B07               	andlw	7
  2188   001364  0D02               	mullw	2
  2189   001366  50F3               	movf	243,w,c
  2190   001368  0F15               	addlw	low _lat_registers
  2191   00136A  6ED9               	movwf	fsr2l,c
  2192   00136C  6ADA               	clrf	fsr2h,c
  2193   00136E  CFDE F046          	movff	postinc2,??_gpio_pin_write_logic+3
  2194   001372  CFDD F047          	movff	postdec2,??_gpio_pin_write_logic+4
  2195   001376  C046  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2196   00137A  C047  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2197   00137E  5045               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2198   001380  16DF               	andwf	indf2,f,c
  2199                           
  2200                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 break;
  2201   001382  EF00  F00A         	goto	l2036
  2202   001386                     l2030:
  2203                           
  2204                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 (*lat_registers[pin->port] |= (1 << pi
      +                          n->pin));
  2205   001386  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2206   001388  6ED9               	movwf	fsr2l,c
  2207   00138A  6ADA               	clrf	fsr2h,c
  2208   00138C  30DF               	rrcf	223,w,c
  2209   00138E  32E8               	rrcf	wreg,f,c
  2210   001390  32E8               	rrcf	wreg,f,c
  2211   001392  0B07               	andlw	7
  2212   001394  6E43               	movwf	??_gpio_pin_write_logic^0,c
  2213   001396  0E01               	movlw	1
  2214   001398  6E44               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2215   00139A  2A43               	incf	??_gpio_pin_write_logic^0,f,c
  2216   00139C  EFD2  F009         	goto	u1114
  2217   0013A0                     u1115:
  2218   0013A0  90D8               	bcf	status,0,c
  2219   0013A2  3644               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2220   0013A4                     u1114:
  2221   0013A4  2E43               	decfsz	??_gpio_pin_write_logic^0,f,c
  2222   0013A6  EFD0  F009         	goto	u1115
  2223   0013AA  5041               	movf	gpio_pin_write_logic@pin^0,w,c
  2224   0013AC  6ED9               	movwf	fsr2l,c
  2225   0013AE  6ADA               	clrf	fsr2h,c
  2226   0013B0  50DF               	movf	223,w,c
  2227   0013B2  0B07               	andlw	7
  2228   0013B4  0D02               	mullw	2
  2229   0013B6  50F3               	movf	243,w,c
  2230   0013B8  0F15               	addlw	low _lat_registers
  2231   0013BA  6ED9               	movwf	fsr2l,c
  2232   0013BC  6ADA               	clrf	fsr2h,c
  2233   0013BE  CFDE F045          	movff	postinc2,??_gpio_pin_write_logic+2
  2234   0013C2  CFDD F046          	movff	postdec2,??_gpio_pin_write_logic+3
  2235   0013C6  C045  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2236   0013CA  C046  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2237   0013CE  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2238   0013D0  12DF               	iorwf	indf2,f,c
  2239                           
  2240                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 break;
  2241   0013D2  EF00  F00A         	goto	l2036
  2242   0013D6                     l2034:
  2243   0013D6  5042               	movf	gpio_pin_write_logic@logic^0,w,c
  2244   0013D8  6E43               	movwf	??_gpio_pin_write_logic^0,c
  2245   0013DA  6A44               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2246                           
  2247                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2248                           ; Switch size 1, requested type "simple"
  2249                           ; Number of cases is 1, Range of values is 0 to 0
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte            4     3 (average)
  2253                           ;	Chosen strategy is simple_byte
  2254   0013DC  5044               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2255   0013DE  0A00               	xorlw	0	; case 0
  2256   0013E0  B4D8               	btfsc	status,2,c
  2257   0013E2  EFF5  F009         	goto	l2696
  2258   0013E6  EF94  F009         	goto	l2026
  2259   0013EA                     l2696:
  2260                           
  2261                           ; Switch size 1, requested type "simple"
  2262                           ; Number of cases is 2, Range of values is 0 to 1
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte            7     4 (average)
  2266                           ;	Chosen strategy is simple_byte
  2267   0013EA  5043               	movf	??_gpio_pin_write_logic^0,w,c
  2268   0013EC  0A00               	xorlw	0	; case 0
  2269   0013EE  B4D8               	btfsc	status,2,c
  2270   0013F0  EF98  F009         	goto	l2028
  2271   0013F4  0A01               	xorlw	1	; case 1
  2272   0013F6  B4D8               	btfsc	status,2,c
  2273   0013F8  EFC3  F009         	goto	l2030
  2274   0013FC  EF94  F009         	goto	l2026
  2275   001400                     l2036:
  2276                           
  2277                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:     return ret;
  2278   001400  5048               	movf	gpio_pin_write_logic@ret^0,w,c
  2279   001402  0012               	return		;funcret
  2280   001404                     __end_of_gpio_pin_write_logic:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _gpio_port_direction_initialize *****************
  2284 ;; Defined at:
  2285 ;;		line 161 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  port            1    wreg     enum E2826
  2288 ;;  direction       1    0[COMRAM] unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  port            1    4[COMRAM] enum E2826
  2291 ;;  ret             1    3[COMRAM] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;Total ram usage:        5 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_application_initialize
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text14
  2315   00194C                     __ptext14:
  2316                           	callstack 0
  2317   00194C                     _gpio_port_direction_initialize:
  2318                           	callstack 29
  2319                           
  2320                           ;incstack = 0
  2321                           ;gpio_port_direction_initialize@port stored from wreg
  2322   00194C  6E45               	movwf	gpio_port_direction_initialize@port^0,c
  2323   00194E                     
  2324                           ;MCAL_Layer/GPIO/hal_gpio.c: 162:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2325   00194E  0E01               	movlw	1
  2326   001950  6E44               	movwf	gpio_port_direction_initialize@ret^0,c
  2327   001952                     
  2328                           ;MCAL_Layer/GPIO/hal_gpio.c: 164:     if(port > 4){
  2329   001952  0E04               	movlw	4
  2330   001954  6445               	cpfsgt	gpio_port_direction_initialize@port^0,c
  2331   001956  EFAF  F00C         	goto	u1311
  2332   00195A  EFB1  F00C         	goto	u1310
  2333   00195E                     u1311:
  2334   00195E  EFB5  F00C         	goto	l2274
  2335   001962                     u1310:
  2336   001962                     
  2337                           ;MCAL_Layer/GPIO/hal_gpio.c: 165:         ret = (Std_ReturnType)0x00;
  2338   001962  0E00               	movlw	0
  2339   001964  6E44               	movwf	gpio_port_direction_initialize@ret^0,c
  2340                           
  2341                           ;MCAL_Layer/GPIO/hal_gpio.c: 166:     }
  2342   001966  EFC5  F00C         	goto	l2276
  2343   00196A                     l2274:
  2344                           
  2345                           ;MCAL_Layer/GPIO/hal_gpio.c: 168:         *tris_registers[port] = direction;
  2346   00196A  5045               	movf	gpio_port_direction_initialize@port^0,w,c
  2347   00196C  0D02               	mullw	2
  2348   00196E  50F3               	movf	243,w,c
  2349   001970  0F1F               	addlw	low _tris_registers
  2350   001972  6ED9               	movwf	fsr2l,c
  2351   001974  6ADA               	clrf	fsr2h,c
  2352   001976  CFDE F042          	movff	postinc2,??_gpio_port_direction_initialize
  2353   00197A  CFDD F043          	movff	postdec2,??_gpio_port_direction_initialize+1
  2354   00197E  C042  FFD9         	movff	??_gpio_port_direction_initialize,fsr2l
  2355   001982  C043  FFDA         	movff	??_gpio_port_direction_initialize+1,fsr2h
  2356   001986  C041  FFDF         	movff	gpio_port_direction_initialize@direction,indf2
  2357   00198A                     l2276:
  2358                           
  2359                           ;MCAL_Layer/GPIO/hal_gpio.c: 170:     return ret;
  2360   00198A  5044               	movf	gpio_port_direction_initialize@ret^0,w,c
  2361   00198C  0012               	return		;funcret
  2362   00198E                     __end_of_gpio_port_direction_initialize:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function ___awmod *****************
  2366 ;; Defined at:
  2367 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  dividend        2    0[COMRAM] int 
  2370 ;;  divisor         2    2[COMRAM] int 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  sign            1    5[COMRAM] unsigned char 
  2373 ;;  counter         1    4[COMRAM] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2    0[COMRAM] int 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:        6 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text15
  2397   001670                     __ptext15:
  2398                           	callstack 0
  2399   001670                     ___awmod:
  2400                           	callstack 30
  2401   001670  0E00               	movlw	0
  2402   001672  6E46               	movwf	___awmod@sign^0,c
  2403   001674  BE42               	btfsc	(___awmod@dividend+1)^0,7,c
  2404   001676  EF41  F00B         	goto	u1450
  2405   00167A  EF3F  F00B         	goto	u1451
  2406   00167E                     u1451:
  2407   00167E  EF47  F00B         	goto	l2390
  2408   001682                     u1450:
  2409   001682  6C41               	negf	___awmod@dividend^0,c
  2410   001684  1E42               	comf	(___awmod@dividend+1)^0,f,c
  2411   001686  B0D8               	btfsc	status,0,c
  2412   001688  2A42               	incf	(___awmod@dividend+1)^0,f,c
  2413   00168A  0E01               	movlw	1
  2414   00168C  6E46               	movwf	___awmod@sign^0,c
  2415   00168E                     l2390:
  2416   00168E  BE44               	btfsc	(___awmod@divisor+1)^0,7,c
  2417   001690  EF4E  F00B         	goto	u1460
  2418   001694  EF4C  F00B         	goto	u1461
  2419   001698                     u1461:
  2420   001698  EF52  F00B         	goto	l2394
  2421   00169C                     u1460:
  2422   00169C  6C43               	negf	___awmod@divisor^0,c
  2423   00169E  1E44               	comf	(___awmod@divisor+1)^0,f,c
  2424   0016A0  B0D8               	btfsc	status,0,c
  2425   0016A2  2A44               	incf	(___awmod@divisor+1)^0,f,c
  2426   0016A4                     l2394:
  2427   0016A4  5043               	movf	___awmod@divisor^0,w,c
  2428   0016A6  1044               	iorwf	(___awmod@divisor+1)^0,w,c
  2429   0016A8  B4D8               	btfsc	status,2,c
  2430   0016AA  EF59  F00B         	goto	u1471
  2431   0016AE  EF5B  F00B         	goto	u1470
  2432   0016B2                     u1471:
  2433   0016B2  EF7F  F00B         	goto	l2410
  2434   0016B6                     u1470:
  2435   0016B6  0E01               	movlw	1
  2436   0016B8  6E45               	movwf	___awmod@counter^0,c
  2437   0016BA  EF63  F00B         	goto	l2400
  2438   0016BE                     l2398:
  2439   0016BE  90D8               	bcf	status,0,c
  2440   0016C0  3643               	rlcf	___awmod@divisor^0,f,c
  2441   0016C2  3644               	rlcf	(___awmod@divisor+1)^0,f,c
  2442   0016C4  2A45               	incf	___awmod@counter^0,f,c
  2443   0016C6                     l2400:
  2444   0016C6  AE44               	btfss	(___awmod@divisor+1)^0,7,c
  2445   0016C8  EF68  F00B         	goto	u1481
  2446   0016CC  EF6A  F00B         	goto	u1480
  2447   0016D0                     u1481:
  2448   0016D0  EF5F  F00B         	goto	l2398
  2449   0016D4                     u1480:
  2450   0016D4                     l2402:
  2451   0016D4  5043               	movf	___awmod@divisor^0,w,c
  2452   0016D6  5C41               	subwf	___awmod@dividend^0,w,c
  2453   0016D8  5044               	movf	(___awmod@divisor+1)^0,w,c
  2454   0016DA  5842               	subwfb	(___awmod@dividend+1)^0,w,c
  2455   0016DC  A0D8               	btfss	status,0,c
  2456   0016DE  EF73  F00B         	goto	u1491
  2457   0016E2  EF75  F00B         	goto	u1490
  2458   0016E6                     u1491:
  2459   0016E6  EF79  F00B         	goto	l2406
  2460   0016EA                     u1490:
  2461   0016EA  5043               	movf	___awmod@divisor^0,w,c
  2462   0016EC  5E41               	subwf	___awmod@dividend^0,f,c
  2463   0016EE  5044               	movf	(___awmod@divisor+1)^0,w,c
  2464   0016F0  5A42               	subwfb	(___awmod@dividend+1)^0,f,c
  2465   0016F2                     l2406:
  2466   0016F2  90D8               	bcf	status,0,c
  2467   0016F4  3244               	rrcf	(___awmod@divisor+1)^0,f,c
  2468   0016F6  3243               	rrcf	___awmod@divisor^0,f,c
  2469   0016F8  2E45               	decfsz	___awmod@counter^0,f,c
  2470   0016FA  EF6A  F00B         	goto	l2402
  2471   0016FE                     l2410:
  2472   0016FE  5046               	movf	___awmod@sign^0,w,c
  2473   001700  B4D8               	btfsc	status,2,c
  2474   001702  EF85  F00B         	goto	u1501
  2475   001706  EF87  F00B         	goto	u1500
  2476   00170A                     u1501:
  2477   00170A  EF8B  F00B         	goto	l2414
  2478   00170E                     u1500:
  2479   00170E  6C41               	negf	___awmod@dividend^0,c
  2480   001710  1E42               	comf	(___awmod@dividend+1)^0,f,c
  2481   001712  B0D8               	btfsc	status,0,c
  2482   001714  2A42               	incf	(___awmod@dividend+1)^0,f,c
  2483   001716                     l2414:
  2484   001716  C041  F041         	movff	___awmod@dividend,?___awmod
  2485   00171A  C042  F042         	movff	___awmod@dividend+1,?___awmod+1
  2486   00171E  0012               	return		;funcret
  2487   001720                     __end_of___awmod:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function ___awdiv *****************
  2491 ;; Defined at:
  2492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  dividend        2    0[COMRAM] int 
  2495 ;;  divisor         2    2[COMRAM] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  quotient        2    6[COMRAM] int 
  2498 ;;  sign            1    5[COMRAM] unsigned char 
  2499 ;;  counter         1    4[COMRAM] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2    0[COMRAM] int 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        8 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text16
  2523   0015AC                     __ptext16:
  2524                           	callstack 0
  2525   0015AC                     ___awdiv:
  2526                           	callstack 30
  2527   0015AC  0E00               	movlw	0
  2528   0015AE  6E46               	movwf	___awdiv@sign^0,c
  2529   0015B0  BE44               	btfsc	(___awdiv@divisor+1)^0,7,c
  2530   0015B2  EFDF  F00A         	goto	u1390
  2531   0015B6  EFDD  F00A         	goto	u1391
  2532   0015BA                     u1391:
  2533   0015BA  EFE5  F00A         	goto	l2346
  2534   0015BE                     u1390:
  2535   0015BE  6C43               	negf	___awdiv@divisor^0,c
  2536   0015C0  1E44               	comf	(___awdiv@divisor+1)^0,f,c
  2537   0015C2  B0D8               	btfsc	status,0,c
  2538   0015C4  2A44               	incf	(___awdiv@divisor+1)^0,f,c
  2539   0015C6  0E01               	movlw	1
  2540   0015C8  6E46               	movwf	___awdiv@sign^0,c
  2541   0015CA                     l2346:
  2542   0015CA  BE42               	btfsc	(___awdiv@dividend+1)^0,7,c
  2543   0015CC  EFEC  F00A         	goto	u1400
  2544   0015D0  EFEA  F00A         	goto	u1401
  2545   0015D4                     u1401:
  2546   0015D4  EFF2  F00A         	goto	l2352
  2547   0015D8                     u1400:
  2548   0015D8  6C41               	negf	___awdiv@dividend^0,c
  2549   0015DA  1E42               	comf	(___awdiv@dividend+1)^0,f,c
  2550   0015DC  B0D8               	btfsc	status,0,c
  2551   0015DE  2A42               	incf	(___awdiv@dividend+1)^0,f,c
  2552   0015E0  0E01               	movlw	1
  2553   0015E2  1A46               	xorwf	___awdiv@sign^0,f,c
  2554   0015E4                     l2352:
  2555   0015E4  0E00               	movlw	0
  2556   0015E6  6E48               	movwf	(___awdiv@quotient+1)^0,c
  2557   0015E8  0E00               	movlw	0
  2558   0015EA  6E47               	movwf	___awdiv@quotient^0,c
  2559   0015EC  5043               	movf	___awdiv@divisor^0,w,c
  2560   0015EE  1044               	iorwf	(___awdiv@divisor+1)^0,w,c
  2561   0015F0  B4D8               	btfsc	status,2,c
  2562   0015F2  EFFD  F00A         	goto	u1411
  2563   0015F6  EFFF  F00A         	goto	u1410
  2564   0015FA                     u1411:
  2565   0015FA  EF27  F00B         	goto	l2374
  2566   0015FE                     u1410:
  2567   0015FE  0E01               	movlw	1
  2568   001600  6E45               	movwf	___awdiv@counter^0,c
  2569   001602  EF07  F00B         	goto	l2360
  2570   001606                     l2358:
  2571   001606  90D8               	bcf	status,0,c
  2572   001608  3643               	rlcf	___awdiv@divisor^0,f,c
  2573   00160A  3644               	rlcf	(___awdiv@divisor+1)^0,f,c
  2574   00160C  2A45               	incf	___awdiv@counter^0,f,c
  2575   00160E                     l2360:
  2576   00160E  AE44               	btfss	(___awdiv@divisor+1)^0,7,c
  2577   001610  EF0C  F00B         	goto	u1421
  2578   001614  EF0E  F00B         	goto	u1420
  2579   001618                     u1421:
  2580   001618  EF03  F00B         	goto	l2358
  2581   00161C                     u1420:
  2582   00161C                     l2362:
  2583   00161C  90D8               	bcf	status,0,c
  2584   00161E  3647               	rlcf	___awdiv@quotient^0,f,c
  2585   001620  3648               	rlcf	(___awdiv@quotient+1)^0,f,c
  2586   001622  5043               	movf	___awdiv@divisor^0,w,c
  2587   001624  5C41               	subwf	___awdiv@dividend^0,w,c
  2588   001626  5044               	movf	(___awdiv@divisor+1)^0,w,c
  2589   001628  5842               	subwfb	(___awdiv@dividend+1)^0,w,c
  2590   00162A  A0D8               	btfss	status,0,c
  2591   00162C  EF1A  F00B         	goto	u1431
  2592   001630  EF1C  F00B         	goto	u1430
  2593   001634                     u1431:
  2594   001634  EF21  F00B         	goto	l2370
  2595   001638                     u1430:
  2596   001638  5043               	movf	___awdiv@divisor^0,w,c
  2597   00163A  5E41               	subwf	___awdiv@dividend^0,f,c
  2598   00163C  5044               	movf	(___awdiv@divisor+1)^0,w,c
  2599   00163E  5A42               	subwfb	(___awdiv@dividend+1)^0,f,c
  2600   001640  8047               	bsf	___awdiv@quotient^0,0,c
  2601   001642                     l2370:
  2602   001642  90D8               	bcf	status,0,c
  2603   001644  3244               	rrcf	(___awdiv@divisor+1)^0,f,c
  2604   001646  3243               	rrcf	___awdiv@divisor^0,f,c
  2605   001648  2E45               	decfsz	___awdiv@counter^0,f,c
  2606   00164A  EF0E  F00B         	goto	l2362
  2607   00164E                     l2374:
  2608   00164E  5046               	movf	___awdiv@sign^0,w,c
  2609   001650  B4D8               	btfsc	status,2,c
  2610   001652  EF2D  F00B         	goto	u1441
  2611   001656  EF2F  F00B         	goto	u1440
  2612   00165A                     u1441:
  2613   00165A  EF33  F00B         	goto	l2378
  2614   00165E                     u1440:
  2615   00165E  6C47               	negf	___awdiv@quotient^0,c
  2616   001660  1E48               	comf	(___awdiv@quotient+1)^0,f,c
  2617   001662  B0D8               	btfsc	status,0,c
  2618   001664  2A48               	incf	(___awdiv@quotient+1)^0,f,c
  2619   001666                     l2378:
  2620   001666  C047  F041         	movff	___awdiv@quotient,?___awdiv
  2621   00166A  C048  F042         	movff	___awdiv@quotient+1,?___awdiv+1
  2622   00166E  0012               	return		;funcret
  2623   001670                     __end_of___awdiv:
  2624                           	callstack 0
  2625                           
  2626                           	psect	smallconst
  2627   001000                     __psmallconst:
  2628                           	callstack 0
  2629   001000  00                 	db	0
  2630   001001  00                 	db	0	; dummy byte at the end
  2631   000000                     
  2632                           	psect	rparam
  2633   000000                     
  2634                           	psect	config
  2635                           
  2636                           ; Padding undefined space
  2637   300000                     	org	3145728
  2638   300000  FF                 	db	255
  2639                           
  2640                           ;Config register CONFIG1H @ 0x300001
  2641                           ;	Oscillator Selection bits
  2642                           ;	OSC = HS, HS oscillator
  2643                           ;	Fail-Safe Clock Monitor Enable bit
  2644                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2645                           ;	Internal/External Oscillator Switchover bit
  2646                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2647   300001                     	org	3145729
  2648   300001  02                 	db	2
  2649                           
  2650                           ;Config register CONFIG2L @ 0x300002
  2651                           ;	Power-up Timer Enable bit
  2652                           ;	PWRT = OFF, PWRT disabled
  2653                           ;	Brown-out Reset Enable bits
  2654                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2655                           ;	Brown Out Reset Voltage bits
  2656                           ;	BORV = 1, 
  2657   300002                     	org	3145730
  2658   300002  09                 	db	9
  2659                           
  2660                           ;Config register CONFIG2H @ 0x300003
  2661                           ;	Watchdog Timer Enable bit
  2662                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2663                           ;	Watchdog Timer Postscale Select bits
  2664                           ;	WDTPS = 32768, 1:32768
  2665   300003                     	org	3145731
  2666   300003  1E                 	db	30
  2667                           
  2668                           ; Padding undefined space
  2669   300004                     	org	3145732
  2670   300004  FF                 	db	255
  2671                           
  2672                           ;Config register CONFIG3H @ 0x300005
  2673                           ;	CCP2 MUX bit
  2674                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2675                           ;	PORTB A/D Enable bit
  2676                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2677                           ;	Low-Power Timer1 Oscillator Enable bit
  2678                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2679                           ;	MCLR Pin Enable bit
  2680                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2681   300005                     	org	3145733
  2682   300005  81                 	db	129
  2683                           
  2684                           ;Config register CONFIG4L @ 0x300006
  2685                           ;	Stack Full/Underflow Reset Enable bit
  2686                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2687                           ;	Single-Supply ICSP Enable bit
  2688                           ;	LVP = OFF, Single-Supply ICSP disabled
  2689                           ;	Extended Instruction Set Enable bit
  2690                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2691                           ;	Background Debugger Enable bit
  2692                           ;	DEBUG = 0x1, unprogrammed default
  2693   300006                     	org	3145734
  2694   300006  81                 	db	129
  2695                           
  2696                           ; Padding undefined space
  2697   300007                     	org	3145735
  2698   300007  FF                 	db	255
  2699                           
  2700                           ;Config register CONFIG5L @ 0x300008
  2701                           ;	Code Protection bit
  2702                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2703                           ;	Code Protection bit
  2704                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2705                           ;	Code Protection bit
  2706                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2707                           ;	Code Protection bit
  2708                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2709   300008                     	org	3145736
  2710   300008  0F                 	db	15
  2711                           
  2712                           ;Config register CONFIG5H @ 0x300009
  2713                           ;	Boot Block Code Protection bit
  2714                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2715                           ;	Data EEPROM Code Protection bit
  2716                           ;	CPD = OFF, Data EEPROM not code-protected
  2717   300009                     	org	3145737
  2718   300009  C0                 	db	192
  2719                           
  2720                           ;Config register CONFIG6L @ 0x30000A
  2721                           ;	Write Protection bit
  2722                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2723                           ;	Write Protection bit
  2724                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2725                           ;	Write Protection bit
  2726                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2727                           ;	Write Protection bit
  2728                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2729   30000A                     	org	3145738
  2730   30000A  0F                 	db	15
  2731                           
  2732                           ;Config register CONFIG6H @ 0x30000B
  2733                           ;	Configuration Register Write Protection bit
  2734                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2735                           ;	Boot Block Write Protection bit
  2736                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2737                           ;	Data EEPROM Write Protection bit
  2738                           ;	WRTD = OFF, Data EEPROM not write-protected
  2739   30000B                     	org	3145739
  2740   30000B  E0                 	db	224
  2741                           
  2742                           ;Config register CONFIG7L @ 0x30000C
  2743                           ;	Table Read Protection bit
  2744                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2745                           ;	Table Read Protection bit
  2746                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2747                           ;	Table Read Protection bit
  2748                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2749                           ;	Table Read Protection bit
  2750                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2751   30000C                     	org	3145740
  2752   30000C  0F                 	db	15
  2753                           
  2754                           ;Config register CONFIG7H @ 0x30000D
  2755                           ;	Boot Block Table Read Protection bit
  2756                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2757   30000D                     	org	3145741
  2758   30000D  40                 	db	64
  2759                           tosu	equ	0xFFF
  2760                           tosh	equ	0xFFE
  2761                           tosl	equ	0xFFD
  2762                           stkptr	equ	0xFFC
  2763                           pclatu	equ	0xFFB
  2764                           pclath	equ	0xFFA
  2765                           pcl	equ	0xFF9
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           indf0	equ	0xFEF
  2773                           postinc0	equ	0xFEE
  2774                           postdec0	equ	0xFED
  2775                           preinc0	equ	0xFEC
  2776                           plusw0	equ	0xFEB
  2777                           fsr0h	equ	0xFEA
  2778                           fsr0l	equ	0xFE9
  2779                           wreg	equ	0xFE8
  2780                           indf1	equ	0xFE7
  2781                           postinc1	equ	0xFE6
  2782                           postdec1	equ	0xFE5
  2783                           preinc1	equ	0xFE4
  2784                           plusw1	equ	0xFE3
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           bsr	equ	0xFE0
  2788                           indf2	equ	0xFDF
  2789                           postinc2	equ	0xFDE
  2790                           postdec2	equ	0xFDD
  2791                           preinc2	equ	0xFDC
  2792                           plusw2	equ	0xFDB
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        64
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22      95
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize_write@pin	PTR const struct . size(1) Largest target is 10
		 -> _7seg(COMRAM[5]), _7seg$segment_pins(COMRAM[4]), lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), 
		 -> lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 10
		 -> _7seg(COMRAM[5]), _7seg$segment_pins(COMRAM[4]), lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), 
		 -> lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), 
		 -> relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    seven_segement_intialize@seg	PTR const struct . size(1) Largest target is 5
		 -> _7seg(COMRAM[5]), 

    seven_segement_write_number@seg	PTR const struct . size(1) Largest target is 5
		 -> _7seg(COMRAM[5]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _seven_segement_write_number->___awdiv
    _seven_segement_write_number->_gpio_pin_write_logic
    _application_initialize->_lcd_8bit_initialize
    _seven_segement_intialize->_gpio_pin_direction_initialize_write
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_direction_initialize_write
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_direction_initialize_write->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   54834
                                             20 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
             _application_initialize
              _gpio_port_write_logic
        _seven_segement_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segement_write_number                          3     1      2    5747
                                              8 COMRAM     3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     546
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   46987
     _gpio_port_direction_initialize
                _lcd_4bit_initialize
                _lcd_8bit_initialize
           _seven_segement_intialize
 ---------------------------------------------------------------------------------
 (2) _seven_segement_intialize                             2     1      1    6013
                                             15 COMRAM     2     1      1
_gpio_pin_direction_initialize_write
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   17515
                                             16 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   11295
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bits_send_enable_signal                         2     1      1    4808
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   23217
                                             15 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   16974
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5398
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    4960
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize_write                  7     6      1    5799
                                              8 COMRAM     7     6      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    4587
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_initialize                       5     4      1     242
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _application_initialize
     _gpio_port_direction_initialize
     _lcd_4bit_initialize
       _gpio_pin_direction_initialize_write
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_direction_initialize_write
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bits_send_enable_signal
           _gpio_pin_write_logic
     _seven_segement_intialize
       _gpio_pin_direction_initialize_write
   _gpio_port_write_logic
   _seven_segement_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     16      5F       1       74.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      39        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jun 02 16:11:07 2024

                            ?_lcd_send_4bits 0049                                           l80 186A  
                                         l75 14DC                                 ___awdiv@sign 0046  
                                        l122 180E                                          l115 15AA  
                                        l170 18C0                                          l173 1A86  
                                        l176 1A60                                          l337 12F2  
                                        l453 1908                                          l287 1A04  
                                        l368 1402                                          l705 171E  
                                        l458 1798                                          l387 198C  
                                        l399 194A                                          l692 166E  
       __end_of_lcd_4bits_send_enable_signal 1A88                 _lcd_4bits_send_enable_signal 1A62  
                                        _ret 005F                                 ___awmod@sign 0046  
                        led_initialize@F2888 005E                                          wreg 0FE8  
                      relay_initialize@F2884 005A                                         l2030 1386  
                                       l2022 12F4                                         l2110 1868  
                                       l2024 1308                                         l2104 1810  
                                       l2120 17C2                                         l2034 13D6  
                                       l2026 1328                                         l2050 1892  
                                       l2106 1820                                         l2130 17F2  
                                       l2114 179A                                         l2210 1530  
                                       l2028 1330                                         l2036 1400  
                                       l2060 1A6E                                         l2052 18A8  
                                       l2044 186C                                         l2108 1828  
                                       l2140 1418                                         l2132 1802  
                                       l2116 17AE                                         l2220 1576  
                                       l2212 153E                                         l2204 1512  
                                       l2062 1A76                                         l2046 186C  
                                       l2150 1438                                         l2142 1420  
                                       l2070 1A3C                                         l2126 17C6  
                                       l2134 180C                                         l2118 17B6  
                                       l2222 1582                                         l2214 154A  
                                       l2206 151E                                         l2400 16C6  
                                       l2080 11B6                                         l2064 1A84  
                                       l2056 1A62                                         l2048 187E  
                                       l2160 1470                                         l2152 1444  
                                       l2144 1434                                         l2072 1A48  
                                       l2128 17F0                                         l2224 158E  
                                       l2216 1564                                         l2208 1520  
                                       l2312 19CE                                         l2320 1928  
                                       l2402 16D4                                         l2410 16FE  
                                       l2090 1294                                         l2082 11C6  
                                       l2058 1A62                                         l2170 14B4  
                                       l2162 148A                                         l2154 1446  
                                       l2138 1404                                         l2074 1A50  
                                       l2226 159A                                         l2218 156A  
                                       l2322 1948                                         l2314 190C  
                                       l2330 1740                                         l2340 15B0  
                                       l2412 170E                                         l2404 16EA  
                                       l2092 1298                                         l2084 11E6  
                                       l2172 14C0                                         l2164 1490  
                                       l2156 1456                                         l2076 1A5E  
                                       l2068 1A3C                                         l2228 15A8  
                                       l2260 18D2                                         l2316 1910  
                                       l2332 1748                                         l2350 15E0  
                                       l2342 15BE                                         l2414 1716  
                                       l2406 16F2                                         l2270 1952  
                                       l2094 12D8                                         l2086 11EE  
                                       l2174 14CC                                         l2166 149C  
                                       l2158 1464                                         l2262 18DA  
                                       l2318 1920                                         l2334 1796  
                                       l2326 1720                                         l2360 160E  
                                       l2352 15E4                                         l2344 15C6  
                                       l2408 16F8                                         l2272 1962  
                                       l2088 1244                                         l2096 12F0  
                                       l2168 14A8                                         l2176 14DA  
                                       l2192 14DE                                         l2264 1906  
                                       l2328 1730                                         l2370 1642  
                                       l2362 161C                                         l2354 15EC  
                                       l2346 15CA                                         l2338 15AC  
                                       l2274 196A                                         l2194 14F2  
                                       l2258 18C2                                         l2372 1648  
                                       l2364 1622                                         l2356 15FE  
                                       l2348 15D8                                         l2276 198A  
                                       l2268 194E                                         l2196 14FA  
                                       l2366 1638                                         l2358 1606  
                                       l2374 164E                                         l2390 168E  
                                       l2382 1670                                         l2198 150E  
                                       l2630 1002                                         l2376 165E  
                                       l2368 1640                                         l2392 169C  
                                       l2384 1674                                         l2640 103A  
                                       l2632 1006                                         l2378 1666  
                                       l2394 16A4                                         l2386 1682  
                                       l2650 10AA                                         l2642 1042  
                                       l2396 16B6                                         l2388 168A  
                                       l2660 111E                                         l2652 10B6  
                                       l2644 104E                                         l2398 16BE  
                                       l2670 1168                                         l2662 113E  
                                       l2654 10D6                                         l2646 106E  
                                       l2638 100E                                         l2680 1196  
                                       l2672 117A                                         l2664 1146  
                                       l2656 110A                                         l2648 10A2  
                                       l2682 1198                                         l2674 117E  
                                       l2666 114A                                         l2658 1112  
                                       l2684 11AA                                         l2676 1180  
                                       l2668 1166                                         l2694 12C2  
                                       l2678 1192                                         l2696 13EA  
                                       u1104 134E                                         u1120 11C6  
                                       u1105 134A                                         u1121 11C2  
                                       u1114 13A4                                         u1130 11E6  
                                       u1210 1802                                         u1115 13A0  
                                       u1131 11E2                                         u1211 17FE  
                                       u1220 1418                                         u1204 17E0  
                                       u1300 18D2                                         u1221 1414  
                                       u1205 17DC                                         u1301 18CE  
                                       u1310 1962                                         u1230 1456  
                                       u1311 195E                                         u1231 1452  
                                       u1400 15D8                                         u1080 1308  
                                       u1160 12AE                                         u1144 120C  
         lcd_8bit_send_command@l_pin_counter 0050                                         u1401 15D4  
                                       u1081 1304                                         u1161 12A8  
                                       u1145 1208                                         u1410 15FE  
                                       u1090 1328                                         u1170 12B0  
                                       u1154 1262                                         u1250 14F2  
                                       u1411 15FA                                         u1091 1324  
                                       u1155 125E                                         u1251 14EE  
                                       u1420 161C                                         u1500 170E  
                                       u1180 1820                                         u1260 1530  
                                       u1421 1618                                         u1501 170A  
                                       u1181 181C                                         u1261 152C  
                                       _LATA 0F89                                         u1430 1638  
                                       u1190 17AE                                         _LATB 0F8A  
                                       u1431 1634                                         u1191 17AA  
                                       _LATC 0F8B                                         u1440 165E  
                                       u1360 1920                                         _LATD 0F8C  
                                       u1441 165A                                         u1361 191C  
                                       _LATE 0F8D                                         u1450 1682  
                                       u1370 1730                                         u1451 167E  
                                       u1371 172C                                         u1460 169C  
                                       u1380 1740                                         u1461 1698  
                                       u1381 173C                                         u1390 15BE  
                                       u1470 16B6                                         u1710 1166  
                                       u1391 15BA                                         u1471 16B2  
                                       u1711 1162                                         u1480 16D4  
                                       u1720 117A                                         u1481 16D0  
                                       u1721 1176                                         u1490 16EA  
                                       u1730 1192                                         u1491 16E6  
                                       u1731 118E                                         u1740 11AA  
                                       u1741 11A6                                         u1807 1140  
                                       u1817 1536                                         u1827 1550  
                                       u1837 1566                                         u1757 103C  
                                       u1847 1A4A                                         u1767 1070  
                                       u1857 145C                                         u1777 10A4  
                                       u1867 1476                                         u1787 10D8  
                                       u1877 148C                                         u1797 110C  
                                       u1887 1A70                                         _lcd1 0036  
                                       _lcd2 002C                                         _main 1002  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       prodl 0FF3                                         start 0000  
              __end_of_lcd_8bit_send_command 1810                                 ___param_bank 0000  
                      _lcd_4bit_send_command 1810                        _gpio_port_write_logic 190A  
                       _gpio_pin_write_logic 12F4                                        ?_main 0041  
                   ??_application_initialize 0055                              __end_of___awdiv 1670  
                            __end_of___awmod 1720                              ___awdiv@divisor 0043  
                            ___awdiv@counter 0045                          relay_turn_off@F2894 0058  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
                                      __7seg 003C                ?_lcd_4bits_send_enable_signal 0049  
                                      _hours 0029                                        main@i 0055  
                                      tablat 0FF5                                        status 0FD8  
                            __initialization 1A06                                 __end_of_main 11B6  
                      ?_gpio_pin_write_logic 0041                                _lat_registers 0015  
                                     ??_main 0055                                __activetblptr 0002  
                           led_turn_on@F2893 005D             __end_of_seven_segement_intialize 190A  
                           ___awdiv@dividend 0041                    gpio_port_write_logic@port 0045  
     __end_of_gpio_port_direction_initialize 198E               _gpio_port_direction_initialize 194C  
                     ?_lcd_4bit_send_command 004C                       ?_gpio_port_write_logic 0041  
                seven_segement_intialize@seg 0050                  seven_segement_intialize@ret 0051  
                                  ??___awdiv 0045                                    ??___awmod 0045  
                                     clear_0 1A2C                             ___awdiv@quotient 0047  
                            ___awmod@divisor 0043                                       isa$std 0001  
                            ___awmod@counter 0045                                 __pdataCOMRAM 0001  
                               __mediumconst 0000                                       tblptrh 0FF7  
                                     tblptrl 0FF6                                       tblptru 0FF8  
               lcd_8bit_initialize@l_counter 0053              lcd_8bits_send_enable_signal@lcd 0049  
            lcd_8bits_send_enable_signal@ret 004A                                   __accesstop 0080  
                    __end_of__initialization 1A32                                ___rparam_used 0001  
                           ??_lcd_send_4bits 004B                       ??_gpio_pin_write_logic 0043  
                             __pcstackCOMRAM 0041                     lcd_4bit_send_command@lcd 004C  
                   lcd_4bit_send_command@ret 004E                     gpio_port_write_logic@ret 0044  
                     _application_initialize 19CE              lcd_4bits_send_enable_signal@lcd 0049  
                                 __pnvCOMRAM 005F              lcd_4bits_send_enable_signal@ret 004A  
                     lcd_8bit_initialize@lcd 0051                       lcd_8bit_initialize@ret 0054  
             ??_lcd_8bits_send_enable_signal 004A                    ?_seven_segement_intialize 0050  
                          led_turn_off@F2898 005C                              led_toggle@F2903 005B  
                             _tris_registers 001F                                      __Hparam 0000  
                                    __Lparam 0000                 ?_seven_segement_write_number 0049  
                      _lcd_8bit_send_command 179A                                      ___awdiv 15AC  
                                    ___awmod 1670                                 __psmallconst 1000  
                                    __pcinit 1A06                                      __ramtop 1000  
                                    __ptext0 1002                                      __ptext1 1720  
                                    __ptext2 190A                                      __ptext3 19CE  
                                    __ptext4 18C2                                      __ptext5 14DE  
                                    __ptext6 179A                                      __ptext7 1A3C  
                                    __ptext8 1404                                      __ptext9 1810  
                           ___awmod@dividend 0041                                      _minutes 002A  
                                    _seconds 002B                         end_of_initialization 1A32  
                          lcd_send_4bits@lcd 0049                            lcd_send_4bits@ret 004B  
                    _seg_common_anode_values 0001            gpio_port_direction_initialize@ret 0044  
                              __Lmediumconst 0000                      ??_lcd_4bit_send_command 004E  
                    ??_gpio_port_write_logic 0042                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                ??_seven_segement_write_number 004B  
                        _lcd_4bit_initialize 1404                         ?_lcd_4bit_initialize 0050  
                     ?_lcd_8bit_send_command 004B                           relay_turn_on@F2889 0059  
                          relay_toggle@F2899 0057      gpio_port_direction_initialize@direction 0041  
                              __pidataCOMRAM 198E                          start_initialization 1A06  
                        _lcd_8bit_initialize 14DE                      ?_application_initialize 0041  
                      ??_lcd_4bit_initialize 0051                         ?_lcd_8bit_initialize 0051  
               lcd_4bit_send_command@command 004D                     lcd_8bit_send_command@lcd 004B  
                   lcd_8bit_send_command@ret 004F                                  __pbssCOMRAM 0057  
             __end_of_application_initialize 1A06               ??_lcd_4bits_send_enable_signal 004A  
                      ??_lcd_8bit_initialize 0052               seven_segement_write_number@seg 0049  
             seven_segement_write_number@ret 004B                                     ?___awdiv 0041  
                                   ?___awmod 0041                    gpio_pin_write_logic@logic 0042  
                                __smallconst 1000         __end_of_lcd_8bits_send_enable_signal 1A62  
               _lcd_8bits_send_enable_signal 1A3C                   lcd_send_4bits@data_command 004A  
                   _seven_segement_intialize 18C2                __end_of_lcd_4bit_send_command 186C  
              __end_of_gpio_port_write_logic 194C  __end_of_gpio_pin_direction_initialize_write 12F4  
      ??_gpio_pin_direction_initialize_write 004A         ?_gpio_pin_direction_initialize_write 0049  
        _gpio_pin_direction_initialize_write 11B6                      gpio_pin_write_logic@pin 0041  
                    gpio_pin_write_logic@ret 0048                                    copy_data0 1A1A  
              ?_lcd_8bits_send_enable_signal 0049                      ??_lcd_8bit_send_command 004D  
                                   __Hrparam 0000                                     __Lrparam 0000  
                                   __ptext10 186C                                     __ptext11 1A62  
                                   __ptext12 11B6                                     __ptext13 12F4  
                                   __ptext14 194C                                     __ptext15 1670  
                                   __ptext16 15AC          __end_of_seven_segement_write_number 179A  
                _seven_segement_write_number 1720                                     isa$xinst 0000  
               lcd_4bit_initialize@l_counter 0052                               _lcd_send_4bits 186C  
     gpio_pin_direction_initialize_write@pin 0049       gpio_pin_direction_initialize_write@ret 004F  
                __end_of_lcd_4bit_initialize 14DE             ??_gpio_port_direction_initialize 0042  
            ?_gpio_port_direction_initialize 0041           gpio_port_direction_initialize@port 0045  
               __end_of_gpio_pin_write_logic 1404            seven_segement_write_number@number 004A  
                     __end_of_lcd_send_4bits 18C2                               _port_registers 000B  
                 gpio_port_write_logic@logic 0041                   ??_seven_segement_intialize 0051  
                __end_of_lcd_8bit_initialize 15AC                 lcd_8bit_send_command@command 004C  
                     lcd_4bit_initialize@lcd 0050                       lcd_4bit_initialize@ret 0053  
