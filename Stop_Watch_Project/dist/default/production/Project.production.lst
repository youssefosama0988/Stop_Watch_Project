

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 04 00:34:32 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 23/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   00197E                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _port_registers
    75   00197E  80                 	db	128
    76   00197F  0F                 	db	15
    77   001980  81                 	db	129
    78   001981  0F                 	db	15
    79   001982  82                 	db	130
    80   001983  0F                 	db	15
    81   001984  83                 	db	131
    82   001985  0F                 	db	15
    83   001986  84                 	db	132
    84   001987  0F                 	db	15
    85                           
    86                           ;initializer for _lat_registers
    87   001988  89                 	db	137
    88   001989  0F                 	db	15
    89   00198A  8A                 	db	138
    90   00198B  0F                 	db	15
    91   00198C  8B                 	db	139
    92   00198D  0F                 	db	15
    93   00198E  8C                 	db	140
    94   00198F  0F                 	db	15
    95   001990  8D                 	db	141
    96   001991  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   001992  92                 	db	146
   100   001993  0F                 	db	15
   101   001994  93                 	db	147
   102   001995  0F                 	db	15
   103   001996  94                 	db	148
   104   001997  0F                 	db	15
   105   001998  95                 	db	149
   106   001999  0F                 	db	15
   107   00199A  96                 	db	150
   108   00199B  0F                 	db	15
   109                           
   110                           ;initializer for _lcd2
   111   00199C  32                 	db	50
   112   00199D  3A                 	db	58
   113   00199E  03                 	db	3
   114   00199F  0B                 	db	11
   115   0019A0  13                 	db	19
   116   0019A1  1B                 	db	27
   117   0019A2  23                 	db	35
   118   0019A3  2B                 	db	43
   119   0019A4  33                 	db	51
   120   0019A5  3B                 	db	59
   121                           
   122                           ;initializer for _lcd1
   123   0019A6  02                 	db	2
   124   0019A7  0A                 	db	10
   125   0019A8  12                 	db	18
   126   0019A9  1A                 	db	26
   127   0019AA  22                 	db	34
   128   0019AB  2A                 	db	42
   129                           
   130                           	psect	nvCOMRAM
   131   000054                     __pnvCOMRAM:
   132                           	callstack 0
   133   000054                     _lcd_counter:
   134                           	callstack 0
   135   000054                     	ds	1
   136   000055                     _ret:
   137                           	callstack 0
   138   000055                     	ds	1
   139   000000                     _PORTE	set	3972
   140   000000                     _PORTD	set	3971
   141   000000                     _PORTC	set	3970
   142   000000                     _PORTB	set	3969
   143   000000                     _PORTA	set	3968
   144   000000                     _LATA	set	3977
   145   000000                     _TRISA	set	3986
   146   000000                     _TRISE	set	3990
   147   000000                     _TRISD	set	3989
   148   000000                     _TRISC	set	3988
   149   000000                     _TRISB	set	3987
   150   000000                     _LATE	set	3981
   151   000000                     _LATD	set	3980
   152   000000                     _LATC	set	3979
   153   000000                     _LATB	set	3978
   154                           
   155                           	psect	smallconst
   156   001000                     __psmallconst:
   157                           	callstack 0
   158   001000  00                 	db	0
   159   001001                     STR_3:
   160   001001  59                 	db	89	;'Y'
   161   001002  6F                 	db	111	;'o'
   162   001003  75                 	db	117	;'u'
   163   001004  73                 	db	115	;'s'
   164   001005  73                 	db	115	;'s'
   165   001006  65                 	db	101	;'e'
   166   001007  66                 	db	102	;'f'
   167   001008  2D                 	db	45
   168   001009  4F                 	db	79	;'O'
   169   00100A  73                 	db	115	;'s'
   170   00100B  61                 	db	97	;'a'
   171   00100C  6D                 	db	109	;'m'
   172   00100D  61                 	db	97	;'a'
   173   00100E  00                 	db	0
   174   00100F                     STR_2:
   175   00100F  4D                 	db	77	;'M'
   176   001010  61                 	db	97	;'a'
   177   001011  6C                 	db	108	;'l'
   178   001012  61                 	db	97	;'a'
   179   001013  6B                 	db	107	;'k'
   180   001014  2D                 	db	45
   181   001015  4F                 	db	79	;'O'
   182   001016  73                 	db	115	;'s'
   183   001017  61                 	db	97	;'a'
   184   001018  6D                 	db	109	;'m'
   185   001019  61                 	db	97	;'a'
   186   00101A  00                 	db	0
   187   00101B                     STR_6:
   188   00101B  20                 	db	32
   189   00101C  20                 	db	32
   190   00101D  20                 	db	32
   191   00101E  00                 	db	0
   192   00101F  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   001948                     __pcinit:
   198                           	callstack 0
   199   001948                     start_initialization:
   200                           	callstack 0
   201   001948                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (46 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206   001948  0E7E               	movlw	low __pidataCOMRAM
   207   00194A  6EF6               	movwf	tblptrl,c
   208   00194C  0E19               	movlw	high __pidataCOMRAM
   209   00194E  6EF7               	movwf	tblptrh,c
   210   001950  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211   001952  6EF8               	movwf	tblptru,c
   212   001954  EE00  F001         	lfsr	0,__pdataCOMRAM
   213   001958  EE10 F02E          	lfsr	1,46
   214   00195C                     copy_data0:
   215   00195C  0009               	tblrd		*+
   216   00195E  CFF5 FFEE          	movff	tablat,postinc0
   217   001962  50E5               	movf	postdec1,w,c
   218   001964  50E1               	movf	fsr1l,w,c
   219   001966  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to COMRAM (8 bytes)
   222   001968  EE00  F04C         	lfsr	0,__pbssCOMRAM
   223   00196C  0E08               	movlw	8
   224   00196E                     clear_0:
   225   00196E  6AEE               	clrf	postinc0,c
   226   001970  06E8               	decf	wreg,f,c
   227   001972  E1FD               	bnz	clear_0
   228   001974                     end_of_initialization:
   229                           	callstack 0
   230   001974                     __end_of__initialization:
   231                           	callstack 0
   232   001974  0E00               	movlw	low (__Lmediumconst shr (0+16))
   233   001976  6EF8               	movwf	tblptru,c
   234   001978  0100               	movlb	0
   235   00197A  EF0B  F00A         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238   00004C                     __pbssCOMRAM:
   239                           	callstack 0
   240   00004C                     relay_toggle@F2899:
   241                           	callstack 0
   242   00004C                     	ds	1
   243   00004D                     relay_turn_off@F2894:
   244                           	callstack 0
   245   00004D                     	ds	1
   246   00004E                     relay_turn_on@F2889:
   247                           	callstack 0
   248   00004E                     	ds	1
   249   00004F                     relay_initialize@F2884:
   250                           	callstack 0
   251   00004F                     	ds	1
   252   000050                     led_toggle@F2903:
   253                           	callstack 0
   254   000050                     	ds	1
   255   000051                     led_turn_off@F2898:
   256                           	callstack 0
   257   000051                     	ds	1
   258   000052                     led_turn_on@F2893:
   259                           	callstack 0
   260   000052                     	ds	1
   261   000053                     led_initialize@F2888:
   262                           	callstack 0
   263   000053                     	ds	1
   264                           
   265                           	psect	dataCOMRAM
   266   000001                     __pdataCOMRAM:
   267                           	callstack 0
   268   000001                     _port_registers:
   269                           	callstack 0
   270   000001                     	ds	10
   271   00000B                     _lat_registers:
   272                           	callstack 0
   273   00000B                     	ds	10
   274   000015                     _tris_registers:
   275                           	callstack 0
   276   000015                     	ds	10
   277   00001F                     _lcd2:
   278                           	callstack 0
   279   00001F                     	ds	10
   280   000029                     _lcd1:
   281                           	callstack 0
   282   000029                     	ds	6
   283                           
   284                           	psect	cstackCOMRAM
   285   00002F                     __pcstackCOMRAM:
   286                           	callstack 0
   287   00002F                     gpio_pin_write_logic@pin:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x0
   291   00002F                     	ds	1
   292   000030                     gpio_pin_write_logic@logic:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x1
   296   000030                     	ds	1
   297   000031                     ??_gpio_pin_write_logic:
   298                           
   299                           ; 1 bytes @ 0x2
   300   000031                     	ds	5
   301   000036                     gpio_pin_write_logic@ret:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x7
   305   000036                     	ds	1
   306   000037                     lcd_send_4bits@lcd:
   307                           	callstack 0
   308   000037                     lcd_4bits_send_enable_signal@lcd:
   309                           	callstack 0
   310   000037                     lcd_8bits_send_enable_signal@lcd:
   311                           	callstack 0
   312   000037                     gpio_pin_direction_initialize_write@pin:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x8
   316   000037                     	ds	1
   317   000038                     ??_gpio_pin_direction_initialize_write:
   318   000038                     lcd_send_4bits@data_command:
   319                           	callstack 0
   320   000038                     lcd_4bits_send_enable_signal@ret:
   321                           	callstack 0
   322   000038                     lcd_8bits_send_enable_signal@ret:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x9
   326   000038                     	ds	1
   327   000039                     lcd_8bit_send_command@lcd:
   328                           	callstack 0
   329   000039                     lcd_8bit_send_char_data@lcd:
   330                           	callstack 0
   331   000039                     lcd_send_4bits@ret:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xA
   335   000039                     	ds	1
   336   00003A                     lcd_4bit_send_command@lcd:
   337                           	callstack 0
   338   00003A                     lcd_4bit_send_char_data@lcd:
   339                           	callstack 0
   340   00003A                     lcd_8bit_send_command@command:
   341                           	callstack 0
   342   00003A                     lcd_8bit_send_char_data@data:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xB
   346   00003A                     	ds	1
   347   00003B                     ??_lcd_8bit_send_command:
   348   00003B                     ??_lcd_8bit_send_char_data:
   349   00003B                     lcd_4bit_send_command@command:
   350                           	callstack 0
   351   00003B                     lcd_4bit_send_char_data@data:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xC
   355   00003B                     	ds	1
   356   00003C                     lcd_4bit_send_command@ret:
   357                           	callstack 0
   358   00003C                     lcd_4bit_send_char_data@ret:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362   00003C                     	ds	1
   363   00003D                     lcd_4bit_send_string@lcd:
   364                           	callstack 0
   365   00003D                     lcd_8bit_send_command@ret:
   366                           	callstack 0
   367   00003D                     lcd_8bit_send_char_data@ret:
   368                           	callstack 0
   369   00003D                     lcd_4bits_set_cursor@lcd:
   370                           	callstack 0
   371   00003D                     gpio_pin_direction_initialize_write@ret:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0xE
   375   00003D                     	ds	1
   376   00003E                     lcd_4bit_initialize@lcd:
   377                           	callstack 0
   378   00003E                     lcd_4bit_send_string@data:
   379                           	callstack 0
   380   00003E                     lcd_8bit_send_command@l_pin_counter:
   381                           	callstack 0
   382   00003E                     lcd_8bit_send_char_data@l_pin_counter:
   383                           	callstack 0
   384   00003E                     lcd_4bits_set_cursor@row:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0xF
   388   00003E                     	ds	1
   389   00003F                     ??_lcd_4bit_initialize:
   390   00003F                     lcd_4bit_send_string@ret:
   391                           	callstack 0
   392   00003F                     lcd_8bit_initialize@lcd:
   393                           	callstack 0
   394   00003F                     lcd_8bit_send_string@lcd:
   395                           	callstack 0
   396   00003F                     lcd_8bits_set_cursor@lcd:
   397                           	callstack 0
   398   00003F                     lcd_4bits_set_cursor@column:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x10
   402   00003F                     	ds	1
   403   000040                     ??_lcd_4bits_set_cursor:
   404   000040                     ??_lcd_8bit_initialize:
   405   000040                     lcd_4bit_initialize@l_counter:
   406                           	callstack 0
   407   000040                     lcd_8bit_send_string@data:
   408                           	callstack 0
   409   000040                     lcd_8bits_set_cursor@row:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x11
   413   000040                     	ds	1
   414   000041                     lcd_4bit_initialize@ret:
   415                           	callstack 0
   416   000041                     lcd_8bit_initialize@l_counter:
   417                           	callstack 0
   418   000041                     lcd_8bit_send_string@ret:
   419                           	callstack 0
   420   000041                     lcd_8bits_set_cursor@column:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x12
   424   000041                     	ds	1
   425   000042                     ??_lcd_8bits_set_cursor:
   426   000042                     lcd_8bit_initialize@ret:
   427                           	callstack 0
   428   000042                     lcd_4bits_set_cursor@ret:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x13
   432   000042                     	ds	1
   433   000043                     lcd_4bit_send_string_pos@lcd:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x14
   437   000043                     	ds	1
   438   000044                     lcd_4bit_send_string_pos@row:
   439                           	callstack 0
   440   000044                     lcd_8bits_set_cursor@ret:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x15
   444   000044                     	ds	1
   445   000045                     lcd_4bit_send_string_pos@column:
   446                           	callstack 0
   447   000045                     lcd_8bit_send_string_pos@lcd:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x16
   451   000045                     	ds	1
   452   000046                     lcd_4bit_send_string_pos@data:
   453                           	callstack 0
   454   000046                     lcd_8bit_send_string_pos@row:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x17
   458   000046                     	ds	1
   459   000047                     lcd_4bit_send_string_pos@ret:
   460                           	callstack 0
   461   000047                     lcd_8bit_send_string_pos@column:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x18
   465   000047                     	ds	1
   466   000048                     lcd_8bit_send_string_pos@data:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x19
   470   000048                     	ds	1
   471   000049                     lcd_8bit_send_string_pos@ret:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x1A
   475   000049                     	ds	1
   476   00004A                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x1B
   479   00004A                     	ds	2
   480                           
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 14 in file "application.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  2  412[None  ] int 
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels required when called: 5
   506 ;; This function calls:
   507 ;;		_application_initialize
   508 ;;		_lcd_4bit_send_string_pos
   509 ;;		_lcd_8bit_send_string_pos
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516   001416                     __ptext0:
   517                           	callstack 0
   518   001416                     _main:
   519                           	callstack 26
   520   001416                     
   521                           ;application.c: 15:     application_initialize();
   522   001416  ECFC  F00C         	call	_application_initialize	;wreg free
   523   00141A                     
   524                           ;application.c: 17:     ret = lcd_4bit_send_string_pos(&lcd1 ,1 ,7 ,"");
   525   00141A  0E29               	movlw	low _lcd1
   526   00141C  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   527   00141E  0E01               	movlw	1
   528   001420  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   529   001422  0E07               	movlw	7
   530   001424  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   531   001426  0E1E               	movlw	low (STR_6+3)
   532   001428  6E46               	movwf	lcd_4bit_send_string_pos@data^0,c
   533   00142A  EC86  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   534   00142E  6E55               	movwf	_ret^0,c
   535   001430                     l2881:
   536                           
   537                           ;application.c: 20:         for(lcd_counter = 5;lcd_counter<8;lcd_counter++){
   538   001430  0E05               	movlw	5
   539   001432  6E54               	movwf	_lcd_counter^0,c
   540   001434                     l2887:
   541                           
   542                           ;application.c: 21:             ret = lcd_4bit_send_string_pos(&lcd1 ,2 ,lcd_counter ,"M
      +                          alak-Osama");
   543   001434  0E29               	movlw	low _lcd1
   544   001436  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   545   001438  0E02               	movlw	2
   546   00143A  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   547   00143C  C054  F045         	movff	_lcd_counter,lcd_4bit_send_string_pos@column
   548   001440  0E0F               	movlw	low STR_2
   549   001442  6E46               	movwf	lcd_4bit_send_string_pos@data^0,c
   550   001444  EC86  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   551   001448  6E55               	movwf	_ret^0,c
   552                           
   553                           ;application.c: 22:             ret = lcd_8bit_send_string_pos(&lcd2 ,2 ,lcd_counter ,"Y
      +                          oussef-Osama");
   554   00144A  0E1F               	movlw	low _lcd2
   555   00144C  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   556   00144E  0E02               	movlw	2
   557   001450  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   558   001452  C054  F047         	movff	_lcd_counter,lcd_8bit_send_string_pos@column
   559   001456  0E01               	movlw	low STR_3
   560   001458  6E48               	movwf	lcd_8bit_send_string_pos@data^0,c
   561   00145A  EC68  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   562   00145E  6E55               	movwf	_ret^0,c
   563   001460                     
   564                           ;application.c: 23:             _delay((unsigned long)((250)*(8000000/4000.0)));
   565   001460  0E03               	movlw	3
   566   001462  6E4B               	movwf	(??_main+1)^0,c
   567   001464  0E8A               	movlw	138
   568   001466  6E4A               	movwf	??_main^0,c
   569   001468  0E56               	movlw	86
   570   00146A                     u1847:
   571   00146A  2EE8               	decfsz	wreg,f,c
   572   00146C  D7FE               	bra	u1847
   573   00146E  2E4A               	decfsz	??_main^0,f,c
   574   001470  D7FC               	bra	u1847
   575   001472  2E4B               	decfsz	(??_main+1)^0,f,c
   576   001474  D7FA               	bra	u1847
   577   001476                     
   578                           ;application.c: 24:             ret = lcd_4bit_send_string_pos(&lcd1 ,2 ,lcd_counter ," 
      +                          ");
   579   001476  0E29               	movlw	low _lcd1
   580   001478  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   581   00147A  0E02               	movlw	2
   582   00147C  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   583   00147E  C054  F045         	movff	_lcd_counter,lcd_4bit_send_string_pos@column
   584   001482  0E1D               	movlw	low (STR_6+2)
   585   001484  6E46               	movwf	lcd_4bit_send_string_pos@data^0,c
   586   001486  EC86  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   587   00148A  6E55               	movwf	_ret^0,c
   588   00148C                     
   589                           ;application.c: 25:              ret = lcd_8bit_send_string_pos(&lcd2 ,2 ,lcd_counter ,"
      +                           ");
   590   00148C  0E1F               	movlw	low _lcd2
   591   00148E  6E45               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   592   001490  0E02               	movlw	2
   593   001492  6E46               	movwf	lcd_8bit_send_string_pos@row^0,c
   594   001494  C054  F047         	movff	_lcd_counter,lcd_8bit_send_string_pos@column
   595   001498  0E1D               	movlw	low (STR_6+2)
   596   00149A  6E48               	movwf	lcd_8bit_send_string_pos@data^0,c
   597   00149C  EC68  F00C         	call	_lcd_8bit_send_string_pos	;wreg free
   598   0014A0  6E55               	movwf	_ret^0,c
   599   0014A2                     
   600                           ;application.c: 27:         }
   601   0014A2  2A54               	incf	_lcd_counter^0,f,c
   602   0014A4  0E07               	movlw	7
   603   0014A6  6454               	cpfsgt	_lcd_counter^0,c
   604   0014A8  EF58  F00A         	goto	u1831
   605   0014AC  EF5A  F00A         	goto	u1830
   606   0014B0                     u1831:
   607   0014B0  EF1A  F00A         	goto	l2887
   608   0014B4                     u1830:
   609   0014B4                     
   610                           ;application.c: 28:         ret = lcd_4bit_send_string_pos(&lcd1 ,2 ,16 ,"   ");
   611   0014B4  0E29               	movlw	low _lcd1
   612   0014B6  6E43               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   613   0014B8  0E02               	movlw	2
   614   0014BA  6E44               	movwf	lcd_4bit_send_string_pos@row^0,c
   615   0014BC  0E10               	movlw	16
   616   0014BE  6E45               	movwf	lcd_4bit_send_string_pos@column^0,c
   617   0014C0  0E1B               	movlw	low STR_6
   618   0014C2  6E46               	movwf	lcd_4bit_send_string_pos@data^0,c
   619   0014C4  EC86  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   620   0014C8  6E55               	movwf	_ret^0,c
   621   0014CA  EF18  F00A         	goto	l2881
   622   0014CE  EF00  F000         	goto	start
   623   0014D2                     __end_of_main:
   624                           	callstack 0
   625                           
   626 ;; *************** function _lcd_8bit_send_string_pos *****************
   627 ;; Defined at:
   628 ;;		line 220 in file "ECU_Layer/LCD/lcd.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  lcd             1   22[COMRAM] PTR const struct .
   631 ;;		 -> lcd2(10), 
   632 ;;  row             1   23[COMRAM] unsigned char 
   633 ;;  column          1   24[COMRAM] unsigned char 
   634 ;;  data            1   25[COMRAM] PTR unsigned char 
   635 ;;		 -> STR_5(2), STR_3(14), 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  ret             1   26[COMRAM] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      unsigned char 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        5 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 4
   654 ;; This function calls:
   655 ;;		_lcd_8bit_send_string
   656 ;;		_lcd_8bits_set_cursor
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text1
   663   0018D0                     __ptext1:
   664                           	callstack 0
   665   0018D0                     _lcd_8bit_send_string_pos:
   666                           	callstack 26
   667   0018D0                     
   668                           ;ECU_Layer/LCD/lcd.c: 223:     if(((void*)0) == lcd ){
   669   0018D0  5045               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   670   0018D2  A4D8               	btfss	status,2,c
   671   0018D4  EF6E  F00C         	goto	u1661
   672   0018D8  EF70  F00C         	goto	u1660
   673   0018DC                     u1661:
   674   0018DC  EF74  F00C         	goto	l2727
   675   0018E0                     u1660:
   676   0018E0                     
   677                           ;ECU_Layer/LCD/lcd.c: 224:          ret = (Std_ReturnType)0x00;
   678   0018E0  0E00               	movlw	0
   679   0018E2  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   680                           
   681                           ;ECU_Layer/LCD/lcd.c: 225:     }
   682   0018E4  EF84  F00C         	goto	l2731
   683   0018E8                     l2727:
   684                           
   685                           ;ECU_Layer/LCD/lcd.c: 227:         ret = lcd_8bits_set_cursor(lcd, row, column);
   686   0018E8  C045  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bits_set_cursor@lcd
   687   0018EC  C046  F040         	movff	lcd_8bit_send_string_pos@row,lcd_8bits_set_cursor@row
   688   0018F0  C047  F041         	movff	lcd_8bit_send_string_pos@column,lcd_8bits_set_cursor@column
   689   0018F4  EC69  F00A         	call	_lcd_8bits_set_cursor	;wreg free
   690   0018F8  6E49               	movwf	lcd_8bit_send_string_pos@ret^0,c
   691   0018FA                     
   692                           ;ECU_Layer/LCD/lcd.c: 228:         ret &= lcd_8bit_send_string(lcd, data);
   693   0018FA  C045  F03F         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
   694   0018FE  C048  F040         	movff	lcd_8bit_send_string_pos@data,lcd_8bit_send_string@data
   695   001902  ECE7  F00B         	call	_lcd_8bit_send_string	;wreg free
   696   001906  1649               	andwf	lcd_8bit_send_string_pos@ret^0,f,c
   697   001908                     l2731:
   698                           
   699                           ;ECU_Layer/LCD/lcd.c: 230:     return ret;
   700   001908  5049               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   701   00190A  0012               	return		;funcret
   702   00190C                     __end_of_lcd_8bit_send_string_pos:
   703                           	callstack 0
   704                           
   705 ;; *************** function _lcd_8bits_set_cursor *****************
   706 ;; Defined at:
   707 ;;		line 309 in file "ECU_Layer/LCD/lcd.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  lcd             1   16[COMRAM] PTR const struct .
   710 ;;		 -> lcd2(10), 
   711 ;;  row             1   17[COMRAM] unsigned char 
   712 ;;  column          1   18[COMRAM] unsigned char 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  ret             1   21[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   724 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;Total ram usage:        6 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 3
   731 ;; This function calls:
   732 ;;		_lcd_8bit_send_command
   733 ;; This function is called by:
   734 ;;		_lcd_8bit_send_string_pos
   735 ;;		_lcd_8bit_send_char_data_pos
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text2
   740   0014D2                     __ptext2:
   741                           	callstack 0
   742   0014D2                     _lcd_8bits_set_cursor:
   743                           	callstack 26
   744   0014D2                     
   745                           ;ECU_Layer/LCD/lcd.c: 310:    Std_ReturnType ret = (Std_ReturnType)0x01;
   746   0014D2  0E01               	movlw	1
   747   0014D4  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   748   0014D6                     
   749                           ;ECU_Layer/LCD/lcd.c: 311:    column--;
   750   0014D6  0641               	decf	lcd_8bits_set_cursor@column^0,f,c
   751   0014D8                     
   752                           ;ECU_Layer/LCD/lcd.c: 313:     if(((void*)0) == lcd ){
   753   0014D8  503F               	movf	lcd_8bits_set_cursor@lcd^0,w,c
   754   0014DA  A4D8               	btfss	status,2,c
   755   0014DC  EF72  F00A         	goto	u1621
   756   0014E0  EF74  F00A         	goto	u1620
   757   0014E4                     u1621:
   758   0014E4  EFA0  F00A         	goto	l2687
   759   0014E8                     u1620:
   760   0014E8                     
   761                           ;ECU_Layer/LCD/lcd.c: 314:          ret = (Std_ReturnType)0x00;
   762   0014E8  0E00               	movlw	0
   763   0014EA  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   764                           
   765                           ;ECU_Layer/LCD/lcd.c: 315:     }
   766   0014EC  EFBD  F00A         	goto	l2689
   767   0014F0                     l2679:
   768   0014F0  C03F  F039         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   769   0014F4  5041               	movf	lcd_8bits_set_cursor@column^0,w,c
   770   0014F6  0F80               	addlw	128
   771   0014F8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   772   0014FA  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
   773   0014FE  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   774   001500  EFBD  F00A         	goto	l2689
   775   001504                     l2681:
   776   001504  C03F  F039         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   777   001508  5041               	movf	lcd_8bits_set_cursor@column^0,w,c
   778   00150A  0FC0               	addlw	192
   779   00150C  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   780   00150E  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
   781   001512  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   782   001514  EFBD  F00A         	goto	l2689
   783   001518                     l2683:
   784   001518  C03F  F039         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   785   00151C  5041               	movf	lcd_8bits_set_cursor@column^0,w,c
   786   00151E  0F94               	addlw	148
   787   001520  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   788   001522  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
   789   001526  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   790   001528  EFBD  F00A         	goto	l2689
   791   00152C                     l2685:
   792   00152C  C03F  F039         	movff	lcd_8bits_set_cursor@lcd,lcd_8bit_send_command@lcd
   793   001530  5041               	movf	lcd_8bits_set_cursor@column^0,w,c
   794   001532  0FD4               	addlw	212
   795   001534  6E3A               	movwf	lcd_8bit_send_command@command^0,c
   796   001536  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
   797   00153A  6E44               	movwf	lcd_8bits_set_cursor@ret^0,c
   798   00153C  EFBD  F00A         	goto	l2689
   799   001540                     l2687:
   800   001540  5040               	movf	lcd_8bits_set_cursor@row^0,w,c
   801   001542  6E42               	movwf	??_lcd_8bits_set_cursor^0,c
   802   001544  6A43               	clrf	(??_lcd_8bits_set_cursor+1)^0,c
   803                           
   804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   805                           ; Switch size 1, requested type "simple"
   806                           ; Number of cases is 1, Range of values is 0 to 0
   807                           ; switch strategies available:
   808                           ; Name         Instructions Cycles
   809                           ; simple_byte            4     3 (average)
   810                           ;	Chosen strategy is simple_byte
   811   001546  5043               	movf	(??_lcd_8bits_set_cursor+1)^0,w,c
   812   001548  0A00               	xorlw	0	; case 0
   813   00154A  B4D8               	btfsc	status,2,c
   814   00154C  EFAA  F00A         	goto	l2917
   815   001550  EFBD  F00A         	goto	l2689
   816   001554                     l2917:
   817                           
   818                           ; Switch size 1, requested type "simple"
   819                           ; Number of cases is 4, Range of values is 1 to 4
   820                           ; switch strategies available:
   821                           ; Name         Instructions Cycles
   822                           ; simple_byte           13     7 (average)
   823                           ;	Chosen strategy is simple_byte
   824   001554  5042               	movf	??_lcd_8bits_set_cursor^0,w,c
   825   001556  0A01               	xorlw	1	; case 1
   826   001558  B4D8               	btfsc	status,2,c
   827   00155A  EF78  F00A         	goto	l2679
   828   00155E  0A03               	xorlw	3	; case 2
   829   001560  B4D8               	btfsc	status,2,c
   830   001562  EF82  F00A         	goto	l2681
   831   001566  0A01               	xorlw	1	; case 3
   832   001568  B4D8               	btfsc	status,2,c
   833   00156A  EF8C  F00A         	goto	l2683
   834   00156E  0A07               	xorlw	7	; case 4
   835   001570  B4D8               	btfsc	status,2,c
   836   001572  EF96  F00A         	goto	l2685
   837   001576  EFBD  F00A         	goto	l2689
   838   00157A                     l2689:
   839                           
   840                           ;ECU_Layer/LCD/lcd.c: 326:    return ret;
   841   00157A  5044               	movf	lcd_8bits_set_cursor@ret^0,w,c
   842   00157C  0012               	return		;funcret
   843   00157E                     __end_of_lcd_8bits_set_cursor:
   844                           	callstack 0
   845                           
   846 ;; *************** function _lcd_8bit_send_string *****************
   847 ;; Defined at:
   848 ;;		line 206 in file "ECU_Layer/LCD/lcd.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  lcd             1   16[COMRAM] PTR const struct .
   851 ;;		 -> lcd2(10), 
   852 ;;  data            1   17[COMRAM] PTR unsigned char 
   853 ;;		 -> STR_5(2), STR_3(14), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  ret             1   18[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      unsigned char 
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 3
   872 ;; This function calls:
   873 ;;		_lcd_8bit_send_char_data
   874 ;; This function is called by:
   875 ;;		_lcd_8bit_send_string_pos
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text3
   880   0017CE                     __ptext3:
   881                           	callstack 0
   882   0017CE                     _lcd_8bit_send_string:
   883                           	callstack 26
   884   0017CE                     
   885                           ;ECU_Layer/LCD/lcd.c: 207:     Std_ReturnType ret = (Std_ReturnType)0x01;
   886   0017CE  0E01               	movlw	1
   887   0017D0  6E41               	movwf	lcd_8bit_send_string@ret^0,c
   888                           
   889                           ;ECU_Layer/LCD/lcd.c: 209:     if(((void*)0) == lcd ){
   890   0017D2  503F               	movf	lcd_8bit_send_string@lcd^0,w,c
   891   0017D4  A4D8               	btfss	status,2,c
   892   0017D6  EFEF  F00B         	goto	u1631
   893   0017DA  EFF1  F00B         	goto	u1630
   894   0017DE                     u1631:
   895   0017DE  EF02  F00C         	goto	l2705
   896   0017E2                     u1630:
   897   0017E2                     
   898                           ;ECU_Layer/LCD/lcd.c: 210:          ret = (Std_ReturnType)0x00;
   899   0017E2  0E00               	movlw	0
   900   0017E4  6E41               	movwf	lcd_8bit_send_string@ret^0,c
   901                           
   902                           ;ECU_Layer/LCD/lcd.c: 211:     }
   903   0017E6  EF10  F00C         	goto	l2707
   904   0017EA                     l2701:
   905                           
   906                           ;ECU_Layer/LCD/lcd.c: 214:            ret = lcd_8bit_send_char_data(lcd , *data++);
   907   0017EA  C03F  F039         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
   908   0017EE  C040  FFF6         	movff	lcd_8bit_send_string@data,tblptrl
   909   0017F2                     	if	1	;There is more than 1 active tblptr byte
   910   0017F2  0E10               	movlw	high __smallconst
   911   0017F4  6EF7               	movwf	tblptrh,c
   912   0017F6                     	endif
   913   0017F6                     	if	0	;tblptru may be non-zero
   914   0017F6                     	endif
   915   0017F6                     	if	0	;tblptru may be non-zero
   916   0017F6                     	endif
   917   0017F6  0008               	tblrd		*
   918   0017F8  CFF5 F03A          	movff	tablat,lcd_8bit_send_char_data@data
   919   0017FC  EC15  F00B         	call	_lcd_8bit_send_char_data	;wreg free
   920   001800  6E41               	movwf	lcd_8bit_send_string@ret^0,c
   921   001802  2A40               	incf	lcd_8bit_send_string@data^0,f,c
   922   001804                     l2705:
   923                           
   924                           ;ECU_Layer/LCD/lcd.c: 213:         while(*data){
   925   001804  C040  FFF6         	movff	lcd_8bit_send_string@data,tblptrl
   926   001808                     	if	1	;There is more than 1 active tblptr byte
   927   001808  0E10               	movlw	high __smallconst
   928   00180A  6EF7               	movwf	tblptrh,c
   929   00180C                     	endif
   930   00180C                     	if	0	;tblptru may be non-zero
   931   00180C                     	endif
   932   00180C                     	if	0	;tblptru may be non-zero
   933   00180C                     	endif
   934   00180C  0008               	tblrd		*
   935   00180E  50F5               	movf	tablat,w,c
   936   001810  0900               	iorlw	0
   937   001812  A4D8               	btfss	status,2,c
   938   001814  EF0E  F00C         	goto	u1641
   939   001818  EF10  F00C         	goto	u1640
   940   00181C                     u1641:
   941   00181C  EFF5  F00B         	goto	l2701
   942   001820                     u1640:
   943   001820                     l2707:
   944                           
   945                           ;ECU_Layer/LCD/lcd.c: 217:     return ret;
   946   001820  5041               	movf	lcd_8bit_send_string@ret^0,w,c
   947   001822  0012               	return		;funcret
   948   001824                     __end_of_lcd_8bit_send_string:
   949                           	callstack 0
   950                           
   951 ;; *************** function _lcd_8bit_send_char_data *****************
   952 ;; Defined at:
   953 ;;		line 176 in file "ECU_Layer/LCD/lcd.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  lcd             1   10[COMRAM] PTR const struct .
   956 ;;		 -> lcd2(10), 
   957 ;;  data            1   11[COMRAM] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
   960 ;;  ret             1   14[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        6 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		_gpio_pin_write_logic
   979 ;;		_lcd_8bits_send_enable_signal
   980 ;; This function is called by:
   981 ;;		_lcd_8bit_send_string
   982 ;;		_lcd_8bit_send_char_data_pos
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text4
   987   00162A                     __ptext4:
   988                           	callstack 0
   989   00162A                     _lcd_8bit_send_char_data:
   990                           	callstack 26
   991   00162A                     
   992                           ;ECU_Layer/LCD/lcd.c: 178:     uint8 l_pin_counter = 0;
   993   00162A  0E00               	movlw	0
   994   00162C  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   995                           
   996                           ;ECU_Layer/LCD/lcd.c: 179:     if(((void*)0) == lcd ){
   997   00162E  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   998   001630  A4D8               	btfss	status,2,c
   999   001632  EF1D  F00B         	goto	u1521
  1000   001636  EF1F  F00B         	goto	u1520
  1001   00163A                     u1521:
  1002   00163A  EF23  F00B         	goto	l2529
  1003   00163E                     u1520:
  1004   00163E                     
  1005                           ;ECU_Layer/LCD/lcd.c: 180:          ret = (Std_ReturnType)0x00;
  1006   00163E  0E00               	movlw	0
  1007   001640  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
  1008                           
  1009                           ;ECU_Layer/LCD/lcd.c: 181:     }
  1010   001642  EF4E  F00B         	goto	l2545
  1011   001646                     l2529:
  1012   001646  C039  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@pin
  1013   00164A  0E01               	movlw	1
  1014   00164C  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1015   00164E  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1016   001652                     
  1017                           ;ECU_Layer/LCD/lcd.c: 185:         for(l_pin_counter = 0 ; l_pin_counter <8 ; l_pin_coun
      +                          ter ++){
  1018   001652  0E00               	movlw	0
  1019   001654  6E3E               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
  1020   001656                     l2537:
  1021   001656  5039               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1022   001658  243E               	addwf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
  1023   00165A  0F02               	addlw	2
  1024   00165C  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  1025   00165E  C03E  F03B         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data
  1026   001662  C03A  F03C         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1027   001666  2A3B               	incf	??_lcd_8bit_send_char_data^0,f,c
  1028   001668  EF38  F00B         	goto	u1534
  1029   00166C                     u1535:
  1030   00166C  90D8               	bcf	status,0,c
  1031   00166E  323C               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1032   001670                     u1534:
  1033   001670  2E3B               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1034   001672  EF36  F00B         	goto	u1535
  1035   001676  503C               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1036   001678  0B01               	andlw	1
  1037   00167A  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1038   00167C  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1039   001680                     
  1040                           ;ECU_Layer/LCD/lcd.c: 187:         }
  1041   001680  2A3E               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
  1042   001682  0E07               	movlw	7
  1043   001684  643E               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
  1044   001686  EF47  F00B         	goto	u1541
  1045   00168A  EF49  F00B         	goto	u1540
  1046   00168E                     u1541:
  1047   00168E  EF2B  F00B         	goto	l2537
  1048   001692                     u1540:
  1049   001692                     
  1050                           ;ECU_Layer/LCD/lcd.c: 188:         ret = lcd_8bits_send_enable_signal(lcd);
  1051   001692  C039  F037         	movff	lcd_8bit_send_char_data@lcd,lcd_8bits_send_enable_signal@lcd
  1052   001696  ECD6  F00C         	call	_lcd_8bits_send_enable_signal	;wreg free
  1053   00169A  6E3D               	movwf	lcd_8bit_send_char_data@ret^0,c
  1054   00169C                     l2545:
  1055                           
  1056                           ;ECU_Layer/LCD/lcd.c: 190:     return ret;
  1057   00169C  503D               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1058   00169E  0012               	return		;funcret
  1059   0016A0                     __end_of_lcd_8bit_send_char_data:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _lcd_4bit_send_string_pos *****************
  1063 ;; Defined at:
  1064 ;;		line 104 in file "ECU_Layer/LCD/lcd.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  lcd             1   20[COMRAM] PTR const struct .
  1067 ;;		 -> lcd1(6), 
  1068 ;;  row             1   21[COMRAM] unsigned char 
  1069 ;;  column          1   22[COMRAM] unsigned char 
  1070 ;;  data            1   23[COMRAM] PTR unsigned char 
  1071 ;;		 -> STR_6(4), STR_4(2), STR_2(12), STR_1(1), 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  ret             1   24[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      unsigned char 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        5 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 4
  1090 ;; This function calls:
  1091 ;;		_lcd_4bit_send_string
  1092 ;;		_lcd_4bits_set_cursor
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text5
  1099   00190C                     __ptext5:
  1100                           	callstack 0
  1101   00190C                     _lcd_4bit_send_string_pos:
  1102                           	callstack 26
  1103   00190C                     
  1104                           ;ECU_Layer/LCD/lcd.c: 107:     if(((void*)0) == lcd ){
  1105   00190C  5043               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1106   00190E  A4D8               	btfss	status,2,c
  1107   001910  EF8C  F00C         	goto	u1651
  1108   001914  EF8E  F00C         	goto	u1650
  1109   001918                     u1651:
  1110   001918  EF92  F00C         	goto	l2715
  1111   00191C                     u1650:
  1112   00191C                     
  1113                           ;ECU_Layer/LCD/lcd.c: 108:          ret = (Std_ReturnType)0x00;
  1114   00191C  0E00               	movlw	0
  1115   00191E  6E47               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1116                           
  1117                           ;ECU_Layer/LCD/lcd.c: 109:     }
  1118   001920  EFA2  F00C         	goto	l2719
  1119   001924                     l2715:
  1120                           
  1121                           ;ECU_Layer/LCD/lcd.c: 111:         ret = lcd_4bits_set_cursor(lcd , row, column);
  1122   001924  C043  F03D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bits_set_cursor@lcd
  1123   001928  C044  F03E         	movff	lcd_4bit_send_string_pos@row,lcd_4bits_set_cursor@row
  1124   00192C  C045  F03F         	movff	lcd_4bit_send_string_pos@column,lcd_4bits_set_cursor@column
  1125   001930  ECBF  F00A         	call	_lcd_4bits_set_cursor	;wreg free
  1126   001934  6E47               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1127   001936                     
  1128                           ;ECU_Layer/LCD/lcd.c: 112:         ret &= lcd_4bit_send_string(lcd, data);
  1129   001936  C043  F03D         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1130   00193A  C046  F03E         	movff	lcd_4bit_send_string_pos@data,lcd_4bit_send_string@data
  1131   00193E  EC12  F00C         	call	_lcd_4bit_send_string	;wreg free
  1132   001942  1647               	andwf	lcd_4bit_send_string_pos@ret^0,f,c
  1133   001944                     l2719:
  1134                           
  1135                           ;ECU_Layer/LCD/lcd.c: 114:     return ret;
  1136   001944  5047               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1137   001946  0012               	return		;funcret
  1138   001948                     __end_of_lcd_4bit_send_string_pos:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _lcd_4bits_set_cursor *****************
  1142 ;; Defined at:
  1143 ;;		line 329 in file "ECU_Layer/LCD/lcd.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  lcd             1   14[COMRAM] PTR const struct .
  1146 ;;		 -> lcd1(6), 
  1147 ;;  row             1   15[COMRAM] unsigned char 
  1148 ;;  column          1   16[COMRAM] unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  ret             1   19[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      unsigned char 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1160 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;Total ram usage:        6 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 3
  1167 ;; This function calls:
  1168 ;;		_lcd_4bit_send_command
  1169 ;; This function is called by:
  1170 ;;		_lcd_4bit_send_string_pos
  1171 ;;		_lcd_4bit_send_char_data_pos
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text6
  1176   00157E                     __ptext6:
  1177                           	callstack 0
  1178   00157E                     _lcd_4bits_set_cursor:
  1179                           	callstack 26
  1180   00157E                     
  1181                           ;ECU_Layer/LCD/lcd.c: 330:    Std_ReturnType ret = (Std_ReturnType)0x01;
  1182   00157E  0E01               	movlw	1
  1183   001580  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1184   001582                     
  1185                           ;ECU_Layer/LCD/lcd.c: 331:    column--;
  1186   001582  063F               	decf	lcd_4bits_set_cursor@column^0,f,c
  1187   001584                     
  1188                           ;ECU_Layer/LCD/lcd.c: 333:     if(((void*)0) == lcd ){
  1189   001584  503D               	movf	lcd_4bits_set_cursor@lcd^0,w,c
  1190   001586  A4D8               	btfss	status,2,c
  1191   001588  EFC8  F00A         	goto	u1571
  1192   00158C  EFCA  F00A         	goto	u1570
  1193   001590                     u1571:
  1194   001590  EFF6  F00A         	goto	l2607
  1195   001594                     u1570:
  1196   001594                     
  1197                           ;ECU_Layer/LCD/lcd.c: 334:          ret = (Std_ReturnType)0x00;
  1198   001594  0E00               	movlw	0
  1199   001596  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1200                           
  1201                           ;ECU_Layer/LCD/lcd.c: 335:     }
  1202   001598  EF13  F00B         	goto	l2609
  1203   00159C                     l2599:
  1204   00159C  C03D  F03A         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1205   0015A0  503F               	movf	lcd_4bits_set_cursor@column^0,w,c
  1206   0015A2  0F80               	addlw	128
  1207   0015A4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1208   0015A6  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1209   0015AA  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1210   0015AC  EF13  F00B         	goto	l2609
  1211   0015B0                     l2601:
  1212   0015B0  C03D  F03A         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1213   0015B4  503F               	movf	lcd_4bits_set_cursor@column^0,w,c
  1214   0015B6  0FC0               	addlw	192
  1215   0015B8  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1216   0015BA  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1217   0015BE  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1218   0015C0  EF13  F00B         	goto	l2609
  1219   0015C4                     l2603:
  1220   0015C4  C03D  F03A         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1221   0015C8  503F               	movf	lcd_4bits_set_cursor@column^0,w,c
  1222   0015CA  0F94               	addlw	148
  1223   0015CC  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1224   0015CE  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1225   0015D2  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1226   0015D4  EF13  F00B         	goto	l2609
  1227   0015D8                     l2605:
  1228   0015D8  C03D  F03A         	movff	lcd_4bits_set_cursor@lcd,lcd_4bit_send_command@lcd
  1229   0015DC  503F               	movf	lcd_4bits_set_cursor@column^0,w,c
  1230   0015DE  0FD4               	addlw	212
  1231   0015E0  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1232   0015E2  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1233   0015E6  6E42               	movwf	lcd_4bits_set_cursor@ret^0,c
  1234   0015E8  EF13  F00B         	goto	l2609
  1235   0015EC                     l2607:
  1236   0015EC  503E               	movf	lcd_4bits_set_cursor@row^0,w,c
  1237   0015EE  6E40               	movwf	??_lcd_4bits_set_cursor^0,c
  1238   0015F0  6A41               	clrf	(??_lcd_4bits_set_cursor+1)^0,c
  1239                           
  1240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1241                           ; Switch size 1, requested type "simple"
  1242                           ; Number of cases is 1, Range of values is 0 to 0
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte            4     3 (average)
  1246                           ;	Chosen strategy is simple_byte
  1247   0015F2  5041               	movf	(??_lcd_4bits_set_cursor+1)^0,w,c
  1248   0015F4  0A00               	xorlw	0	; case 0
  1249   0015F6  B4D8               	btfsc	status,2,c
  1250   0015F8  EF00  F00B         	goto	l2919
  1251   0015FC  EF13  F00B         	goto	l2609
  1252   001600                     l2919:
  1253                           
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 4, Range of values is 1 to 4
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           13     7 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260   001600  5040               	movf	??_lcd_4bits_set_cursor^0,w,c
  1261   001602  0A01               	xorlw	1	; case 1
  1262   001604  B4D8               	btfsc	status,2,c
  1263   001606  EFCE  F00A         	goto	l2599
  1264   00160A  0A03               	xorlw	3	; case 2
  1265   00160C  B4D8               	btfsc	status,2,c
  1266   00160E  EFD8  F00A         	goto	l2601
  1267   001612  0A01               	xorlw	1	; case 3
  1268   001614  B4D8               	btfsc	status,2,c
  1269   001616  EFE2  F00A         	goto	l2603
  1270   00161A  0A07               	xorlw	7	; case 4
  1271   00161C  B4D8               	btfsc	status,2,c
  1272   00161E  EFEC  F00A         	goto	l2605
  1273   001622  EF13  F00B         	goto	l2609
  1274   001626                     l2609:
  1275                           
  1276                           ;ECU_Layer/LCD/lcd.c: 346:    return ret;
  1277   001626  5042               	movf	lcd_4bits_set_cursor@ret^0,w,c
  1278   001628  0012               	return		;funcret
  1279   00162A                     __end_of_lcd_4bits_set_cursor:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _lcd_4bit_send_string *****************
  1283 ;; Defined at:
  1284 ;;		line 90 in file "ECU_Layer/LCD/lcd.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  lcd             1   14[COMRAM] PTR const struct .
  1287 ;;		 -> lcd1(6), 
  1288 ;;  data            1   15[COMRAM] PTR unsigned char 
  1289 ;;		 -> STR_6(4), STR_4(2), STR_2(12), STR_1(1), 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  ret             1   16[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      unsigned char 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;Total ram usage:        3 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 3
  1308 ;; This function calls:
  1309 ;;		_lcd_4bit_send_char_data
  1310 ;; This function is called by:
  1311 ;;		_lcd_4bit_send_string_pos
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text7
  1316   001824                     __ptext7:
  1317                           	callstack 0
  1318   001824                     _lcd_4bit_send_string:
  1319                           	callstack 26
  1320   001824                     
  1321                           ;ECU_Layer/LCD/lcd.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1322   001824  0E01               	movlw	1
  1323   001826  6E3F               	movwf	lcd_4bit_send_string@ret^0,c
  1324                           
  1325                           ;ECU_Layer/LCD/lcd.c: 93:     if(((void*)0) == lcd ){
  1326   001828  503D               	movf	lcd_4bit_send_string@lcd^0,w,c
  1327   00182A  A4D8               	btfss	status,2,c
  1328   00182C  EF1A  F00C         	goto	u1581
  1329   001830  EF1C  F00C         	goto	u1580
  1330   001834                     u1581:
  1331   001834  EF2D  F00C         	goto	l2625
  1332   001838                     u1580:
  1333   001838                     
  1334                           ;ECU_Layer/LCD/lcd.c: 94:          ret = (Std_ReturnType)0x00;
  1335   001838  0E00               	movlw	0
  1336   00183A  6E3F               	movwf	lcd_4bit_send_string@ret^0,c
  1337                           
  1338                           ;ECU_Layer/LCD/lcd.c: 95:     }
  1339   00183C  EF3B  F00C         	goto	l2627
  1340   001840                     l2621:
  1341                           
  1342                           ;ECU_Layer/LCD/lcd.c: 98:             ret = lcd_4bit_send_char_data(lcd , *data++);
  1343   001840  C03D  F03A         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  1344   001844  C03E  FFF6         	movff	lcd_4bit_send_string@data,tblptrl
  1345   001848                     	if	1	;There is more than 1 active tblptr byte
  1346   001848  0E10               	movlw	high __smallconst
  1347   00184A  6EF7               	movwf	tblptrh,c
  1348   00184C                     	endif
  1349   00184C                     	if	0	;tblptru may be non-zero
  1350   00184C                     	endif
  1351   00184C                     	if	0	;tblptru may be non-zero
  1352   00184C                     	endif
  1353   00184C  0008               	tblrd		*
  1354   00184E  CFF5 F03B          	movff	tablat,lcd_4bit_send_char_data@data
  1355   001852  EC8B  F00B         	call	_lcd_4bit_send_char_data	;wreg free
  1356   001856  6E3F               	movwf	lcd_4bit_send_string@ret^0,c
  1357   001858  2A3E               	incf	lcd_4bit_send_string@data^0,f,c
  1358   00185A                     l2625:
  1359                           
  1360                           ;ECU_Layer/LCD/lcd.c: 97:         while(*data){
  1361   00185A  C03E  FFF6         	movff	lcd_4bit_send_string@data,tblptrl
  1362   00185E                     	if	1	;There is more than 1 active tblptr byte
  1363   00185E  0E10               	movlw	high __smallconst
  1364   001860  6EF7               	movwf	tblptrh,c
  1365   001862                     	endif
  1366   001862                     	if	0	;tblptru may be non-zero
  1367   001862                     	endif
  1368   001862                     	if	0	;tblptru may be non-zero
  1369   001862                     	endif
  1370   001862  0008               	tblrd		*
  1371   001864  50F5               	movf	tablat,w,c
  1372   001866  0900               	iorlw	0
  1373   001868  A4D8               	btfss	status,2,c
  1374   00186A  EF39  F00C         	goto	u1591
  1375   00186E  EF3B  F00C         	goto	u1590
  1376   001872                     u1591:
  1377   001872  EF20  F00C         	goto	l2621
  1378   001876                     u1590:
  1379   001876                     l2627:
  1380                           
  1381                           ;ECU_Layer/LCD/lcd.c: 101:     return ret;
  1382   001876  503F               	movf	lcd_4bit_send_string@ret^0,w,c
  1383   001878  0012               	return		;funcret
  1384   00187A                     __end_of_lcd_4bit_send_string:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _lcd_4bit_send_char_data *****************
  1388 ;; Defined at:
  1389 ;;		line 60 in file "ECU_Layer/LCD/lcd.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  lcd             1   11[COMRAM] PTR const struct .
  1392 ;;		 -> lcd1(6), 
  1393 ;;  data            1   12[COMRAM] unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  ret             1   13[COMRAM] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:        3 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 2
  1412 ;; This function calls:
  1413 ;;		_gpio_pin_write_logic
  1414 ;;		_lcd_4bits_send_enable_signal
  1415 ;;		_lcd_send_4bits
  1416 ;; This function is called by:
  1417 ;;		_lcd_4bit_send_string
  1418 ;;		_lcd_4bit_send_char_data_pos
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text8
  1423   001716                     __ptext8:
  1424                           	callstack 0
  1425   001716                     _lcd_4bit_send_char_data:
  1426                           	callstack 26
  1427   001716                     
  1428                           ;ECU_Layer/LCD/lcd.c: 63:     if(((void*)0) == lcd ){
  1429   001716  503A               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  1430   001718  A4D8               	btfss	status,2,c
  1431   00171A  EF91  F00B         	goto	u1481
  1432   00171E  EF93  F00B         	goto	u1480
  1433   001722                     u1481:
  1434   001722  EF97  F00B         	goto	l2495
  1435   001726                     u1480:
  1436   001726                     
  1437                           ;ECU_Layer/LCD/lcd.c: 64:          ret = (Std_ReturnType)0x00;
  1438   001726  0E00               	movlw	0
  1439   001728  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1440                           
  1441                           ;ECU_Layer/LCD/lcd.c: 65:     }
  1442   00172A  EFB7  F00B         	goto	l2497
  1443   00172E                     l2495:
  1444                           
  1445                           ;ECU_Layer/LCD/lcd.c: 67:         ret = gpio_pin_write_logic(&(lcd->lcd_rs) , HIGH);
  1446   00172E  C03A  F02F         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin
  1447   001732  0E01               	movlw	1
  1448   001734  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1449   001736  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1450   00173A  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1451                           
  1452                           ;ECU_Layer/LCD/lcd.c: 69:         ret = lcd_send_4bits( lcd ,data >> 4);
  1453   00173C  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1454   001740  383B               	swapf	lcd_4bit_send_char_data@data^0,w,c
  1455   001742  0B0F               	andlw	15
  1456   001744  6E38               	movwf	lcd_send_4bits@data_command^0,c
  1457   001746  EC3D  F00C         	call	_lcd_send_4bits	;wreg free
  1458   00174A  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1459                           
  1460                           ;ECU_Layer/LCD/lcd.c: 70:         ret = lcd_4bits_send_enable_signal(lcd);
  1461   00174C  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1462   001750  ECE9  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1463   001754  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1464                           
  1465                           ;ECU_Layer/LCD/lcd.c: 71:         ret = lcd_send_4bits( lcd ,data);
  1466   001756  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  1467   00175A  C03B  F038         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  1468   00175E  EC3D  F00C         	call	_lcd_send_4bits	;wreg free
  1469   001762  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1470                           
  1471                           ;ECU_Layer/LCD/lcd.c: 72:         ret = lcd_4bits_send_enable_signal(lcd);
  1472   001764  C03A  F037         	movff	lcd_4bit_send_char_data@lcd,lcd_4bits_send_enable_signal@lcd
  1473   001768  ECE9  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  1474   00176C  6E3C               	movwf	lcd_4bit_send_char_data@ret^0,c
  1475   00176E                     l2497:
  1476                           
  1477                           ;ECU_Layer/LCD/lcd.c: 74:     return ret;
  1478   00176E  503C               	movf	lcd_4bit_send_char_data@ret^0,w,c
  1479   001770  0012               	return		;funcret
  1480   001772                     __end_of_lcd_4bit_send_char_data:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _application_initialize *****************
  1484 ;; Defined at:
  1485 ;;		line 84 in file "ECU_Layer/layer_initialize.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 4
  1506 ;; This function calls:
  1507 ;;		_lcd_4bit_initialize
  1508 ;;		_lcd_8bit_initialize
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text9
  1515   0019F8                     __ptext9:
  1516                           	callstack 0
  1517   0019F8                     _application_initialize:
  1518                           	callstack 26
  1519   0019F8                     
  1520                           ;ECU_Layer/layer_initialize.c: 85:     ret = lcd_4bit_initialize(&lcd1);
  1521   0019F8  0E29               	movlw	low _lcd1
  1522   0019FA  6E3E               	movwf	lcd_4bit_initialize@lcd^0,c
  1523   0019FC  EC37  F009         	call	_lcd_4bit_initialize	;wreg free
  1524   001A00  6E55               	movwf	_ret^0,c
  1525                           
  1526                           ;ECU_Layer/layer_initialize.c: 86:     ret = lcd_8bit_initialize(&lcd2);
  1527   001A02  0E1F               	movlw	low _lcd2
  1528   001A04  6E3F               	movwf	lcd_8bit_initialize@lcd^0,c
  1529   001A06  ECA4  F009         	call	_lcd_8bit_initialize	;wreg free
  1530   001A0A  6E55               	movwf	_ret^0,c
  1531   001A0C  0012               	return		;funcret
  1532   001A0E                     __end_of_application_initialize:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _lcd_8bit_initialize *****************
  1536 ;; Defined at:
  1537 ;;		line 131 in file "ECU_Layer/LCD/lcd.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  lcd             1   16[COMRAM] PTR const struct .
  1540 ;;		 -> lcd2(10), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  ret             1   19[COMRAM] unsigned char 
  1543 ;;  l_counter       1   18[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      unsigned char 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;Total ram usage:        4 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 3
  1560 ;; This function calls:
  1561 ;;		_gpio_pin_direction_initialize_write
  1562 ;;		_lcd_8bit_send_command
  1563 ;; This function is called by:
  1564 ;;		_application_initialize
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text10
  1569   001348                     __ptext10:
  1570                           	callstack 0
  1571   001348                     _lcd_8bit_initialize:
  1572                           	callstack 26
  1573   001348                     
  1574                           ;ECU_Layer/LCD/lcd.c: 133:     uint8 l_counter= 0;
  1575   001348  0E00               	movlw	0
  1576   00134A  6E41               	movwf	lcd_8bit_initialize@l_counter^0,c
  1577                           
  1578                           ;ECU_Layer/LCD/lcd.c: 135:     if(((void*)0) == lcd ){
  1579   00134C  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1580   00134E  A4D8               	btfss	status,2,c
  1581   001350  EFAC  F009         	goto	u1601
  1582   001354  EFAE  F009         	goto	u1600
  1583   001358                     u1601:
  1584   001358  EFB2  F009         	goto	l2635
  1585   00135C                     u1600:
  1586   00135C                     
  1587                           ;ECU_Layer/LCD/lcd.c: 136:          ret = (Std_ReturnType)0x00;
  1588   00135C  0E00               	movlw	0
  1589   00135E  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1590                           
  1591                           ;ECU_Layer/LCD/lcd.c: 137:     }
  1592   001360  EF09  F00A         	goto	l2667
  1593   001364                     l2635:
  1594                           
  1595                           ;ECU_Layer/LCD/lcd.c: 139:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          en));
  1596   001364  283F               	incf	lcd_8bit_initialize@lcd^0,w,c
  1597   001366  6E37               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1598   001368  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1599   00136C  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1600                           
  1601                           ;ECU_Layer/LCD/lcd.c: 140:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_
      +                          rs));
  1602   00136E  C03F  F037         	movff	lcd_8bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  1603   001372  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1604   001376  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1605   001378                     
  1606                           ;ECU_Layer/LCD/lcd.c: 141:         for (l_counter = 0; l_counter < 8;l_counter++){
  1607   001378  0E00               	movlw	0
  1608   00137A  6E41               	movwf	lcd_8bit_initialize@l_counter^0,c
  1609   00137C                     l2643:
  1610   00137C  503F               	movf	lcd_8bit_initialize@lcd^0,w,c
  1611   00137E  2441               	addwf	lcd_8bit_initialize@l_counter^0,w,c
  1612   001380  0F02               	addlw	2
  1613   001382  6E37               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1614   001384  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1615   001388                     
  1616                           ;ECU_Layer/LCD/lcd.c: 143:         }
  1617   001388  2A41               	incf	lcd_8bit_initialize@l_counter^0,f,c
  1618   00138A  0E07               	movlw	7
  1619   00138C  6441               	cpfsgt	lcd_8bit_initialize@l_counter^0,c
  1620   00138E  EFCB  F009         	goto	u1611
  1621   001392  EFCD  F009         	goto	u1610
  1622   001396                     u1611:
  1623   001396  EFBE  F009         	goto	l2643
  1624   00139A                     u1610:
  1625   00139A                     
  1626                           ;ECU_Layer/LCD/lcd.c: 144:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1627   00139A  0E34               	movlw	52
  1628   00139C  6E40               	movwf	??_lcd_8bit_initialize^0,c
  1629   00139E  0EF2               	movlw	242
  1630   0013A0                     u1857:
  1631   0013A0  2EE8               	decfsz	wreg,f,c
  1632   0013A2  D7FE               	bra	u1857
  1633   0013A4  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1634   0013A6  D7FC               	bra	u1857
  1635   0013A8  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1636   0013AC  0E38               	movlw	56
  1637   0013AE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1638   0013B0  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1639   0013B4                     
  1640                           ;ECU_Layer/LCD/lcd.c: 146:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1641   0013B4  0E0D               	movlw	13
  1642   0013B6  6E40               	movwf	??_lcd_8bit_initialize^0,c
  1643   0013B8  0EFC               	movlw	252
  1644   0013BA                     u1867:
  1645   0013BA  2EE8               	decfsz	wreg,f,c
  1646   0013BC  D7FE               	bra	u1867
  1647   0013BE  2E40               	decfsz	??_lcd_8bit_initialize^0,f,c
  1648   0013C0  D7FC               	bra	u1867
  1649   0013C2  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1650   0013C6  0E38               	movlw	56
  1651   0013C8  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1652   0013CA  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1653   0013CE                     
  1654                           ;ECU_Layer/LCD/lcd.c: 148:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  1655   0013CE  0E64               	movlw	100
  1656   0013D0                     u1877:
  1657   0013D0  2EE8               	decfsz	wreg,f,c
  1658   0013D2  D7FE               	bra	u1877
  1659   0013D4  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1660   0013D8  0E38               	movlw	56
  1661   0013DA  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1662   0013DC  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1663   0013E0  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1664   0013E4  0E01               	movlw	1
  1665   0013E6  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1666   0013E8  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1667   0013EC  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1668   0013F0  0E02               	movlw	2
  1669   0013F2  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1670   0013F4  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1671   0013F8  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1672   0013FC  0E06               	movlw	6
  1673   0013FE  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1674   001400  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1675   001404                     
  1676                           ;ECU_Layer/LCD/lcd.c: 153:         ret = lcd_8bit_send_command(lcd , 0x0C);
  1677   001404  C03F  F039         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  1678   001408  0E0C               	movlw	12
  1679   00140A  6E3A               	movwf	lcd_8bit_send_command@command^0,c
  1680   00140C  EC50  F00B         	call	_lcd_8bit_send_command	;wreg free
  1681   001410  6E42               	movwf	lcd_8bit_initialize@ret^0,c
  1682   001412                     l2667:
  1683                           
  1684                           ;ECU_Layer/LCD/lcd.c: 155:     return ret;
  1685   001412  5042               	movf	lcd_8bit_initialize@ret^0,w,c
  1686   001414  0012               	return		;funcret
  1687   001416                     __end_of_lcd_8bit_initialize:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _lcd_8bit_send_command *****************
  1691 ;; Defined at:
  1692 ;;		line 158 in file "ECU_Layer/LCD/lcd.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  lcd             1   10[COMRAM] PTR const struct .
  1695 ;;		 -> lcd2(10), 
  1696 ;;  command         1   11[COMRAM] unsigned char 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  l_pin_counte    1   15[COMRAM] unsigned char 
  1699 ;;  ret             1   14[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        6 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		_gpio_pin_write_logic
  1718 ;;		_lcd_8bits_send_enable_signal
  1719 ;; This function is called by:
  1720 ;;		_lcd_8bit_initialize
  1721 ;;		_lcd_8bits_set_cursor
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text11
  1726   0016A0                     __ptext11:
  1727                           	callstack 0
  1728   0016A0                     _lcd_8bit_send_command:
  1729                           	callstack 26
  1730   0016A0                     
  1731                           ;ECU_Layer/LCD/lcd.c: 160:     uint8 l_pin_counter = 0;
  1732   0016A0  0E00               	movlw	0
  1733   0016A2  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1734                           
  1735                           ;ECU_Layer/LCD/lcd.c: 162:     if(((void*)0) == lcd ){
  1736   0016A4  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1737   0016A6  A4D8               	btfss	status,2,c
  1738   0016A8  EF58  F00B         	goto	u1491
  1739   0016AC  EF5A  F00B         	goto	u1490
  1740   0016B0                     u1491:
  1741   0016B0  EF5E  F00B         	goto	l2505
  1742   0016B4                     u1490:
  1743   0016B4                     
  1744                           ;ECU_Layer/LCD/lcd.c: 163:          ret = (Std_ReturnType)0x00;
  1745   0016B4  0E00               	movlw	0
  1746   0016B6  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1747                           
  1748                           ;ECU_Layer/LCD/lcd.c: 164:     }
  1749   0016B8  EF89  F00B         	goto	l2521
  1750   0016BC                     l2505:
  1751   0016BC  C039  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@pin
  1752   0016C0  0E00               	movlw	0
  1753   0016C2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1754   0016C4  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1755   0016C8                     
  1756                           ;ECU_Layer/LCD/lcd.c: 168:         for(l_pin_counter = 0 ; l_pin_counter <8 ; l_pin_coun
      +                          ter ++){
  1757   0016C8  0E00               	movlw	0
  1758   0016CA  6E3E               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1759   0016CC                     l2513:
  1760   0016CC  5039               	movf	lcd_8bit_send_command@lcd^0,w,c
  1761   0016CE  243E               	addwf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1762   0016D0  0F02               	addlw	2
  1763   0016D2  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  1764   0016D4  C03E  F03B         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command
  1765   0016D8  C03A  F03C         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  1766   0016DC  2A3B               	incf	??_lcd_8bit_send_command^0,f,c
  1767   0016DE  EF73  F00B         	goto	u1504
  1768   0016E2                     u1505:
  1769   0016E2  90D8               	bcf	status,0,c
  1770   0016E4  323C               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  1771   0016E6                     u1504:
  1772   0016E6  2E3B               	decfsz	??_lcd_8bit_send_command^0,f,c
  1773   0016E8  EF71  F00B         	goto	u1505
  1774   0016EC  503C               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  1775   0016EE  0B01               	andlw	1
  1776   0016F0  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1777   0016F2  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1778   0016F6                     
  1779                           ;ECU_Layer/LCD/lcd.c: 170:         }
  1780   0016F6  2A3E               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1781   0016F8  0E07               	movlw	7
  1782   0016FA  643E               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1783   0016FC  EF82  F00B         	goto	u1511
  1784   001700  EF84  F00B         	goto	u1510
  1785   001704                     u1511:
  1786   001704  EF66  F00B         	goto	l2513
  1787   001708                     u1510:
  1788   001708                     
  1789                           ;ECU_Layer/LCD/lcd.c: 171:         ret = lcd_8bits_send_enable_signal(lcd);
  1790   001708  C039  F037         	movff	lcd_8bit_send_command@lcd,lcd_8bits_send_enable_signal@lcd
  1791   00170C  ECD6  F00C         	call	_lcd_8bits_send_enable_signal	;wreg free
  1792   001710  6E3D               	movwf	lcd_8bit_send_command@ret^0,c
  1793   001712                     l2521:
  1794                           
  1795                           ;ECU_Layer/LCD/lcd.c: 173:     return ret;
  1796   001712  503D               	movf	lcd_8bit_send_command@ret^0,w,c
  1797   001714  0012               	return		;funcret
  1798   001716                     __end_of_lcd_8bit_send_command:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _lcd_8bits_send_enable_signal *****************
  1802 ;; Defined at:
  1803 ;;		line 300 in file "ECU_Layer/LCD/lcd.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  lcd             1    8[COMRAM] PTR const struct .
  1806 ;;		 -> lcd2(10), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  ret             1    9[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      unsigned char 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 1
  1825 ;; This function calls:
  1826 ;;		_gpio_pin_write_logic
  1827 ;; This function is called by:
  1828 ;;		_lcd_8bit_send_command
  1829 ;;		_lcd_8bit_send_char_data
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text12
  1834   0019AC                     __ptext12:
  1835                           	callstack 0
  1836   0019AC                     _lcd_8bits_send_enable_signal:
  1837                           	callstack 26
  1838   0019AC  2837               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1839   0019AE  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  1840   0019B0  0E01               	movlw	1
  1841   0019B2  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1842   0019B4  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1843   0019B8                     
  1844                           ;ECU_Layer/LCD/lcd.c: 304:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  1845   0019B8  0E03               	movlw	3
  1846   0019BA                     u1887:
  1847   0019BA  2EE8               	decfsz	wreg,f,c
  1848   0019BC  D7FE               	bra	u1887
  1849   0019BE  0000               	nop	
  1850   0019C0                     
  1851                           ;ECU_Layer/LCD/lcd.c: 305:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  1852   0019C0  2837               	incf	lcd_8bits_send_enable_signal@lcd^0,w,c
  1853   0019C2  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  1854   0019C4  0E00               	movlw	0
  1855   0019C6  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  1856   0019C8  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  1857   0019CC  6E38               	movwf	lcd_8bits_send_enable_signal@ret^0,c
  1858   0019CE                     
  1859                           ;ECU_Layer/LCD/lcd.c: 306:     return ret;
  1860   0019CE  5038               	movf	lcd_8bits_send_enable_signal@ret^0,w,c
  1861   0019D0  0012               	return		;funcret
  1862   0019D2                     __end_of_lcd_8bits_send_enable_signal:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _lcd_4bit_initialize *****************
  1866 ;; Defined at:
  1867 ;;		line 14 in file "ECU_Layer/LCD/lcd.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  lcd             1   15[COMRAM] PTR const struct .
  1870 ;;		 -> lcd1(6), 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  ret             1   18[COMRAM] unsigned char 
  1873 ;;  l_counter       1   17[COMRAM] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      unsigned char 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        4 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 3
  1890 ;; This function calls:
  1891 ;;		_gpio_pin_direction_initialize_write
  1892 ;;		_lcd_4bit_send_command
  1893 ;; This function is called by:
  1894 ;;		_application_initialize
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text13
  1899   00126E                     __ptext13:
  1900                           	callstack 0
  1901   00126E                     _lcd_4bit_initialize:
  1902                           	callstack 26
  1903   00126E                     
  1904                           ;ECU_Layer/LCD/lcd.c: 16:     uint8 l_counter= 0;
  1905   00126E  0E00               	movlw	0
  1906   001270  6E40               	movwf	lcd_4bit_initialize@l_counter^0,c
  1907                           
  1908                           ;ECU_Layer/LCD/lcd.c: 17:     if(((void*)0) == lcd ){
  1909   001272  503E               	movf	lcd_4bit_initialize@lcd^0,w,c
  1910   001274  A4D8               	btfss	status,2,c
  1911   001276  EF3F  F009         	goto	u1551
  1912   00127A  EF41  F009         	goto	u1550
  1913   00127E                     u1551:
  1914   00127E  EF45  F009         	goto	l2553
  1915   001282                     u1550:
  1916   001282                     
  1917                           ;ECU_Layer/LCD/lcd.c: 18:          ret = (Std_ReturnType)0x00;
  1918   001282  0E00               	movlw	0
  1919   001284  6E41               	movwf	lcd_4bit_initialize@ret^0,c
  1920                           
  1921                           ;ECU_Layer/LCD/lcd.c: 19:     }
  1922   001286  EFA2  F009         	goto	l2587
  1923   00128A                     l2553:
  1924                           
  1925                           ;ECU_Layer/LCD/lcd.c: 21:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_e
      +                          n));
  1926   00128A  283E               	incf	lcd_4bit_initialize@lcd^0,w,c
  1927   00128C  6E37               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1928   00128E  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1929   001292  6E41               	movwf	lcd_4bit_initialize@ret^0,c
  1930                           
  1931                           ;ECU_Layer/LCD/lcd.c: 22:         ret = gpio_pin_direction_initialize_write(&(lcd->lcd_r
      +                          s));
  1932   001294  C03E  F037         	movff	lcd_4bit_initialize@lcd,gpio_pin_direction_initialize_write@pin
  1933   001298  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1934   00129C  6E41               	movwf	lcd_4bit_initialize@ret^0,c
  1935   00129E                     
  1936                           ;ECU_Layer/LCD/lcd.c: 24:         for (l_counter = 0; l_counter < 4;l_counter++){
  1937   00129E  0E00               	movlw	0
  1938   0012A0  6E40               	movwf	lcd_4bit_initialize@l_counter^0,c
  1939   0012A2                     l2561:
  1940   0012A2  503E               	movf	lcd_4bit_initialize@lcd^0,w,c
  1941   0012A4  2440               	addwf	lcd_4bit_initialize@l_counter^0,w,c
  1942   0012A6  0F02               	addlw	2
  1943   0012A8  6E37               	movwf	gpio_pin_direction_initialize_write@pin^0,c
  1944   0012AA  EC10  F008         	call	_gpio_pin_direction_initialize_write	;wreg free
  1945   0012AE                     
  1946                           ;ECU_Layer/LCD/lcd.c: 26:         }
  1947   0012AE  2A40               	incf	lcd_4bit_initialize@l_counter^0,f,c
  1948   0012B0  0E03               	movlw	3
  1949   0012B2  6440               	cpfsgt	lcd_4bit_initialize@l_counter^0,c
  1950   0012B4  EF5E  F009         	goto	u1561
  1951   0012B8  EF60  F009         	goto	u1560
  1952   0012BC                     u1561:
  1953   0012BC  EF51  F009         	goto	l2561
  1954   0012C0                     u1560:
  1955   0012C0                     
  1956                           ;ECU_Layer/LCD/lcd.c: 27:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1957   0012C0  0E34               	movlw	52
  1958   0012C2  6E3F               	movwf	??_lcd_4bit_initialize^0,c
  1959   0012C4  0EF2               	movlw	242
  1960   0012C6                     u1897:
  1961   0012C6  2EE8               	decfsz	wreg,f,c
  1962   0012C8  D7FE               	bra	u1897
  1963   0012CA  2E3F               	decfsz	??_lcd_4bit_initialize^0,f,c
  1964   0012CC  D7FC               	bra	u1897
  1965   0012CE  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1966   0012D2  0E38               	movlw	56
  1967   0012D4  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1968   0012D6  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1969   0012DA                     
  1970                           ;ECU_Layer/LCD/lcd.c: 29:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1971   0012DA  0E0D               	movlw	13
  1972   0012DC  6E3F               	movwf	??_lcd_4bit_initialize^0,c
  1973   0012DE  0EFC               	movlw	252
  1974   0012E0                     u1907:
  1975   0012E0  2EE8               	decfsz	wreg,f,c
  1976   0012E2  D7FE               	bra	u1907
  1977   0012E4  2E3F               	decfsz	??_lcd_4bit_initialize^0,f,c
  1978   0012E6  D7FC               	bra	u1907
  1979   0012E8  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1980   0012EC  0E38               	movlw	56
  1981   0012EE  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1982   0012F0  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1983   0012F4                     
  1984                           ;ECU_Layer/LCD/lcd.c: 31:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  1985   0012F4  0E64               	movlw	100
  1986   0012F6                     u1917:
  1987   0012F6  2EE8               	decfsz	wreg,f,c
  1988   0012F8  D7FE               	bra	u1917
  1989   0012FA  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1990   0012FE  0E38               	movlw	56
  1991   001300  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1992   001302  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1993   001306  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1994   00130A  0E01               	movlw	1
  1995   00130C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  1996   00130E  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  1997   001312  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  1998   001316  0E02               	movlw	2
  1999   001318  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2000   00131A  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  2001   00131E  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2002   001322  0E06               	movlw	6
  2003   001324  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2004   001326  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  2005   00132A  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2006   00132E  0E0C               	movlw	12
  2007   001330  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2008   001332  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  2009   001336                     
  2010                           ;ECU_Layer/LCD/lcd.c: 37:         ret = lcd_4bit_send_command(lcd , 0x28);
  2011   001336  C03E  F03A         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  2012   00133A  0E28               	movlw	40
  2013   00133C  6E3B               	movwf	lcd_4bit_send_command@command^0,c
  2014   00133E  ECB9  F00B         	call	_lcd_4bit_send_command	;wreg free
  2015   001342  6E41               	movwf	lcd_4bit_initialize@ret^0,c
  2016   001344                     l2587:
  2017                           
  2018                           ;ECU_Layer/LCD/lcd.c: 39:     return ret;
  2019   001344  5041               	movf	lcd_4bit_initialize@ret^0,w,c
  2020   001346  0012               	return		;funcret
  2021   001348                     __end_of_lcd_4bit_initialize:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _lcd_4bit_send_command *****************
  2025 ;; Defined at:
  2026 ;;		line 42 in file "ECU_Layer/LCD/lcd.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  lcd             1   11[COMRAM] PTR const struct .
  2029 ;;		 -> lcd1(6), 
  2030 ;;  command         1   12[COMRAM] unsigned char 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  ret             1   13[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      unsigned char 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;Total ram usage:        3 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		_gpio_pin_write_logic
  2051 ;;		_lcd_4bits_send_enable_signal
  2052 ;;		_lcd_send_4bits
  2053 ;; This function is called by:
  2054 ;;		_lcd_4bit_initialize
  2055 ;;		_lcd_4bits_set_cursor
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text14
  2060   001772                     __ptext14:
  2061                           	callstack 0
  2062   001772                     _lcd_4bit_send_command:
  2063                           	callstack 26
  2064   001772                     
  2065                           ;ECU_Layer/LCD/lcd.c: 45:     if(((void*)0) == lcd ){
  2066   001772  503A               	movf	lcd_4bit_send_command@lcd^0,w,c
  2067   001774  A4D8               	btfss	status,2,c
  2068   001776  EFBF  F00B         	goto	u1471
  2069   00177A  EFC1  F00B         	goto	u1470
  2070   00177E                     u1471:
  2071   00177E  EFC5  F00B         	goto	l2485
  2072   001782                     u1470:
  2073   001782                     
  2074                           ;ECU_Layer/LCD/lcd.c: 46:          ret = (Std_ReturnType)0x00;
  2075   001782  0E00               	movlw	0
  2076   001784  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2077                           
  2078                           ;ECU_Layer/LCD/lcd.c: 47:     }
  2079   001786  EFE5  F00B         	goto	l2487
  2080   00178A                     l2485:
  2081                           
  2082                           ;ECU_Layer/LCD/lcd.c: 49:         ret = gpio_pin_write_logic(&(lcd->lcd_rs) , LOW);
  2083   00178A  C03A  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin
  2084   00178E  0E00               	movlw	0
  2085   001790  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2086   001792  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2087   001796  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2088                           
  2089                           ;ECU_Layer/LCD/lcd.c: 51:         ret = lcd_send_4bits( lcd ,command >> 4);
  2090   001798  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2091   00179C  383B               	swapf	lcd_4bit_send_command@command^0,w,c
  2092   00179E  0B0F               	andlw	15
  2093   0017A0  6E38               	movwf	lcd_send_4bits@data_command^0,c
  2094   0017A2  EC3D  F00C         	call	_lcd_send_4bits	;wreg free
  2095   0017A6  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2096                           
  2097                           ;ECU_Layer/LCD/lcd.c: 52:         ret = lcd_4bits_send_enable_signal(lcd);
  2098   0017A8  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2099   0017AC  ECE9  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  2100   0017B0  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2101                           
  2102                           ;ECU_Layer/LCD/lcd.c: 53:         ret = lcd_send_4bits( lcd ,command);
  2103   0017B2  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  2104   0017B6  C03B  F038         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  2105   0017BA  EC3D  F00C         	call	_lcd_send_4bits	;wreg free
  2106   0017BE  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2107                           
  2108                           ;ECU_Layer/LCD/lcd.c: 54:         ret = lcd_4bits_send_enable_signal(lcd);
  2109   0017C0  C03A  F037         	movff	lcd_4bit_send_command@lcd,lcd_4bits_send_enable_signal@lcd
  2110   0017C4  ECE9  F00C         	call	_lcd_4bits_send_enable_signal	;wreg free
  2111   0017C8  6E3C               	movwf	lcd_4bit_send_command@ret^0,c
  2112   0017CA                     l2487:
  2113                           
  2114                           ;ECU_Layer/LCD/lcd.c: 56:     return ret;
  2115   0017CA  503C               	movf	lcd_4bit_send_command@ret^0,w,c
  2116   0017CC  0012               	return		;funcret
  2117   0017CE                     __end_of_lcd_4bit_send_command:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _lcd_send_4bits *****************
  2121 ;; Defined at:
  2122 ;;		line 280 in file "ECU_Layer/LCD/lcd.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  lcd             1    8[COMRAM] PTR const struct .
  2125 ;;		 -> lcd1(6), 
  2126 ;;  data_command    1    9[COMRAM] unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  ret             1   10[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      unsigned char 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        3 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		_gpio_pin_write_logic
  2147 ;; This function is called by:
  2148 ;;		_lcd_4bit_send_command
  2149 ;;		_lcd_4bit_send_char_data
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text15
  2154   00187A                     __ptext15:
  2155                           	callstack 0
  2156   00187A                     _lcd_send_4bits:
  2157                           	callstack 26
  2158   00187A                     
  2159                           ;ECU_Layer/LCD/lcd.c: 283:     ret = gpio_pin_write_logic(&(lcd->lcd_pins[0]) , (data_co
      +                          mmand >> 0) & (uint8)0x01);
  2160   00187A  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2161   00187C  0F02               	addlw	2
  2162   00187E  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2163   001880  5038               	movf	lcd_send_4bits@data_command^0,w,c
  2164   001882  0B01               	andlw	1
  2165   001884  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2166   001886  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2167   00188A  6E39               	movwf	lcd_send_4bits@ret^0,c
  2168   00188C                     
  2169                           ;ECU_Layer/LCD/lcd.c: 284:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[1]) , (data_c
      +                          ommand >> 1) & (uint8)0x01);
  2170   00188C  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2171   00188E  0F03               	addlw	3
  2172   001890  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2173   001892  90D8               	bcf	status,0,c
  2174   001894  3038               	rrcf	lcd_send_4bits@data_command^0,w,c
  2175   001896  0B01               	andlw	1
  2176   001898  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2177   00189A  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2178   00189E  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2179   0018A0                     
  2180                           ;ECU_Layer/LCD/lcd.c: 285:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[2]) , (data_c
      +                          ommand >> 2) & (uint8)0x01);
  2181   0018A0  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2182   0018A2  0F04               	addlw	4
  2183   0018A4  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2184   0018A6  4038               	rrncf	lcd_send_4bits@data_command^0,w,c
  2185   0018A8  42E8               	rrncf	wreg,f,c
  2186   0018AA  0B3F               	andlw	63
  2187   0018AC  0B01               	andlw	1
  2188   0018AE  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2189   0018B0  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2190   0018B4  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2191   0018B6                     
  2192                           ;ECU_Layer/LCD/lcd.c: 286:     ret &= gpio_pin_write_logic(&(lcd->lcd_pins[3]) , (data_c
      +                          ommand >> 3) & (uint8)0x01);
  2193   0018B6  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2194   0018B8  0F05               	addlw	5
  2195   0018BA  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2196   0018BC  3838               	swapf	lcd_send_4bits@data_command^0,w,c
  2197   0018BE  46E8               	rlncf	wreg,f,c
  2198   0018C0  0B1F               	andlw	31
  2199   0018C2  0B01               	andlw	1
  2200   0018C4  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2201   0018C6  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2202   0018CA  1639               	andwf	lcd_send_4bits@ret^0,f,c
  2203                           
  2204                           ;ECU_Layer/LCD/lcd.c: 288:     return ret;
  2205   0018CC  5039               	movf	lcd_send_4bits@ret^0,w,c
  2206   0018CE  0012               	return		;funcret
  2207   0018D0                     __end_of_lcd_send_4bits:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2211 ;; Defined at:
  2212 ;;		line 291 in file "ECU_Layer/LCD/lcd.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  lcd             1    8[COMRAM] PTR const struct .
  2215 ;;		 -> lcd1(6), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  ret             1    9[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      unsigned char 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2227 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 1
  2234 ;; This function calls:
  2235 ;;		_gpio_pin_write_logic
  2236 ;; This function is called by:
  2237 ;;		_lcd_4bit_send_command
  2238 ;;		_lcd_4bit_send_char_data
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text16
  2243   0019D2                     __ptext16:
  2244                           	callstack 0
  2245   0019D2                     _lcd_4bits_send_enable_signal:
  2246                           	callstack 26
  2247   0019D2  2837               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2248   0019D4  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2249   0019D6  0E01               	movlw	1
  2250   0019D8  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2251   0019DA  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2252   0019DE                     
  2253                           ;ECU_Layer/LCD/lcd.c: 295:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  2254   0019DE  0E03               	movlw	3
  2255   0019E0                     u1927:
  2256   0019E0  2EE8               	decfsz	wreg,f,c
  2257   0019E2  D7FE               	bra	u1927
  2258   0019E4  0000               	nop	
  2259   0019E6                     
  2260                           ;ECU_Layer/LCD/lcd.c: 296:     ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  2261   0019E6  2837               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2262   0019E8  6E2F               	movwf	gpio_pin_write_logic@pin^0,c
  2263   0019EA  0E00               	movlw	0
  2264   0019EC  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2265   0019EE  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2266   0019F2  6E38               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2267   0019F4                     
  2268                           ;ECU_Layer/LCD/lcd.c: 297:     return ret;
  2269   0019F4  5038               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2270   0019F6  0012               	return		;funcret
  2271   0019F8                     __end_of_lcd_4bits_send_enable_signal:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _gpio_pin_direction_initialize_write *****************
  2275 ;; Defined at:
  2276 ;;		line 18 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  pin             1    8[COMRAM] PTR const struct .
  2279 ;;		 -> lcd2$lcd_pins(8), lcd1$lcd_pins(4), lcd2(10), lcd1(6), 
  2280 ;;		 -> relay_initialize@pin(1), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  ret             1   14[COMRAM] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      unsigned char 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2292 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 1
  2299 ;; This function calls:
  2300 ;;		_gpio_pin_write_logic
  2301 ;; This function is called by:
  2302 ;;		_lcd_4bit_initialize
  2303 ;;		_lcd_8bit_initialize
  2304 ;;		_dc_motor_initialize
  2305 ;;		_relay_initialize
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text17
  2310   001020                     __ptext17:
  2311                           	callstack 0
  2312   001020                     _gpio_pin_direction_initialize_write:
  2313                           	callstack 27
  2314   001020                     
  2315                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     if(((void*)0) == pin || pin->pin > 7){
  2316   001020  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2317   001022  B4D8               	btfsc	status,2,c
  2318   001024  EF16  F008         	goto	u1411
  2319   001028  EF18  F008         	goto	u1410
  2320   00102C                     u1411:
  2321   00102C  EF28  F008         	goto	l2461
  2322   001030                     u1410:
  2323   001030  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2324   001032  6ED9               	movwf	fsr2l,c
  2325   001034  6ADA               	clrf	fsr2h,c
  2326   001036  30DF               	rrcf	223,w,c
  2327   001038  32E8               	rrcf	wreg,f,c
  2328   00103A  32E8               	rrcf	wreg,f,c
  2329   00103C  0B07               	andlw	7
  2330   00103E  6E38               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2331   001040  0E07               	movlw	7
  2332   001042  6438               	cpfsgt	??_gpio_pin_direction_initialize_write^0,c
  2333   001044  EF26  F008         	goto	u1421
  2334   001048  EF28  F008         	goto	u1420
  2335   00104C                     u1421:
  2336   00104C  EF81  F008         	goto	l2469
  2337   001050                     u1420:
  2338   001050                     l2461:
  2339                           
  2340                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:          ret = (Std_ReturnType)0x00;
  2341   001050  0E00               	movlw	0
  2342   001052  6E3D               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  2343                           
  2344                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  2345   001054  EFAD  F008         	goto	l2473
  2346   001058                     l2463:
  2347                           
  2348                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 (*tris_registers[pin->port] &= ~(1 << p
      +                          in->pin));
  2349   001058  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2350   00105A  6ED9               	movwf	fsr2l,c
  2351   00105C  6ADA               	clrf	fsr2h,c
  2352   00105E  30DF               	rrcf	223,w,c
  2353   001060  32E8               	rrcf	wreg,f,c
  2354   001062  32E8               	rrcf	wreg,f,c
  2355   001064  0B07               	andlw	7
  2356   001066  6E38               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2357   001068  0E01               	movlw	1
  2358   00106A  6E39               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2359   00106C  2A38               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  2360   00106E  EF3B  F008         	goto	u1434
  2361   001072                     u1435:
  2362   001072  90D8               	bcf	status,0,c
  2363   001074  3639               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  2364   001076                     u1434:
  2365   001076  2E38               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  2366   001078  EF39  F008         	goto	u1435
  2367   00107C  5039               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2368   00107E  0AFF               	xorlw	255
  2369   001080  6E3A               	movwf	(??_gpio_pin_direction_initialize_write+2)^0,c
  2370   001082  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2371   001084  6ED9               	movwf	fsr2l,c
  2372   001086  6ADA               	clrf	fsr2h,c
  2373   001088  50DF               	movf	223,w,c
  2374   00108A  0B07               	andlw	7
  2375   00108C  0D02               	mullw	2
  2376   00108E  50F3               	movf	243,w,c
  2377   001090  0F15               	addlw	low _tris_registers
  2378   001092  6ED9               	movwf	fsr2l,c
  2379   001094  6ADA               	clrf	fsr2h,c
  2380   001096  CFDE F03B          	movff	postinc2,??_gpio_pin_direction_initialize_write+3
  2381   00109A  CFDD F03C          	movff	postdec2,??_gpio_pin_direction_initialize_write+4
  2382   00109E  C03B  FFD9         	movff	??_gpio_pin_direction_initialize_write+3,fsr2l
  2383   0010A2  C03C  FFDA         	movff	??_gpio_pin_direction_initialize_write+4,fsr2h
  2384   0010A6  503A               	movf	(??_gpio_pin_direction_initialize_write+2)^0,w,c
  2385   0010A8  16DF               	andwf	indf2,f,c
  2386                           
  2387                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:                 break;
  2388   0010AA  EFA1  F008         	goto	l2471
  2389   0010AE                     l2465:
  2390                           
  2391                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[pin->port] |= (1 << pi
      +                          n->pin));
  2392   0010AE  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2393   0010B0  6ED9               	movwf	fsr2l,c
  2394   0010B2  6ADA               	clrf	fsr2h,c
  2395   0010B4  30DF               	rrcf	223,w,c
  2396   0010B6  32E8               	rrcf	wreg,f,c
  2397   0010B8  32E8               	rrcf	wreg,f,c
  2398   0010BA  0B07               	andlw	7
  2399   0010BC  6E38               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2400   0010BE  0E01               	movlw	1
  2401   0010C0  6E39               	movwf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2402   0010C2  2A38               	incf	??_gpio_pin_direction_initialize_write^0,f,c
  2403   0010C4  EF66  F008         	goto	u1444
  2404   0010C8                     u1445:
  2405   0010C8  90D8               	bcf	status,0,c
  2406   0010CA  3639               	rlcf	(??_gpio_pin_direction_initialize_write+1)^0,f,c
  2407   0010CC                     u1444:
  2408   0010CC  2E38               	decfsz	??_gpio_pin_direction_initialize_write^0,f,c
  2409   0010CE  EF64  F008         	goto	u1445
  2410   0010D2  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2411   0010D4  6ED9               	movwf	fsr2l,c
  2412   0010D6  6ADA               	clrf	fsr2h,c
  2413   0010D8  50DF               	movf	223,w,c
  2414   0010DA  0B07               	andlw	7
  2415   0010DC  0D02               	mullw	2
  2416   0010DE  50F3               	movf	243,w,c
  2417   0010E0  0F15               	addlw	low _tris_registers
  2418   0010E2  6ED9               	movwf	fsr2l,c
  2419   0010E4  6ADA               	clrf	fsr2h,c
  2420   0010E6  CFDE F03A          	movff	postinc2,??_gpio_pin_direction_initialize_write+2
  2421   0010EA  CFDD F03B          	movff	postdec2,??_gpio_pin_direction_initialize_write+3
  2422   0010EE  C03A  FFD9         	movff	??_gpio_pin_direction_initialize_write+2,fsr2l
  2423   0010F2  C03B  FFDA         	movff	??_gpio_pin_direction_initialize_write+3,fsr2h
  2424   0010F6  5039               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2425   0010F8  12DF               	iorwf	indf2,f,c
  2426                           
  2427                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 break;
  2428   0010FA  EFA1  F008         	goto	l2471
  2429   0010FE                     l2467:
  2430                           
  2431                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:         }
  2432   0010FE  EFA1  F008         	goto	l2471
  2433   001102                     l2469:
  2434   001102  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2435   001104  6ED9               	movwf	fsr2l,c
  2436   001106  6ADA               	clrf	fsr2h,c
  2437   001108  BCDF               	btfsc	indf2,6,c
  2438   00110A  EF89  F008         	goto	u1451
  2439   00110E  EF8C  F008         	goto	u1450
  2440   001112                     u1451:
  2441   001112  0E01               	movlw	1
  2442   001114  EF8D  F008         	goto	u1460
  2443   001118                     u1450:
  2444   001118  0E00               	movlw	0
  2445   00111A                     u1460:
  2446   00111A  6E38               	movwf	??_gpio_pin_direction_initialize_write^0,c
  2447   00111C  6A39               	clrf	(??_gpio_pin_direction_initialize_write+1)^0,c
  2448                           
  2449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2450                           ; Switch size 1, requested type "simple"
  2451                           ; Number of cases is 1, Range of values is 0 to 0
  2452                           ; switch strategies available:
  2453                           ; Name         Instructions Cycles
  2454                           ; simple_byte            4     3 (average)
  2455                           ;	Chosen strategy is simple_byte
  2456   00111E  5039               	movf	(??_gpio_pin_direction_initialize_write+1)^0,w,c
  2457   001120  0A00               	xorlw	0	; case 0
  2458   001122  B4D8               	btfsc	status,2,c
  2459   001124  EF96  F008         	goto	l2921
  2460   001128  EF7F  F008         	goto	l2467
  2461   00112C                     l2921:
  2462                           
  2463                           ; Switch size 1, requested type "simple"
  2464                           ; Number of cases is 2, Range of values is 0 to 1
  2465                           ; switch strategies available:
  2466                           ; Name         Instructions Cycles
  2467                           ; simple_byte            7     4 (average)
  2468                           ;	Chosen strategy is simple_byte
  2469   00112C  5038               	movf	??_gpio_pin_direction_initialize_write^0,w,c
  2470   00112E  0A00               	xorlw	0	; case 0
  2471   001130  B4D8               	btfsc	status,2,c
  2472   001132  EF2C  F008         	goto	l2463
  2473   001136  0A01               	xorlw	1	; case 1
  2474   001138  B4D8               	btfsc	status,2,c
  2475   00113A  EF57  F008         	goto	l2465
  2476   00113E  EF7F  F008         	goto	l2467
  2477   001142                     l2471:
  2478                           
  2479                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:         ret = gpio_pin_write_logic(pin , pin->logic);
  2480   001142  C037  F02F         	movff	gpio_pin_direction_initialize_write@pin,gpio_pin_write_logic@pin
  2481   001146  5037               	movf	gpio_pin_direction_initialize_write@pin^0,w,c
  2482   001148  6ED9               	movwf	fsr2l,c
  2483   00114A  6ADA               	clrf	fsr2h,c
  2484   00114C  0E00               	movlw	0
  2485   00114E  BEDF               	btfsc	indf2,7,c
  2486   001150  0E01               	movlw	1
  2487   001152  6E30               	movwf	gpio_pin_write_logic@logic^0,c
  2488   001154  ECAF  F008         	call	_gpio_pin_write_logic	;wreg free
  2489   001158  6E3D               	movwf	gpio_pin_direction_initialize_write@ret^0,c
  2490   00115A                     l2473:
  2491                           
  2492                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:     return ret;
  2493   00115A  503D               	movf	gpio_pin_direction_initialize_write@ret^0,w,c
  2494   00115C  0012               	return		;funcret
  2495   00115E                     __end_of_gpio_pin_direction_initialize_write:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _gpio_pin_write_logic *****************
  2499 ;; Defined at:
  2500 ;;		line 90 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  pin             1    0[COMRAM] PTR const struct .
  2503 ;;		 -> lcd2$lcd_pins(8), lcd1$lcd_pins(4), lcd2(10), lcd1(6), 
  2504 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_initialize@pin(1), led_turn_off@pin(1), 
  2505 ;;		 -> led_turn_on@pin(1), 
  2506 ;;  logic           1    1[COMRAM] enum E2808
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  ret             1    7[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        8 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_lcd_4bit_send_command
  2528 ;;		_lcd_4bit_send_char_data
  2529 ;;		_lcd_8bit_send_command
  2530 ;;		_lcd_8bit_send_char_data
  2531 ;;		_lcd_send_4bits
  2532 ;;		_lcd_4bits_send_enable_signal
  2533 ;;		_lcd_8bits_send_enable_signal
  2534 ;;		_gpio_pin_direction_initialize_write
  2535 ;;		_dc_motor_move_left
  2536 ;;		_dc_motor_move_right
  2537 ;;		_dc_motor_stop
  2538 ;;		_led_turn_on
  2539 ;;		_led_turn_off
  2540 ;;		_relay_turn_on
  2541 ;;		_relay_turn_off
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text18
  2546   00115E                     __ptext18:
  2547                           	callstack 0
  2548   00115E                     _gpio_pin_write_logic:
  2549                           	callstack 26
  2550   00115E                     
  2551                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2552   00115E  0E01               	movlw	1
  2553   001160  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2554                           
  2555                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     if(((void*)0) == pin || pin->pin > 7){
  2556   001162  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2557   001164  B4D8               	btfsc	status,2,c
  2558   001166  EFB7  F008         	goto	u1371
  2559   00116A  EFB9  F008         	goto	u1370
  2560   00116E                     u1371:
  2561   00116E  EFC9  F008         	goto	l2403
  2562   001172                     u1370:
  2563   001172  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2564   001174  6ED9               	movwf	fsr2l,c
  2565   001176  6ADA               	clrf	fsr2h,c
  2566   001178  30DF               	rrcf	223,w,c
  2567   00117A  32E8               	rrcf	wreg,f,c
  2568   00117C  32E8               	rrcf	wreg,f,c
  2569   00117E  0B07               	andlw	7
  2570   001180  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2571   001182  0E07               	movlw	7
  2572   001184  6431               	cpfsgt	??_gpio_pin_write_logic^0,c
  2573   001186  EFC7  F008         	goto	u1381
  2574   00118A  EFC9  F008         	goto	u1380
  2575   00118E                     u1381:
  2576   00118E  EF20  F009         	goto	l2411
  2577   001192                     u1380:
  2578   001192                     l2403:
  2579                           
  2580                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (Std_ReturnType)0x00;
  2581   001192  0E00               	movlw	0
  2582   001194  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  2583                           
  2584                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     }
  2585   001196  EF35  F009         	goto	l2413
  2586   00119A                     l2405:
  2587                           
  2588                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:                 (*lat_registers[pin->port] &= ~(1 << pi
      +                          n->pin));
  2589   00119A  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2590   00119C  6ED9               	movwf	fsr2l,c
  2591   00119E  6ADA               	clrf	fsr2h,c
  2592   0011A0  30DF               	rrcf	223,w,c
  2593   0011A2  32E8               	rrcf	wreg,f,c
  2594   0011A4  32E8               	rrcf	wreg,f,c
  2595   0011A6  0B07               	andlw	7
  2596   0011A8  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2597   0011AA  0E01               	movlw	1
  2598   0011AC  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2599   0011AE  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2600   0011B0  EFDC  F008         	goto	u1394
  2601   0011B4                     u1395:
  2602   0011B4  90D8               	bcf	status,0,c
  2603   0011B6  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2604   0011B8                     u1394:
  2605   0011B8  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2606   0011BA  EFDA  F008         	goto	u1395
  2607   0011BE  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2608   0011C0  0AFF               	xorlw	255
  2609   0011C2  6E33               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2610   0011C4  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2611   0011C6  6ED9               	movwf	fsr2l,c
  2612   0011C8  6ADA               	clrf	fsr2h,c
  2613   0011CA  50DF               	movf	223,w,c
  2614   0011CC  0B07               	andlw	7
  2615   0011CE  0D02               	mullw	2
  2616   0011D0  50F3               	movf	243,w,c
  2617   0011D2  0F0B               	addlw	low _lat_registers
  2618   0011D4  6ED9               	movwf	fsr2l,c
  2619   0011D6  6ADA               	clrf	fsr2h,c
  2620   0011D8  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+3
  2621   0011DC  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+4
  2622   0011E0  C034  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2623   0011E4  C035  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2624   0011E8  5033               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2625   0011EA  16DF               	andwf	indf2,f,c
  2626                           
  2627                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:                 break;
  2628   0011EC  EF35  F009         	goto	l2413
  2629   0011F0                     l2407:
  2630                           
  2631                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 (*lat_registers[pin->port] |= (1 << pi
      +                          n->pin));
  2632   0011F0  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2633   0011F2  6ED9               	movwf	fsr2l,c
  2634   0011F4  6ADA               	clrf	fsr2h,c
  2635   0011F6  30DF               	rrcf	223,w,c
  2636   0011F8  32E8               	rrcf	wreg,f,c
  2637   0011FA  32E8               	rrcf	wreg,f,c
  2638   0011FC  0B07               	andlw	7
  2639   0011FE  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2640   001200  0E01               	movlw	1
  2641   001202  6E32               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2642   001204  2A31               	incf	??_gpio_pin_write_logic^0,f,c
  2643   001206  EF07  F009         	goto	u1404
  2644   00120A                     u1405:
  2645   00120A  90D8               	bcf	status,0,c
  2646   00120C  3632               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2647   00120E                     u1404:
  2648   00120E  2E31               	decfsz	??_gpio_pin_write_logic^0,f,c
  2649   001210  EF05  F009         	goto	u1405
  2650   001214  502F               	movf	gpio_pin_write_logic@pin^0,w,c
  2651   001216  6ED9               	movwf	fsr2l,c
  2652   001218  6ADA               	clrf	fsr2h,c
  2653   00121A  50DF               	movf	223,w,c
  2654   00121C  0B07               	andlw	7
  2655   00121E  0D02               	mullw	2
  2656   001220  50F3               	movf	243,w,c
  2657   001222  0F0B               	addlw	low _lat_registers
  2658   001224  6ED9               	movwf	fsr2l,c
  2659   001226  6ADA               	clrf	fsr2h,c
  2660   001228  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+2
  2661   00122C  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+3
  2662   001230  C033  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  2663   001234  C034  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  2664   001238  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2665   00123A  12DF               	iorwf	indf2,f,c
  2666                           
  2667                           ;MCAL_Layer/GPIO/hal_gpio.c: 104:                 break;
  2668   00123C  EF35  F009         	goto	l2413
  2669   001240                     l2411:
  2670   001240  5030               	movf	gpio_pin_write_logic@logic^0,w,c
  2671   001242  6E31               	movwf	??_gpio_pin_write_logic^0,c
  2672   001244  6A32               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2673                           
  2674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2675                           ; Switch size 1, requested type "simple"
  2676                           ; Number of cases is 1, Range of values is 0 to 0
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte            4     3 (average)
  2680                           ;	Chosen strategy is simple_byte
  2681   001246  5032               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2682   001248  0A00               	xorlw	0	; case 0
  2683   00124A  B4D8               	btfsc	status,2,c
  2684   00124C  EF2A  F009         	goto	l2923
  2685   001250  EFC9  F008         	goto	l2403
  2686   001254                     l2923:
  2687                           
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 2, Range of values is 0 to 1
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte            7     4 (average)
  2693                           ;	Chosen strategy is simple_byte
  2694   001254  5031               	movf	??_gpio_pin_write_logic^0,w,c
  2695   001256  0A00               	xorlw	0	; case 0
  2696   001258  B4D8               	btfsc	status,2,c
  2697   00125A  EFCD  F008         	goto	l2405
  2698   00125E  0A01               	xorlw	1	; case 1
  2699   001260  B4D8               	btfsc	status,2,c
  2700   001262  EFF8  F008         	goto	l2407
  2701   001266  EFC9  F008         	goto	l2403
  2702   00126A                     l2413:
  2703                           
  2704                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:     return ret;
  2705   00126A  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2706   00126C  0012               	return		;funcret
  2707   00126E                     __end_of_gpio_pin_write_logic:
  2708                           	callstack 0
  2709                           
  2710                           	psect	rparam
  2711   000000                     
  2712                           	psect	config
  2713                           
  2714                           ; Padding undefined space
  2715   300000                     	org	3145728
  2716   300000  FF                 	db	255
  2717                           
  2718                           ;Config register CONFIG1H @ 0x300001
  2719                           ;	Oscillator Selection bits
  2720                           ;	OSC = HS, HS oscillator
  2721                           ;	Fail-Safe Clock Monitor Enable bit
  2722                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2723                           ;	Internal/External Oscillator Switchover bit
  2724                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2725   300001                     	org	3145729
  2726   300001  02                 	db	2
  2727                           
  2728                           ;Config register CONFIG2L @ 0x300002
  2729                           ;	Power-up Timer Enable bit
  2730                           ;	PWRT = OFF, PWRT disabled
  2731                           ;	Brown-out Reset Enable bits
  2732                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2733                           ;	Brown Out Reset Voltage bits
  2734                           ;	BORV = 1, 
  2735   300002                     	org	3145730
  2736   300002  09                 	db	9
  2737                           
  2738                           ;Config register CONFIG2H @ 0x300003
  2739                           ;	Watchdog Timer Enable bit
  2740                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2741                           ;	Watchdog Timer Postscale Select bits
  2742                           ;	WDTPS = 32768, 1:32768
  2743   300003                     	org	3145731
  2744   300003  1E                 	db	30
  2745                           
  2746                           ; Padding undefined space
  2747   300004                     	org	3145732
  2748   300004  FF                 	db	255
  2749                           
  2750                           ;Config register CONFIG3H @ 0x300005
  2751                           ;	CCP2 MUX bit
  2752                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2753                           ;	PORTB A/D Enable bit
  2754                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2755                           ;	Low-Power Timer1 Oscillator Enable bit
  2756                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2757                           ;	MCLR Pin Enable bit
  2758                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2759   300005                     	org	3145733
  2760   300005  81                 	db	129
  2761                           
  2762                           ;Config register CONFIG4L @ 0x300006
  2763                           ;	Stack Full/Underflow Reset Enable bit
  2764                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2765                           ;	Single-Supply ICSP Enable bit
  2766                           ;	LVP = OFF, Single-Supply ICSP disabled
  2767                           ;	Extended Instruction Set Enable bit
  2768                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2769                           ;	Background Debugger Enable bit
  2770                           ;	DEBUG = 0x1, unprogrammed default
  2771   300006                     	org	3145734
  2772   300006  81                 	db	129
  2773                           
  2774                           ; Padding undefined space
  2775   300007                     	org	3145735
  2776   300007  FF                 	db	255
  2777                           
  2778                           ;Config register CONFIG5L @ 0x300008
  2779                           ;	Code Protection bit
  2780                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2781                           ;	Code Protection bit
  2782                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2783                           ;	Code Protection bit
  2784                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2785                           ;	Code Protection bit
  2786                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2787   300008                     	org	3145736
  2788   300008  0F                 	db	15
  2789                           
  2790                           ;Config register CONFIG5H @ 0x300009
  2791                           ;	Boot Block Code Protection bit
  2792                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2793                           ;	Data EEPROM Code Protection bit
  2794                           ;	CPD = OFF, Data EEPROM not code-protected
  2795   300009                     	org	3145737
  2796   300009  C0                 	db	192
  2797                           
  2798                           ;Config register CONFIG6L @ 0x30000A
  2799                           ;	Write Protection bit
  2800                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2801                           ;	Write Protection bit
  2802                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2803                           ;	Write Protection bit
  2804                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2805                           ;	Write Protection bit
  2806                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2807   30000A                     	org	3145738
  2808   30000A  0F                 	db	15
  2809                           
  2810                           ;Config register CONFIG6H @ 0x30000B
  2811                           ;	Configuration Register Write Protection bit
  2812                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2813                           ;	Boot Block Write Protection bit
  2814                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2815                           ;	Data EEPROM Write Protection bit
  2816                           ;	WRTD = OFF, Data EEPROM not write-protected
  2817   30000B                     	org	3145739
  2818   30000B  E0                 	db	224
  2819                           
  2820                           ;Config register CONFIG7L @ 0x30000C
  2821                           ;	Table Read Protection bit
  2822                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2823                           ;	Table Read Protection bit
  2824                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2825                           ;	Table Read Protection bit
  2826                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2827                           ;	Table Read Protection bit
  2828                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2829   30000C                     	org	3145740
  2830   30000C  0F                 	db	15
  2831                           
  2832                           ;Config register CONFIG7H @ 0x30000D
  2833                           ;	Boot Block Table Read Protection bit
  2834                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2835   30000D                     	org	3145741
  2836   30000D  40                 	db	64
  2837                           tosu	equ	0xFFF
  2838                           tosh	equ	0xFFE
  2839                           tosl	equ	0xFFD
  2840                           stkptr	equ	0xFFC
  2841                           pclatu	equ	0xFFB
  2842                           pclath	equ	0xFFA
  2843                           pcl	equ	0xFF9
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           indf0	equ	0xFEF
  2851                           postinc0	equ	0xFEE
  2852                           postdec0	equ	0xFED
  2853                           preinc0	equ	0xFEC
  2854                           plusw0	equ	0xFEB
  2855                           fsr0h	equ	0xFEA
  2856                           fsr0l	equ	0xFE9
  2857                           wreg	equ	0xFE8
  2858                           indf1	equ	0xFE7
  2859                           postinc1	equ	0xFE6
  2860                           postdec1	equ	0xFE5
  2861                           preinc1	equ	0xFE4
  2862                           plusw1	equ	0xFE3
  2863                           fsr1h	equ	0xFE2
  2864                           fsr1l	equ	0xFE1
  2865                           bsr	equ	0xFE0
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           postdec2	equ	0xFDD
  2869                           preinc2	equ	0xFDC
  2870                           plusw2	equ	0xFDB
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        46
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     29      85
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize_write@pin	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), 
		 -> relay_initialize@pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$lcd_pins(COMRAM[4]), lcd2(COMRAM[10]), lcd2$lcd_pins(COMRAM[8]), 
		 -> led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_initialize@pin(COMRAM[1]), relay_turn_off@pin(COMRAM[1]), 
		 -> relay_turn_on@pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@data	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[1]), STR_2(CODE[12]), STR_4(CODE[2]), STR_6(CODE[4]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@data	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[1]), STR_2(CODE[12]), STR_4(CODE[2]), STR_6(CODE[4]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string@data	PTR unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[14]), STR_5(CODE[2]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_string_pos@data	PTR unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[14]), STR_5(CODE[2]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bits_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_string_pos
    _lcd_8bit_send_string_pos->_lcd_8bits_set_cursor
    _lcd_8bits_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_8bits_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bits_set_cursor
    _lcd_4bits_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bits_send_enable_signal
    _lcd_8bits_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_gpio_pin_direction_initialize_write
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bits_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_direction_initialize_write->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  105659
                                             27 COMRAM     2     2      0
             _application_initialize
           _lcd_4bit_send_string_pos
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   24798
                                             22 COMRAM     5     1      4
               _lcd_8bit_send_string
               _lcd_8bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bits_set_cursor                                 6     3      3   13012
                                             16 COMRAM     6     3      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   10837
                                             16 COMRAM     3     1      2
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2   10490
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   37532
                                             20 COMRAM     5     1      4
               _lcd_4bit_send_string
               _lcd_4bits_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bits_set_cursor                                 6     3      3   19109
                                             14 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 3     1      2   16754
                                             14 COMRAM     3     1      2
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   16407
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   43329
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_initialize                                  4     3      1   18599
                                             16 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   12110
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
       _lcd_8bits_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bits_send_enable_signal                         2     1      1    5039
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   24730
                                             15 COMRAM     4     3      1
_gpio_pin_direction_initialize_write
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   18207
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    5771
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    5219
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize_write                  7     6      1    5889
                                              8 COMRAM     7     6      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    4757
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _lcd_4bit_initialize
       _gpio_pin_direction_initialize_write
         _gpio_pin_write_logic
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_8bit_initialize
       _gpio_pin_direction_initialize_write
       _lcd_8bit_send_command
         _gpio_pin_write_logic
         _lcd_8bits_send_enable_signal
           _gpio_pin_write_logic
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bits_send_enable_signal
         _lcd_send_4bits
     _lcd_4bits_set_cursor
       _lcd_4bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bits_send_enable_signal
     _lcd_8bits_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1D      55       1       66.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      39        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 04 00:34:32 2024

                            ?_lcd_send_4bits 0037                                           l80 17CC  
                                         l75 1346                                           l85 1770  
                                         l98 1878                                          l103 1946  
                                        l200 1628                                          l122 1714  
                                        l115 1414                                          l142 1822  
                                        l129 169E                                          l170 18CE  
                                        l147 190A                                          l173 19F6  
                                        l318 115C                                          l431 1A0C  
                                        l176 19D0                                          l188 157C  
                                        l349 126C         __end_of_lcd_4bits_send_enable_signal 19F8  
               _lcd_4bits_send_enable_signal 19D2                                          _ret 0055  
                        led_initialize@F2888 0053                    ?_lcd_8bit_send_string_pos 0045  
                                        wreg 0FE8                        relay_initialize@F2884 004F  
               __end_of_lcd_8bit_send_string 1824                                         l2401 1172  
                                       l2411 1240                                         l2403 1192  
                                       l2405 119A                                         l2413 126A  
                                       l2421 187A                                         l2501 16A0  
                                       l2407 11F0                                         l2423 187A  
                                       l2503 16B4                                         l2441 19F4  
                                       l2433 19D2                                         l2425 188C  
                                       l2513 16CC                                         l2521 1712  
                                       l2505 16BC                                         l2601 15B0  
                                       l2435 19D2                                         l2427 18A0  
                                       l2451 19C0                                         l2515 16F6  
                                       l2507 16C8                                         l2603 15C4  
                                       l2531 1652                                         l2461 1050  
                                       l2437 19DE                                         l2429 18B6  
                                       l2453 19CE                                         l2445 19AC  
                                       l2517 16F8                                         l2621 1840  
                                       l2605 15D8                                         l2541 1682  
                                       l2525 162A                                         l2701 17EA  
                                       l2471 1142                                         l2463 1058  
                                       l2439 19E6                                         l2551 1282  
                                       l2447 19AC                                         l2519 1708  
                                       l2631 1348                                         l2623 1858  
                                       l2607 15EC                                         l2711 190C  
                                       l2543 1692                                         l2527 163E  
                                       l2703 1802                                         l2465 10AE  
                                       l2473 115A                                         l2457 1020  
                                       l2481 1772                                         l2561 12A2  
                                       l2553 128A                                         l2449 19B8  
                                       l2633 135C                                         l2625 185A  
                                       l2617 1824                                         l2609 1626  
                                       l2713 191C                                         l2537 1656  
                                       l2545 169C                                         l2529 1646  
                                       l2705 1804                                         l2467 10FE  
                                       l2459 1030                                         l2483 1782  
                                       l2571 12DA                                         l2563 12AE  
                                       l2555 129E                                         l2651 13A8  
                                       l2643 137C                                         l2635 1364  
                                       l2491 1716                                         l2627 1876  
                                       l2619 1838                                         l2715 1924  
                                       l2539 1680                                         l2707 1820  
                                       l2731 1908                                         l2723 18D0  
                                       l2469 1102                                         l2485 178A  
                                       l2581 131E                                         l2573 12F4  
                                       l2565 12B0                                         l2549 126E  
                                       l2661 13EC                                         l2653 13B4  
                                       l2645 1388                                         l2637 1378  
                                       l2493 1726                                         l2717 1936  
                                       l2725 18E0                                         l2399 115E  
                                       l2487 17CA                                         l2583 132A  
                                       l2575 12FA                                         l2567 12C0  
                                       l2663 13F8                                         l2655 13CE  
                                       l2647 138A                                         l2735 19F8  
                                       l2495 172E                                         l2591 157E  
                                       l2719 1944                                         l2671 14D2  
                                       l2727 18E8                                         l2921 112C  
                                       l2585 1336                                         l2577 1306  
                                       l2569 12CE                                         l2665 1404  
                                       l2657 13D4                                         l2649 139A  
                                       l2497 176E                                         l2593 1582  
                                       l2681 1504                                         l2673 14D6  
                                       l2729 18FA                                         l2923 1254  
                                       l2579 1312                                         l2587 1344  
                                       l2659 13E0                                         l2667 1412  
                                       l2595 1584                                         l2683 1518  
                                       l2675 14D8                                         l2597 1594  
                                       l2917 1554                                         l2685 152C  
                                       l2677 14E8                                         l2919 1600  
                                       l2599 159C                                         l2679 14F0  
                                       l2687 1540                                         l2697 17CE  
                                       l2689 157A                                         l2881 1430  
                                       l2699 17E2                                         l2891 1476  
                                       l2893 148C                                         l2877 1416  
                                       l2895 14A2                                         l2887 1434  
                                       l2879 141A                                         l2897 14A4  
                                       l2889 1460                                         l2899 14B4  
                                       STR_1 101E                                         STR_2 100F  
                                       STR_3 1001                                         STR_4 101D  
                                       STR_5 101D                                         STR_6 101B  
         lcd_8bit_send_command@l_pin_counter 003E                                         u1410 1030  
                                       u1411 102C                                         u1404 120E  
                                       u1420 1050                                         u1405 120A  
                                       u1421 104C                                         _LATA 0F89  
                                       u1510 1708                                         _LATB 0F8A  
                                       u1511 1704                                         _LATC 0F8B  
                                       u1504 16E6                                         u1600 135C  
                                       u1520 163E                                         _LATD 0F8C  
                                       u1505 16E2                                         u1601 1358  
                                       u1521 163A                                         _LATE 0F8D  
                                       u1370 1172                                         u1450 1118  
                                       u1434 1076                                         u1610 139A  
                                       u1371 116E                                         u1451 1112  
                                       u1435 1072                                         u1611 1396  
                                       u1380 1192                                         u1460 111A  
                                       u1444 10CC                                         u1540 1692  
                                       u1620 14E8                                         u1381 118E  
                                       u1445 10C8                                         u1541 168E  
                                       u1621 14E4                                         u1470 1782  
                                       u1550 1282                                         u1534 1670  
                                       u1630 17E2                                         u1471 177E  
                                       u1551 127E                                         u1535 166C  
                                       u1631 17DE                                         u1560 12C0  
                                       u1480 1726                                         u1640 1820  
                                       u1561 12BC                                         u1481 1722  
                                       u1641 181C                                         u1394 11B8  
                                       u1490 16B4                                         u1570 1594  
                                       u1650 191C                                         u1395 11B4  
                                       u1491 16B0                                         u1571 1590  
                                       u1651 1918                                         u1580 1838  
                                       u1660 18E0                                         u1581 1834  
                                       u1661 18DC                                         u1590 1876  
                                       u1830 14B4                                         u1591 1872  
                                       u1831 14B0                                         u1907 12E0  
                                       u1917 12F6                                         u1927 19E0  
                                       u1847 146A                                         u1857 13A0  
                                       u1867 13BA                                         u1877 13D0  
                                       u1887 19BA                                         u1897 12C6  
                       _lcd_4bit_send_string 1824                                         _lcd1 0029  
                                       _lcd2 001F                                         _main 1416  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       prodl 0FF3                                         start 0000  
              __end_of_lcd_8bit_send_command 1716                                 ___param_bank 0000  
                      _lcd_4bit_send_command 1772                 lcd_4bit_send_string_pos@data 0046  
                       _gpio_pin_write_logic 115E               lcd_4bit_send_string_pos@column 0045  
                                      ?_main 002F                     ??_application_initialize 0043  
                        relay_turn_off@F2894 004D                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                ?_lcd_4bits_send_enable_signal 0037  
                    lcd_8bits_set_cursor@lcd 003F                      lcd_8bits_set_cursor@ret 0044  
                    lcd_8bits_set_cursor@row 0040                     ?_lcd_8bit_send_char_data 0039  
                      ?_lcd_4bit_send_string 003D                                        tablat 0FF5  
                                      status 0FD8                              __initialization 1948  
                               __end_of_main 14D2                        ?_gpio_pin_write_logic 002F  
                              _lat_registers 000B                                       ??_main 004A  
                              __activetblptr 0002                             led_turn_on@F2893 0052  
           __end_of_lcd_4bit_send_string_pos 1948                       ?_lcd_4bit_send_command 003A  
                       _lcd_8bit_send_string 17CE                                       clear_0 196E  
                                     isa$std 0001                  lcd_8bit_send_string_pos@lcd 0045  
                lcd_8bit_send_string_pos@ret 0049                  lcd_8bit_send_string_pos@row 0046  
                               __pdataCOMRAM 0001                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                 lcd_8bit_initialize@l_counter 0041  
                     ??_lcd_4bit_send_string 003F              lcd_8bits_send_enable_signal@lcd 0037  
            lcd_8bits_send_enable_signal@ret 0038                                   __accesstop 0080  
                    __end_of__initialization 1974                   lcd_4bits_set_cursor@column 003F  
                              ___rparam_used 0001                             ??_lcd_send_4bits 0039  
                    _lcd_4bit_send_char_data 1716                       ??_gpio_pin_write_logic 0031  
                             __pcstackCOMRAM 002F                        ?_lcd_8bit_send_string 003F  
                   lcd_4bit_send_command@lcd 003A                     lcd_4bit_send_command@ret 003C  
                    lcd_4bit_send_string@lcd 003D                      lcd_4bit_send_string@ret 003F  
                     _application_initialize 19F8              lcd_4bits_send_enable_signal@lcd 0037  
                                 __pnvCOMRAM 0054                 __end_of_lcd_4bits_set_cursor 162A  
            lcd_4bits_send_enable_signal@ret 0038                       lcd_8bit_initialize@lcd 003F  
                     lcd_8bit_initialize@ret 0042               ??_lcd_8bits_send_enable_signal 0038  
                          led_turn_off@F2898 0051                              led_toggle@F2903 0050  
                  ?_lcd_4bit_send_string_pos 0043                               _tris_registers 0015  
                  ??_lcd_4bit_send_char_data 003C                                      __Hparam 0000  
                                    __Lparam 0000                       ??_lcd_8bit_send_string 0041  
                      _lcd_8bit_send_command 16A0                                 __psmallconst 1000  
                                    __pcinit 1948                                      __ramtop 1000  
                   _lcd_8bit_send_string_pos 18D0                                      __ptext0 1416  
                                    __ptext1 18D0                                      __ptext2 14D2  
                                    __ptext3 17CE                                      __ptext4 162A  
                                    __ptext5 190C                                      __ptext6 157E  
                                    __ptext7 1824                                      __ptext8 1716  
                                    __ptext9 19F8                      lcd_4bits_set_cursor@lcd 003D  
                    lcd_4bits_set_cursor@ret 0042                      lcd_4bits_set_cursor@row 003E  
               lcd_8bit_send_string_pos@data 0048                         end_of_initialization 1974  
                          lcd_send_4bits@lcd 0037                            lcd_send_4bits@ret 0039  
                              __Lmediumconst 0000                      ??_lcd_4bit_send_command 003C  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc2 0FDE  
                        _lcd_4bit_initialize 126E              __end_of_lcd_4bit_send_char_data 1772  
               __end_of_lcd_8bits_set_cursor 157E                         _lcd_4bits_set_cursor 157E  
                 lcd_4bit_send_char_data@lcd 003A                   lcd_4bit_send_char_data@ret 003C  
                       ?_lcd_4bit_initialize 003E                       ?_lcd_8bit_send_command 0039  
                         relay_turn_on@F2889 004E                            relay_toggle@F2899 004C  
                lcd_4bit_send_string_pos@lcd 0043                  lcd_4bit_send_string_pos@ret 0047  
                lcd_4bit_send_string_pos@row 0044               lcd_8bit_send_string_pos@column 0047  
                              __pidataCOMRAM 197E                        ?_lcd_4bits_set_cursor 003D  
                        start_initialization 1948                          _lcd_8bit_initialize 1348  
                    ?_application_initialize 002F                        ??_lcd_4bit_initialize 003F  
                 lcd_8bits_set_cursor@column 0041                         ?_lcd_8bit_initialize 003F  
                    _lcd_8bit_send_char_data 162A                     lcd_4bit_send_string@data 003E  
               lcd_4bit_send_command@command 003B                     lcd_8bit_send_command@lcd 0039  
                   lcd_8bit_send_command@ret 003D                                  __pbssCOMRAM 004C  
             __end_of_application_initialize 1A0E               ??_lcd_4bits_send_enable_signal 0038  
                       _lcd_8bits_set_cursor 14D2                        ??_lcd_8bit_initialize 0040  
                 ??_lcd_8bit_send_string_pos 0049                  lcd_8bit_send_char_data@data 003A  
                  gpio_pin_write_logic@logic 0030                       ??_lcd_4bits_set_cursor 0040  
                                __smallconst 1000         __end_of_lcd_8bits_send_enable_signal 19D2  
               _lcd_8bits_send_enable_signal 19AC                   lcd_send_4bits@data_command 0038  
                  ??_lcd_8bit_send_char_data 003B                        ?_lcd_8bits_set_cursor 003F  
                                _lcd_counter 0054                __end_of_lcd_4bit_send_command 17CE  
       lcd_8bit_send_char_data@l_pin_counter 003E  __end_of_gpio_pin_direction_initialize_write 115E  
      ??_gpio_pin_direction_initialize_write 0038         ?_gpio_pin_direction_initialize_write 0037  
        _gpio_pin_direction_initialize_write 1020                     _lcd_4bit_send_string_pos 190C  
                    gpio_pin_write_logic@pin 002F                      gpio_pin_write_logic@ret 0036  
                   ?_lcd_4bit_send_char_data 003A                                    copy_data0 195C  
              ?_lcd_8bits_send_enable_signal 0037                      ??_lcd_8bit_send_command 003B  
                                   __Hrparam 0000                                     __Lrparam 0000  
            __end_of_lcd_8bit_send_char_data 16A0                   lcd_8bit_send_char_data@lcd 0039  
                 lcd_8bit_send_char_data@ret 003D                                     __ptext10 1348  
                                   __ptext11 16A0                                     __ptext12 19AC  
                                   __ptext13 126E                                     __ptext14 1772  
                                   __ptext15 187A                                     __ptext16 19D2  
                                   __ptext17 1020                                     __ptext18 115E  
                     ??_lcd_8bits_set_cursor 0042             __end_of_lcd_8bit_send_string_pos 190C  
                                   isa$xinst 0000                 lcd_4bit_initialize@l_counter 0040  
               __end_of_lcd_4bit_send_string 187A                               _lcd_send_4bits 187A  
     gpio_pin_direction_initialize_write@pin 0037       gpio_pin_direction_initialize_write@ret 003D  
                __end_of_lcd_4bit_initialize 1348                 __end_of_gpio_pin_write_logic 126E  
                     __end_of_lcd_send_4bits 18D0                     lcd_8bit_send_string@data 0040  
                             _port_registers 0001                      lcd_8bit_send_string@lcd 003F  
                    lcd_8bit_send_string@ret 0041                  __end_of_lcd_8bit_initialize 1416  
               lcd_8bit_send_command@command 003A                  lcd_4bit_send_char_data@data 003B  
                 ??_lcd_4bit_send_string_pos 0047                       lcd_4bit_initialize@lcd 003E  
                     lcd_4bit_initialize@ret 0041  
